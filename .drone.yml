clone:
  recursive: true
build:
  backend:
    image: lunalang/buildenv:alpine-7.10
    auth_config:
      username:  $$DOCKERHUB_USER
      password:  $$DOCKERHUB_PASS
      email: $$DOCKERHUB_EMAIL
    commands:
      - date
      - mkdir -p .stack
      - export STACK_ROOT=$DRONE_DIR/.stack
      - mkdir -p dist/proto
      - scripts/genproto
      - scripts/gencabal
      - cd $DRONE_DIR/build/backend
      - stack build --only-snapshot
      - stack build --copy-bins --fast
      - cd $DRONE_DIR
      - ./run_tests.sh
      # - cd $DRONE_DIR
      # - 'if [ "$DRONE_BRANCH" = production -o "$DRONE_BRANCH" = fogger ]; then ./upload_backend.sh; fi'
      # - cd $DRONE_DIR/nodelab
      # - npm install
      # - bower install --allow-root
      # - mkdir -p .stack-work/install/x86_64-osx/custom-nbo-gui-20160201/ghcjs-0.2.0.20160201_ghc-7.10.3/bin/nodelab.jsexe/
      # - touch .stack-work/install/x86_64-osx/custom-nbo-gui-20160201/ghcjs-0.2.0.20160201_ghc-7.10.3/bin/nodelab.jsexe/all.js
      # - brunch build --env production
      # - 'if [ "$DRONE_BRANCH" = production -o "$DRONE_BRANCH" = fogger ]; then ./upload_dist.sh; fi'
      # - cd $DRONE_DIR && ./run_tests.sh
      # - date
cache:
  mount:
    - .stack

notify:
  slack:
    webhook_url: $$SLACK_URL
    username: "new_byte_order: $$BRANCH"
    channel: "#cd"
    on_started: false
    on_success: true
    on_failure: true
    template: "<{{ system.link_url }}/{{ repo.full_name }}/{{ build.number }}|build #{{ build.number}}>: *{{ build.status }}* by {{ build.author }}: <https://bitbucket.org/{{ repo.full_name }}/commits/$$COMMIT|$${COMMIT:0:7}>\n\n{{ build.message }}"

publish:
  docker:
    username:  $$DOCKERHUB_USER
    password:  $$DOCKERHUB_PASS
    email: $$DOCKERHUB_EMAIL
    repo: lunalang/luna-testing
    tag:
      - $${BRANCH##docker/}-latest
      - $${BRANCH##docker/}-b$$BUILD_NUMBER
    file: Dockerfile
    insecure: false
    storage_driver: aufs
    when:
      branch: docker/*

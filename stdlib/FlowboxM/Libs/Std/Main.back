
# ###### File ###################################

# class File:
#     def readFile self name:
#         ```getIO $ liftFIO1 hsLib_System_IO_readFile #{name}```

#     def writeFile self name content:
#         content = content.toString
#         ```getIO $ liftFIO2 hsLib_System_IO_writeFile #{name} #{content}```


###### Console ################################

class Console:
    def print self msg:
        ```print'' #{msg}```

###### List ###################################

def List.at self index:
    ```(flattenCtx `dot2` liftf2 (!!)) #{self} #{index}```

def List.+ self l2:
    ```liftf2 (++) #{self} #{l2}```

def List.contains self el:
    ```liftf2 (elem) (val #{el}) #{self}```

def List.length self:
    ```liftf length #{self}```

def List.each self callback:
    ```let {mymap = liftf2 map}```
    ```mymap (val $ call1 #{callback}) #{self}```

###### Bool ####################################

def Bool.not self:
    ```liftf not #{self}```

###### Int ####################################

def Int.+ a b:
    ```liftf2 (+) #{a} #{b}```

def Int.* a b:
    ```liftf2 (*) #{a} #{b}```

def Int./ a b:
    ```liftf2 (-) #{a} #{b}```

###### Float ##################################

def Float.+ a b:
    ```liftf2 (+) #{a} #{b}```

def Float./ a b:
    ```liftf2 (/) #{a} #{b}```

def Float.* a b:
    ```liftf2 (*) #{a} #{b}```

def Float.- a b:
    ```liftf2 (-) #{a} #{b}```


###############################################

class Vector a:
    x,y,z :: a

    def test self x:
        x

    def + self v2:
        Vector (self.x() + v2.x()) (self.y() + v2.y()) (self.z() + v2.z())

def main self:
    # v = Vector 1 2 3
    c = Console()
    # c.print v
    # c.print (v+v)

    a = [1..10].each x:
        Console().print x

    c.print $ a.at 5


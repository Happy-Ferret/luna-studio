import ```Flowbox.Graphics.Mockup```
import ```Flowbox.Graphics.Image.Image```
import ```Flowbox.Geom2D.Rasterizer```

class ```Bool```:
    True
    False

class ```Point2``` a:
    x,y :: a

class ```Maybe``` a:
    Just:
        unwarp :: a
    Nothing

class VectorPath a:
    points :: [Point2 a]
    closed :: Bool

alias Path = String

def load path:
    ```autoLift1 loadImageLuna #{path}```

def Image.save path:
    ```autoLift2 saveImageLuna #{path} #{self}```

def rasterizePath w h closed pointsA pointsB:
    ```liftF4 rasterizeVectorLuna #{w} #{h} #{closed} #{pointsA}```



def print msg:
    ```autoLift1 print #{msg}```

def main:
    print "- - - vector rasterization test - - -"
    points = [ Point2 212 209
             , Point2 211 114, Point2 329 109, Point2 338 210
             , Point2 450 211, Point2 456 331, Point2 343 330
             ]
    print points
    img = rasterizePath 512 512 True points
    img.save "test.png"

# class Wrapper:
#     list :: [Int]

# def main:
#     list = [1,2,3]
#     wrapper = Wrapper list

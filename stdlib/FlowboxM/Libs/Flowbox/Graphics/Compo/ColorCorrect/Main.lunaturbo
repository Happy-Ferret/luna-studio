#include ../../../Prelude.lunaturbo
#include ../../Image/Image.lunaturbo
#include ../../Math/Math.lunaturbo
#include ../../Matte/Matte.lunaturbo
#include ../../Color/Color.lunaturbo
#include ../../Geom2D/Geom.lunaturbo
#include ColorCorrection.lunaturbo

def main:
    print "color correct test"

    # - - - setup

    input = load "moonbow.jpg"

    # - - - mattes

    grad  = load "grad.png"
    imgMatte = self.imageMatte grad "rgba.r"

    vertices = [ ControlPoint (Point2 100.0 100.0) Nothing Nothing
               , ControlPoint (Point2 100.0 200.0) Nothing Nothing
               , ControlPoint (Point2 200.0 200.0) Nothing Nothing
               , ControlPoint (Point2 200.0 100.0) Nothing Nothing
               ]

    path  = Path True vertices
    shape = Shape [path]
    mask  = Mask path Nothing

    vectMatte = self.vectorMatte mask

    # - - - offset

    offValue = RGBA 0.5 0.5 0.5 0.5

    offseted = input.offset offValue Nothing
    # offseted.save "offseted.png"

    # - - - color correct

    black = RGBA 0.0 0.0 0.0 0.0
    white = RGBA 1.0 1.0 1.0 1.0

    # colorCC = ColorCC whiteM whiteM whiteM whiteM blackM

    # corrected = input.colorCorrect colorCC colorCC colorCC colorCC # for some reason the compilation hangs here ...
    # corrected.save "corrected.png"

    ()

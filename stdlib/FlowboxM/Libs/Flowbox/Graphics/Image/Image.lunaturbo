#
#                IMAGE
#

foreign haskell import Flowbox.Graphics.Image.Image as Image

foreign haskell class Image

foreign haskell def emptyImage:
    liftF0 Image.empty

foreign haskell def load path:
    autoLift1 realReadLuna path

foreign haskell def Image.save path:
    autoLift2 saveImageLuna path self

foreign haskell def Image.view name:
    liftF2 Image.lookup name self

# can't use this because of no matrix support in Luna?
# foreign haskell def Image.colorMatrix matrix:
#     liftF2 colorMatrixLuna matrix self

# foreign haskell def Image.removeChannel viewName channelName:
#     liftF3 removeChannelLuna viewName channelName self

foreign haskell def Image.getChannel viewName channelName:
    liftF3 getChannelLuna viewName channelName self

# foreign haskell def Image.insertChannel viewName channel:
#     liftF3 insertChannelLuna viewName channel self

foreign haskell def Image.deleteView name:
    liftF2 Image.delete name self

foreign haskell def Image.map f:
    liftF2 Image.map f self

# foreign haskell def Image.updateView f viewName:
#     liftF3 Image.update f viewName self

foreign haskell def Image.insertView view:
    liftF2 Image.insert view self

foreign haskell def imageSingleton view:
    liftF1 Image.singleton view

#@AllowOrphans

foreign haskell import qualified Data.Array.Accelerate as A

#include Prelude.lunaturbo
#include Graphics/Geom2D/Geom.lunaturbo
#include Graphics/Math/Math.lunaturbo
#include Graphics/Color/Color.lunaturbo
#include Graphics/Matte/Matte.lunaturbo

#include Graphics/Image/Image.lunaturbo
#include Graphics/Image/View.lunaturbo

#include Graphics/Image/Constants.lunaturbo
#include Graphics/Image/ColorCorrection.lunaturbo
#include Graphics/Image/Merge.lunaturbo
#include Graphics/Image/Noise.lunaturbo
#include Graphics/Image/Dithering.lunaturbo
#include Graphics/Image/Keying.lunaturbo

#include Graphics/Compo/FilterTransform/FilterTransform.lunaturbo

#
#                OTHER
#

alias Time=Float

def time:
    0.0

def render a path time:
    a.save path #FIXME: add time to path, e.g when path is "test$F4.png" and frame is 17 save to path "test0017.png"

def foo a:
	a

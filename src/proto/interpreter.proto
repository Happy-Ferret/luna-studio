///////////////////////////////////////////////////////////////////////////
// Copyright (C) Flowbox, Inc / All Rights Reserved
// Unauthorized copying of this file, via any medium is strictly prohibited
// Proprietary and confidential
// Flowbox Team <contact@flowbox.io>, 2014
///////////////////////////////////////////////////////////////////////////

package generated.proto.interpreter;

import "dep/crumb.proto";
import "data.proto";
import "mode.proto";



message CallPoint {
    required int32 libraryID = 1;
    required int32 nodeID    = 2;
}

message CallPointPath {
    required int32 projectID = 1;
    repeated CallPoint calls = 2;
}

message DefPoint {
    required int32 projectID = 1;
    required int32 libraryID = 2;
    required generated.proto.dep.crumb.Breadcrumbs breadcrumbs = 3;
}

message ProfileInfo {
    required CallPointPath callPointPath = 1;
    required double        cpuTime       = 2;
    required int64         realTime      = 3;
}

message CompileError {
    required CallPointPath callPointPath = 1;
    required string        errorMessage  = 2;
}

enum Status {
    Ready        = 1;
    Modified     = 2;
    NonCacheable = 3;
    NotInCache   = 4;
    Unknown      = 5;
}

message Interpreter {
    message WatchPoint {
        message Add {
            message Request {
                required CallPointPath watchPoint = 1;
            }
            message Update {
                required Request request = 1;
            }
        }
        message Remove {
            message Request {
                required CallPointPath watchPoint = 1;
            }
            message Update {
                required Request request = 1;
            }
        }
        message List {
            message Request { }
            message Status {
                required Request       request     = 1;
                repeated CallPointPath watchPoints = 2;
            }
        }
    }
    message Invalidate {
        message Request {
            required int32 nodeID    = 1;
            required generated.proto.dep.crumb.Breadcrumbs breadcrumbs = 2;
            required int32 libraryID = 3;
            required int32 projectID = 4;
            required int32 astID     = 5;
        }
        message Update {
            required Request request = 1;
        }
    }
    message Var {
        message Time {
            message Set {
                message Request {
                    required float value = 1;
                }
                message Update {
                    required Request request = 1;
                }
            }
            message Get {
                message Request { }
                message Status {
                    required Request request = 1;
                    required float   value   = 2;
                }
            }
        }
    }
    message SerializationMode {
        message Get {
            message Request {
                required CallPointPath callPointPath = 1;
            }
            message Status {
                required Request request = 1;
                repeated generated.proto.mode.Mode mode = 2;
            }
        }
        message Insert {
            message Request {
                required CallPointPath    callPointPath = 1;
                repeated generated.proto.mode.Mode mode = 2;
            }
            message Update {
                required Request request = 1;
            }
        }
        message Delete {
            message Request {
                required CallPointPath callPointPath = 1;
                repeated generated.proto.mode.Mode mode = 2;
            }
            message Update {
                required Request request = 1;
            }
        }
        message DeleteAll {
            message Request {
                required CallPointPath callPointPath = 1;
            }
            message Update {
                required Request request = 1;
            }
        }
    }
    message SetProjectID {
        message Request {
            required int32 projectID = 1;
        }
        message Update {
            required Request request = 1;
        }
    }
    message GetProjectID {
        message Request { }
        message Status {
            required Request request = 1;
            optional int32 projectID = 2;
        }
    }
    message SetMainPtr {
        message Request {
            required DefPoint mainPtr = 1;
        }
        message Update {
            required Request request = 1;
        }
    }
    message GetMainPtr {
        message Request { }
        message Status {
            required Request  request = 1;
            optional DefPoint mainPtr = 2;
        }
    }
    message Run {
        message Request {
            optional float timeValue = 1;
        }
        message Update  { 
            required Request      request       = 1;
            repeated ProfileInfo  profileInfos  = 2;
            repeated CompileError compileErrors = 3;
        }
    }
    message Value {
        message Request {
            required CallPointPath callPointPath = 1;
            required float         timeValue     = 2;
        }
        message Update {
            required CallPointPath                  callPointPath = 1;
            required Status                         status        = 2;
            repeated generated.proto.mode.ModeValue modeValue     = 3;
            required float                          timeValue     = 4;
        }
    }
    message Abort {
        message Request { }
        message Status {
            required Request request = 1;
        }
    }
    message Ping {
        message Request { }
        message Status  { 
            required Request request = 1;
        }
    }
    message Memory {
        message SetLimits {
            message Request {
                required int64 upper = 1;
                required int64 lower = 2;
            }
            message Update {
                required Request request = 1;
            }
        }
        message GetLimits {
            message Request { }
            message Status {
                required Request request = 1;
                required int64   upper   = 2;
                required int64   lower   = 3;
            }
        }
    }
    message Exit {
        message Request { }
        message Update {
            required Request request = 1;
        }
    }
}

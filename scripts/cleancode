#!/usr/bin/python
from utils.glob2 import glob
import re

def main ():
	paths = glob("**/*.hs")
	bodys = []
	for path in paths:
		with open(path, 'r') as file:
			bodys.append(file.read())
	newbodys = map(clean_imports, bodys)
	for (path, body, nbody) in zip(paths, bodys, newbodys):
		if body != nbody:
			with open(path, 'w') as file:
				file.write(nbody)

def clean_imports(src):
	match = re.compile (r'^import[\t ]*(?P<qualified>qualified)?[\t ]*(?P<path>[^\s]*)[\t ]*(?P<as>as)?[\t ]*(?P<target>[^\s]*|\(.*\))[\t ]*$', re.MULTILINE)
	matches = [m for m in match.finditer(src)]
	matches.reverse()
	paths = [m.group('path') for m in matches]
	pathmaxlen = max(map(len,paths)) if paths else 0
	for m in matches:
		qualified = 'qualified '
		qualified = qualified if m.group('qualified') else ' '*len(qualified)
		path      = m.group('path')
		path      = path + ' '*(pathmaxlen - len(path)+1)
		ask       = 'as ' if m.group('as') else '  '
		target    = m.group('target')
		imp = "import " + qualified + path + ask + target
		src = src[:m.start()] + imp + src[m.end():]
	return src


main()
# print clean_imports(input)
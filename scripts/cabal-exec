#!/usr/bin/env python2.7
###########################################################################
## Copyright (C) Flowbox, Inc / All Rights Reserved
## Unauthorized copying of this file, via any medium is strictly prohibited
## Proprietary and confidential
## Flowbox Team <contact@flowbox.io>, 2014
###########################################################################


"""
Cabal-Exec.

Usage:
  cabal-exec [--pkgs=<packages>] -- <cmd>...
  cabal-exec -- <cmd>...
  cabal-exec (-h | --help)
  cabal-exec --version

Options:
  -h --help             Show this screen.
  --version             Show version.
  --pkgs=<packages>     A colon-separated list of packages to run the command on.
    
"""

from   docopt import docopt
from   config.packages import pkgDb
import sys
import os
import os.path
from   subprocess      import call
import utils.errors    as     errors
from   utils.colors    import print_info, print_error
import signal
from   contextlib import contextmanager



@contextmanager
def cwd(newpath):
    oldpath = os.getcwd()
    os.chdir(newpath)
    yield
    os.chdir(oldpath)

@contextmanager
def signals(signalnum, handler):
    old_action = signal.signal(signalnum, handler)
    yield
    signal.signal(signalnum, old_action)

def main():
    args = docopt(__doc__, version='cabal-exec 0.1')

    with cwd(os.path.dirname(os.path.dirname(os.path.realpath(__file__)))):
        sboxEnv   = "FDEV_TARGETS"

        if not args["--pkgs"]:
            if not os.environ.has_key(sboxEnv):
                print_error("Flowbox development environment not initialized.")
                sys.exit(1)
            pkgNames = os.environ[sboxEnv].split(":")
        else:
            pkgsNames = args["--pkgs"].split(":")

        pkgs = [pkgDb[name] for name in pkgNames]

        for pkg in pkgs:
            print_info ("Starting cabal-exec for %s" % pkg.name)
            with signals(signal.SIGINT, signal.SIG_IGN):
                with cwd(os.environ["PWD"]):
                    if args["<cmd>"] and len(args["<cmd>"]) < 2:
                        internal_cmd = ' '.join(args["<cmd>"])
                    else:
                        internal_cmd = ' '.join(args["<cmd>"][:1] + ["--"] + args["<cmd>"][1:])
                    
                    cmd = "cabal --sandbox={pkg.sbox}/cabal.sandbox.config exec {internal_cmd}".format(**locals())
                    print "Executing command:", cmd
                    call(cmd, shell=True)


if __name__ == "__main__":
    main()

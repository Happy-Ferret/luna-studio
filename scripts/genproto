#!/usr/bin/python
import os.path
import os
import sys
from utils.glob2 import glob
from subprocess import call
import shutil
from utils.colors import print_error



cwd         = os.getcwd()
cpp_gen_dirs = [os.path.join(cwd, 'tools/batch-clients/performance/zmq/generated')
               ,os.path.join(cwd, 'tools/batch-clients/performance/tcp/generated')
               ,os.path.join(cwd, 'tools/batch-clients/tcp-cpp/generated')]

imports = "-I /usr/include -I /usr/local/include -I libs/luna/src/proto -I libs/batch/src/proto"

def main():
    proto_paths = glob('**/*.proto')
    prepare_cpp_dir()
    for path in proto_paths:
        prepare_hs_dir(path)
    for path in proto_paths:
        run_protoc(path)

def run_protoc(proto_path):
    proto_dir  = os.path.dirname(proto_path)
    hs_gen_dir = os.path.join(proto_dir, '../../dist/gen')
    proto_name = os.path.basename(proto_path)

    args = ' ' + imports + ' -I ' + proto_dir + ' ' + proto_path

    for cpp_gen_dir in cpp_gen_dirs:
        try_call('protoc --cpp_out=' + cpp_gen_dir + args)
    
    try_call('hprotoc -d ' + hs_gen_dir + args)

def prepare_hs_dir(proto_path):
    proto_dir  = os.path.dirname(proto_path)
    hs_gen_dir = '../../dist/gen'

    shutil.rmtree(os.path.join(proto_dir, hs_gen_dir), True)

def prepare_cpp_dir():
    for cpp_gen_dir in cpp_gen_dirs:
        shutil.rmtree(cpp_gen_dir, True)
        os.makedirs(cpp_gen_dir)

def try_call(cmd):
    if call(cmd, shell=True): fatal()

def fatal():
    print_error ("ERROR")
    sys.exit(1)

main()


#!/usr/bin/env python2.7

###########################################################################
## Copyright (C) Flowbox, Inc / All Rights Reserved
## Unauthorized copying of this file, via any medium is strictly prohibited
## Proprietary and confidential
## Flowbox Team <contact@flowbox.io>, 2014
###########################################################################

from   config.packages import pkgDb
import sys
import os
import os.path
from   subprocess      import call
import utils.errors    as     errors
from   utils.colors    import print_info, print_error
import signal
import argparse


class SplitByColon(argparse.Action):
    def __call__(self, parser, namespace, values, option_string=None):
        setattr(namespace, self.dest, values.split(':'))


def main():
    argparser = argparse.ArgumentParser(description="Run REPL from sandbox",
                                        epilog="Note that the old syntax for selecting packages is deprecated.")
    argparser.add_argument('packages',       nargs='*',           help="Packages to preload")
    argparser.add_argument('-i',             action=SplitByColon, help="Append a colon-separated list of dirs to the search path")
    argparser.add_argument('--with-prelude', action='store_true', help="Do not add `-XNoImplicitPrelude` to GHCi options")
    args = argparser.parse_args()

    rootPath  = os.path.dirname(os.path.dirname(os.path.realpath(__file__)))
    sboxEnv   = "FDEV_TARGETS"
    os.chdir(rootPath)

    pkgsNames = args.packages
    if not args.packages:
        if not os.environ.has_key(sboxEnv):
            print_error("Flowbox development environment not initialized.")
            sys.exit(1)
        pkgNames = os.environ[sboxEnv].split(":")

    pkgs = [pkgDb[name] for name in pkgNames]

    for pkg in pkgs:
        print_info ("Starting ghci for %s" % pkg.name)
        old_action = signal.signal(signal.SIGINT, signal.SIG_IGN)
        os.chdir(os.environ["PWD"])
        noprelude = "-XNoImplicitPrelude"
        if args.with_prelude:
            noprelude = ""
        searchpath = ' '.join('-i'+d for d in args.i or [])
        cmd = "cabal --sandbox={pkg.sbox}/cabal.sandbox.config exec ghci -- {noprelude} {searchpath}".format(**locals())
        print "Executing command:", cmd
        call(cmd, shell=True)
        signal.signal(signal.SIGINT, old_action)         # restore original signal handler
        os.chdir(rootPath)


if __name__ == "__main__":
    main()

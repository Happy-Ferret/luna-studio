---------------------------------------------------
-- This is a generated cabal configuration file. --
-- DO NOT EDIT!                                  --
-- Use gencabal instead.                         --
---------------------------------------------------

Name:                   flowbox-graphics
Version:                0.16.0.0
Cabal-version:          >= 1.10
Tested-with:            GHC == 7.8.*
Build-type:             Custom

Flag cuda
  Description:          Enable the CUDA parallel backend for NVIDIA GPUs
  Default:              True

Library
  Hs-Source-Dirs:         src, dist/gen
  GHC-Options:            -Wall -O2
  Default-Extensions:     DoAndIfThenElse,
                          NoImplicitPrelude,
                          TemplateHaskell
  Default-Language:       Haskell2010

  Exposed-modules: 
        Flowbox.Animation.Controller,
        Flowbox.Animation.Model,
        Flowbox.Data.MapTree,
        Flowbox.Data.Set,
        Flowbox.Geom2D.ControlPoint,
        Flowbox.Geom2D.Conversion,
        Flowbox.Geom2D.CubicBezier,
        Flowbox.Geom2D.HierarchicalPath,
        Flowbox.Geom2D.Mask,
        Flowbox.Geom2D.Path,
        Flowbox.Geom2D.QuadraticBezier,
        Flowbox.Geom2D.Rasterizer,
        Flowbox.Geom2D.Rectangle,
        Flowbox.Geom2D.Shape,
        Flowbox.Geom2D.Accelerate.Basic,
        Flowbox.Geom2D.Accelerate.CubicBezier,
        Flowbox.Geom2D.Accelerate.QuadraticBezier,
        Flowbox.Geom2D.Accelerate.CubicBezier.Solve,
        Flowbox.Geom2D.Accelerate.QuadraticBezier.Solve,
        Flowbox.Geom2D.CubicBezier.Conversion,
        Flowbox.Geom2D.CubicBezier.Solve,
        Flowbox.Geom2D.QuadraticBezier.Conversion,
        Flowbox.Geom2D.Shape.Conversion,
        Flowbox.Graphics.Memory,
        Flowbox.Graphics.Mockup,
        Flowbox.Graphics.Prelude,
        Flowbox.Graphics.Serialization,
        Flowbox.Graphics.Color.ChromaticAdaptation,
        Flowbox.Graphics.Color.CMY,
        Flowbox.Graphics.Color.CMYK,
        Flowbox.Graphics.Color.Color,
        Flowbox.Graphics.Color.Companding,
        Flowbox.Graphics.Color.Conversion,
        Flowbox.Graphics.Color.Gamma,
        Flowbox.Graphics.Color.Helpers,
        Flowbox.Graphics.Color.HSL,
        Flowbox.Graphics.Color.HSV,
        Flowbox.Graphics.Color.Illuminants,
        Flowbox.Graphics.Color.Profile,
        Flowbox.Graphics.Color.RGB,
        Flowbox.Graphics.Color.RGBA,
        Flowbox.Graphics.Color.Transfer,
        Flowbox.Graphics.Color.YCbCr,
        Flowbox.Graphics.Color.YCbCr_HD,
        Flowbox.Graphics.Color.CIE.Lab,
        Flowbox.Graphics.Color.CIE.Luv,
        Flowbox.Graphics.Color.CIE.XyY,
        Flowbox.Graphics.Color.CIE.XYZ,
        Flowbox.Graphics.Color.CMY.Conversion,
        Flowbox.Graphics.Color.CMYK.Conversion,
        Flowbox.Graphics.Color.HSL.Conversion,
        Flowbox.Graphics.Color.HSV.Conversion,
        Flowbox.Graphics.Color.Profile.ACESRGB,
        Flowbox.Graphics.Color.Profile.AdobeRGB,
        Flowbox.Graphics.Color.Profile.AlexaWideGamutRGB,
        Flowbox.Graphics.Color.Profile.AppleRGB,
        Flowbox.Graphics.Color.Profile.BestRGB,
        Flowbox.Graphics.Color.Profile.BetaRGB,
        Flowbox.Graphics.Color.Profile.BruceRGB,
        Flowbox.Graphics.Color.Profile.CIERGB,
        Flowbox.Graphics.Color.Profile.ColorMatchRGB,
        Flowbox.Graphics.Color.Profile.DonRGB4,
        Flowbox.Graphics.Color.Profile.ECIRGB,
        Flowbox.Graphics.Color.Profile.EktaSpacePS5,
        Flowbox.Graphics.Color.Profile.NTSCRGB,
        Flowbox.Graphics.Color.Profile.PALSECAMRGB,
        Flowbox.Graphics.Color.Profile.ProPhotoRGB,
        Flowbox.Graphics.Color.Profile.SMPTE_CRGB,
        Flowbox.Graphics.Color.Profile.SRGB,
        Flowbox.Graphics.Color.Profile.WideGamutRGB,
        Flowbox.Graphics.Color.RGB.Conversion,
        Flowbox.Graphics.Color.RGBA.Conversion,
        Flowbox.Graphics.Color.YCbCr.Conversion,
        Flowbox.Graphics.Color.YCbCr_HD.Conversion,
        Flowbox.Graphics.Composition.Color,
        Flowbox.Graphics.Composition.Dither,
        Flowbox.Graphics.Composition.EdgeBlur,
        Flowbox.Graphics.Composition.Filter,
        Flowbox.Graphics.Composition.Histogram,
        Flowbox.Graphics.Composition.Keying,
        Flowbox.Graphics.Composition.Merge,
        Flowbox.Graphics.Composition.Transform,
        Flowbox.Graphics.Composition.Generator.Gradient,
        Flowbox.Graphics.Composition.Generator.Raster,
        Flowbox.Graphics.Composition.Generator.Shape,
        Flowbox.Graphics.Composition.Generator.Noise.Billow,
        Flowbox.Graphics.Composition.Generator.Noise.Internal,
        Flowbox.Graphics.Composition.Generator.Noise.Perlin,
        Flowbox.Graphics.Composition.Generator.Noise.RidgedMulti,
        Flowbox.Graphics.Composition.Generator.Noise.Turbulence,
        Flowbox.Graphics.Image.Channel,
        Flowbox.Graphics.Image.Error,
        Flowbox.Graphics.Image.Image,
        Flowbox.Graphics.Image.Matte,
        Flowbox.Graphics.Image.View,
        Flowbox.Graphics.Image.IO.BMP,
        Flowbox.Graphics.Image.IO.ImageMagick,
        Flowbox.Graphics.Image.IO.OpenEXR,
        Flowbox.Graphics.Mockup.Basic,
        Flowbox.Graphics.Mockup.ColorCorrect,
        Flowbox.Graphics.Mockup.Curves,
        Flowbox.Graphics.Mockup.Filter,
        Flowbox.Graphics.Mockup.Generator,
        Flowbox.Graphics.Mockup.Keying,
        Flowbox.Graphics.Mockup.Matte,
        Flowbox.Graphics.Mockup.Merge,
        Flowbox.Graphics.Mockup.Noise,
        Flowbox.Graphics.Mockup.Transform,
        Flowbox.Graphics.Shader.Matrix,
        Flowbox.Graphics.Shader.Pipe,
        Flowbox.Graphics.Shader.Rasterizer,
        Flowbox.Graphics.Shader.Sampler,
        Flowbox.Graphics.Shader.Shader,
        Flowbox.Graphics.Shader.Stencil,
        Flowbox.Graphics.Utils.Accelerate,
        Flowbox.Graphics.Utils.Linear,
        Flowbox.Graphics.Utils.Utils,
        Flowbox.Math.BitonicSorterGenerator,
        Flowbox.Math.Index,
        Flowbox.Math.Matrix,
        Flowbox.Math.Numeric,
        Flowbox.Math.Transform,
        Flowbox.Math.Function.Construct,
        Flowbox.Math.Function.CurveGUI,
        Flowbox.Math.Function.Model,
        Flowbox.Math.Function.Segment,
        Flowbox.Math.Function.Serialization,
        Flowbox.Math.Function.Solve,
        Flowbox.Math.Function.Accelerate.BSpline

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  accelerate     == 0.16.*,
                  accelerate-io  == 0.16.*,
                  accelerate-fft == 0.16.*,
                  algebraic       > 0.1,
                  binary,
                  bmp,
                  bytestring,
                  cairo,
                  containers,
                  cubicbezier,
                  diagrams-cairo,
                  diagrams-lib  >= 1.2.0.8 && <= 1.2.0.9,
                  distributive,
                  either,
                  errors,
                  filepath,
                  flowbox-serialization,
                  flowbox-utils,
                  glib <= 0.13.1.0,
                  imagemagick   >= 0.0.3.6,
                  JuicyPixels,
                  lifted-base,
                  linear,
                  linear-accelerate,
                  monad-control,
                  mtl,
                  openexr,
                  profunctors,
                  protocol-buffers,
                  protocol-buffers-descriptor,
                  parallel,
                  resourcet,
                  split,
                  system-filepath,
                  template-haskell,
                  thyme,
                  transformers        == 0.3.0.0,
                  transformers-compat  < 0.4,
                  vector,
                  vector-space     < 0.9,
                  luna-target-ghchs
        -- vector-space < 0.9 is a temporal constrain until https://github.com/diagrams/active/issues/13 is resolved

-- == test non numeric animation ==

Executable test_non_numeric

  Main-Is:        NonNumericAnimation.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -fno-full-laziness
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude,
                          DoAndIfThenElse,
                          TemplateHaskell
  Default-Language:       Haskell2010


  Build-Depends:  base           == 4.7.*,
                  assert,
                  linear,
                  algebraic,
                  flowbox-utils,
                  flowbox-graphics,
                  lens

-- == HSpec tests ==

Test-suite hspec_tests
  type: exitcode-stdio-1.0

  if !flag(cuda)
    buildable: False

  Main-Is:        tests.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -fno-full-laziness
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude,
                          DoAndIfThenElse,
                          TemplateHaskell
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  accelerate-fft,
                  algebraic,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  split,
                  vector,
                  hspec,
                  HUnit,
                  QuickCheck,
                  directory,
                  download-curl,
                  bytestring,
                  aeson

-- == test generator ==

Executable test_generator
  if !flag(cuda)
    buildable: False

  Main-Is:        Generator.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -fno-full-laziness
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude,
                          DoAndIfThenElse,
                          TemplateHaskell
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  accelerate-fft,
                  algebraic,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  split,
                  vector

-- == test shape and bezier (curves) ==

Executable test_curves
  if !flag(cuda)
    buildable: False

  Main-Is:        Curves.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude,
                          DoAndIfThenElse,
                          TemplateHaskell
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  split,
                  cubicbezier,
                  vector

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

-- == test func model ==

Executable test_func
  if !flag(cuda)
    buildable: False

  Main-Is:        Func.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude,
                          DoAndIfThenElse,
                          TemplateHaskell
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  flowbox-utils,
                  flowbox-graphics,
                  lens,
                  split,
                  cubicbezier

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

-- == test merge ==

Executable test_merge
  if !flag(cuda)
    buildable: False

  Main-Is:        Merge.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  split,
                  vector

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

-- == test color ==

Executable test_color
  if !flag(cuda)
    buildable: False

  Main-Is:        Color.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  QuickCheck,
                  split,
                  vector

Executable test_serialization
  if !flag(cuda)
    buildable: False

  Main-Is:        Serialization.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  algebraic,
                  accelerate,
                  accelerate-io,
                  base           == 4.7.*,
                  bytestring,
                  flowbox-graphics,
                  flowbox-serialization,
                  flowbox-utils,
                  JuicyPixels,
                  protocol-buffers,
                  split,
                  vector


-- == test vector rasterization ==

Executable test_vector_rasterization
  if !flag(cuda)
    buildable: False

  Main-Is:        VectorRasterization.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  bytestring,
                  vector-space,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  QuickCheck,
                  split,
                  thyme,
                  vector

-- == test vector rasterizationL ==

Executable test_vector_rasterizationL
  if !flag(cuda)
    buildable: False

  Main-Is:        VectorRasterizationL.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  bytestring,
                  vector-space,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  QuickCheck,
                  split,
                  thyme,
                  vector

-- == test mockup ==

Executable mockup
  if !flag(cuda)
    buildable: False

  Main-Is:        Mockup.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  bytestring,
                  vector-space,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  QuickCheck,
                  split,
                  vector

-- == test hueCorrect  ==

Executable test_hue_correct
  if !flag(cuda)
    buildable: False

  Main-Is:        HueCorrect.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  bytestring,
                  vector-space,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  QuickCheck,
                  split,
                  vector

-- == test transformations  ==

Executable test_transformations
  if !flag(cuda)
    buildable: False

  Main-Is:        Transformations.hs
  Hs-Source-Dirs: test

  Ghc-options:          -O2 -Wall -threaded -rtsopts -eventlog
  Ghc-prof-options:     -auto-all

  Default-Extensions:     NoImplicitPrelude
  Default-Language:       Haskell2010

  if flag(cuda)
    CPP-options:        -DACCELERATE_CUDA_BACKEND
    Build-Depends:      accelerate-cuda  == 0.16.*

  Build-Depends:  base           == 4.7.*,
                  linear,
                  accelerate,
                  accelerate-io,
                  algebraic,
                  bytestring,
                  vector-space,
                  flowbox-utils,
                  flowbox-graphics,
                  JuicyPixels,
                  lens,
                  QuickCheck,
                  split,
                  vector

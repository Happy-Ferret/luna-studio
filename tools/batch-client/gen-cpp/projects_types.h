/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef projects_TYPES_H
#define projects_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>

#include "attrs_types.h"


namespace flowbox { namespace batch { namespace projects {

typedef int32_t ProjectID;

typedef struct _Project__isset {
  _Project__isset() : name(false), path(false), attribs(true), projectID(true) {}
  bool name;
  bool path;
  bool attribs;
  bool projectID;
} _Project__isset;

class Project {
 public:

  static const char* ascii_fingerprint; // = "DF949FB5BDEF3F5D19F49DCE2593B936";
  static const uint8_t binary_fingerprint[16]; // = {0xDF,0x94,0x9F,0xB5,0xBD,0xEF,0x3F,0x5D,0x19,0xF4,0x9D,0xCE,0x25,0x93,0xB9,0x36};

  Project() : name(), path(), projectID(-1) {

  }

  virtual ~Project() throw() {}

  std::string name;
  std::string path;
   ::flowbox::batch::attrs::Attributes attribs;
  ProjectID projectID;

  _Project__isset __isset;

  void __set_name(const std::string& val) {
    name = val;
    __isset.name = true;
  }

  void __set_path(const std::string& val) {
    path = val;
    __isset.path = true;
  }

  void __set_attribs(const  ::flowbox::batch::attrs::Attributes& val) {
    attribs = val;
    __isset.attribs = true;
  }

  void __set_projectID(const ProjectID val) {
    projectID = val;
    __isset.projectID = true;
  }

  bool operator == (const Project & rhs) const
  {
    if (__isset.name != rhs.__isset.name)
      return false;
    else if (__isset.name && !(name == rhs.name))
      return false;
    if (__isset.path != rhs.__isset.path)
      return false;
    else if (__isset.path && !(path == rhs.path))
      return false;
    if (__isset.attribs != rhs.__isset.attribs)
      return false;
    else if (__isset.attribs && !(attribs == rhs.attribs))
      return false;
    if (__isset.projectID != rhs.__isset.projectID)
      return false;
    else if (__isset.projectID && !(projectID == rhs.projectID))
      return false;
    return true;
  }
  bool operator != (const Project &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Project & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(Project &a, Project &b);

}}} // namespace

#endif

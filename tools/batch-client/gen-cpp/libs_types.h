/**
 * Autogenerated by Thrift Compiler (0.9.0)
 *
 * DO NOT EDIT UNLESS YOU ARE SURE THAT YOU KNOW WHAT YOU ARE DOING
 *  @generated
 */
#ifndef libs_TYPES_H
#define libs_TYPES_H

#include <thrift/Thrift.h>
#include <thrift/TApplicationException.h>
#include <thrift/protocol/TProtocol.h>
#include <thrift/transport/TTransport.h>





typedef int32_t LibID;

typedef struct _Library__isset {
  _Library__isset() : libID(true), name(false), path(false) {}
  bool libID;
  bool name;
  bool path;
} _Library__isset;

class Library {
 public:

  static const char* ascii_fingerprint; // = "EA49C8C1262074DF53C913E79A866B9E";
  static const uint8_t binary_fingerprint[16]; // = {0xEA,0x49,0xC8,0xC1,0x26,0x20,0x74,0xDF,0x53,0xC9,0x13,0xE7,0x9A,0x86,0x6B,0x9E};

  Library() : libID(-1), name(), path() {
  }

  virtual ~Library() throw() {}

  LibID libID;
  std::string name;
  std::string path;

  _Library__isset __isset;

  void __set_libID(const LibID val) {
    libID = val;
    __isset.libID = true;
  }

  void __set_name(const std::string& val) {
    name = val;
    __isset.name = true;
  }

  void __set_path(const std::string& val) {
    path = val;
    __isset.path = true;
  }

  bool operator == (const Library & rhs) const
  {
    if (__isset.libID != rhs.__isset.libID)
      return false;
    else if (__isset.libID && !(libID == rhs.libID))
      return false;
    if (__isset.name != rhs.__isset.name)
      return false;
    else if (__isset.name && !(name == rhs.name))
      return false;
    if (__isset.path != rhs.__isset.path)
      return false;
    else if (__isset.path && !(path == rhs.path))
      return false;
    return true;
  }
  bool operator != (const Library &rhs) const {
    return !(*this == rhs);
  }

  bool operator < (const Library & ) const;

  uint32_t read(::apache::thrift::protocol::TProtocol* iprot);
  uint32_t write(::apache::thrift::protocol::TProtocol* oprot) const;

};

void swap(Library &a, Library &b);



#endif

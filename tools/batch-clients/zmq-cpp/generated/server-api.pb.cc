// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server-api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace batch {

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_Method_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Response_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Exception_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Exception_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_LS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_LS_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_LS_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_LS_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_LS_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_LS_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Stat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Stat_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Stat_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Stat_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Stat_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Stat_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MkDir_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MkDir_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MkDir_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MkDir_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MkDir_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MkDir_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Touch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Touch_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Touch_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Touch_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Touch_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Touch_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_RM_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_RM_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_RM_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_RM_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_RM_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_RM_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_CP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_CP_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_CP_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_CP_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_CP_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_CP_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MV_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MV_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MV_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MV_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MV_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MV_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_Libraries_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_Libraries_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_Libraries_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_Libraries_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_Libraries_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_Libraries_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LibraryByID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LibraryByID_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LibraryByID_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LibraryByID_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LibraryByID_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LibraryByID_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_CreateLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_CreateLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_CreateLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_CreateLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_CreateLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_CreateLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LoadLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LoadLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LoadLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LoadLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LoadLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LoadLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_UnloadLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_UnloadLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_UnloadLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_UnloadLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_UnloadLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_UnloadLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_StoreLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_StoreLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_StoreLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_StoreLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_StoreLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_StoreLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_BuildLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_BuildLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_BuildLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_BuildLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_BuildLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_BuildLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_RunLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_RunLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_RunLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_RunLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_RunLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_RunLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Initialize_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Initialize_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Initialize_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Initialize_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Initialize_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Initialize_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Ping_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Ping_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Ping_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Ping_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Ping_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Ping_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Dump_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Dump_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Dump_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Dump_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Dump_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Dump_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Shutdown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Shutdown_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Shutdown_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Shutdown_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Shutdown_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Shutdown_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Projects_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Projects_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Projects_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Projects_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Projects_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Projects_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_ProjectByID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_ProjectByID_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_ProjectByID_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_ProjectByID_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_ProjectByID_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_ProjectByID_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CreateProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CreateProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CreateProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CreateProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CreateProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CreateProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_OpenProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_OpenProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_OpenProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_OpenProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_OpenProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_OpenProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_UpdateProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_UpdateProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_UpdateProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_UpdateProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_UpdateProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_UpdateProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CloseProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CloseProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CloseProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CloseProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CloseProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CloseProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_StoreProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_StoreProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_StoreProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_StoreProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_StoreProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_StoreProject_Result_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_2dapi_2eproto() {
  protobuf_AddDesc_server_2dapi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server-api.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, method_),
  };
  Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request));
  Request_Method_descriptor_ = Request_descriptor_->enum_type(0);
  Response_descriptor_ = file->message_type(1);
  static const int Response_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, type_),
  };
  Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response));
  Response_Type_descriptor_ = Response_descriptor_->enum_type(0);
  Exception_descriptor_ = file->message_type(2);
  static const int Exception_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exception, message_),
  };
  Exception_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Exception_descriptor_,
      Exception::default_instance_,
      Exception_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exception, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exception, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Exception));
  FileSystem_descriptor_ = file->message_type(3);
  static const int FileSystem_offsets_[1] = {
  };
  FileSystem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_descriptor_,
      FileSystem::default_instance_,
      FileSystem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem));
  FileSystem_LS_descriptor_ = FileSystem_descriptor_->nested_type(0);
  static const int FileSystem_LS_offsets_[1] = {
  };
  FileSystem_LS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_LS_descriptor_,
      FileSystem_LS::default_instance_,
      FileSystem_LS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_LS));
  FileSystem_LS_Args_descriptor_ = FileSystem_LS_descriptor_->nested_type(0);
  static const int FileSystem_LS_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Args, path_),
  };
  FileSystem_LS_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_LS_Args_descriptor_,
      FileSystem_LS_Args::default_instance_,
      FileSystem_LS_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_LS_Args));
  FileSystem_LS_Result_descriptor_ = FileSystem_LS_descriptor_->nested_type(1);
  static const int FileSystem_LS_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Result, items_),
  };
  FileSystem_LS_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_LS_Result_descriptor_,
      FileSystem_LS_Result::default_instance_,
      FileSystem_LS_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_LS_Result));
  FileSystem_Stat_descriptor_ = FileSystem_descriptor_->nested_type(1);
  static const int FileSystem_Stat_offsets_[1] = {
  };
  FileSystem_Stat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Stat_descriptor_,
      FileSystem_Stat::default_instance_,
      FileSystem_Stat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Stat));
  FileSystem_Stat_Args_descriptor_ = FileSystem_Stat_descriptor_->nested_type(0);
  static const int FileSystem_Stat_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Args, path_),
  };
  FileSystem_Stat_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Stat_Args_descriptor_,
      FileSystem_Stat_Args::default_instance_,
      FileSystem_Stat_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Stat_Args));
  FileSystem_Stat_Result_descriptor_ = FileSystem_Stat_descriptor_->nested_type(1);
  static const int FileSystem_Stat_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Result, item_),
  };
  FileSystem_Stat_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Stat_Result_descriptor_,
      FileSystem_Stat_Result::default_instance_,
      FileSystem_Stat_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Stat_Result));
  FileSystem_MkDir_descriptor_ = FileSystem_descriptor_->nested_type(2);
  static const int FileSystem_MkDir_offsets_[1] = {
  };
  FileSystem_MkDir_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MkDir_descriptor_,
      FileSystem_MkDir::default_instance_,
      FileSystem_MkDir_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MkDir));
  FileSystem_MkDir_Args_descriptor_ = FileSystem_MkDir_descriptor_->nested_type(0);
  static const int FileSystem_MkDir_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Args, path_),
  };
  FileSystem_MkDir_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MkDir_Args_descriptor_,
      FileSystem_MkDir_Args::default_instance_,
      FileSystem_MkDir_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MkDir_Args));
  FileSystem_MkDir_Result_descriptor_ = FileSystem_MkDir_descriptor_->nested_type(1);
  static const int FileSystem_MkDir_Result_offsets_[1] = {
  };
  FileSystem_MkDir_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MkDir_Result_descriptor_,
      FileSystem_MkDir_Result::default_instance_,
      FileSystem_MkDir_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MkDir_Result));
  FileSystem_Touch_descriptor_ = FileSystem_descriptor_->nested_type(3);
  static const int FileSystem_Touch_offsets_[1] = {
  };
  FileSystem_Touch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Touch_descriptor_,
      FileSystem_Touch::default_instance_,
      FileSystem_Touch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Touch));
  FileSystem_Touch_Args_descriptor_ = FileSystem_Touch_descriptor_->nested_type(0);
  static const int FileSystem_Touch_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Args, path_),
  };
  FileSystem_Touch_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Touch_Args_descriptor_,
      FileSystem_Touch_Args::default_instance_,
      FileSystem_Touch_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Touch_Args));
  FileSystem_Touch_Result_descriptor_ = FileSystem_Touch_descriptor_->nested_type(1);
  static const int FileSystem_Touch_Result_offsets_[1] = {
  };
  FileSystem_Touch_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Touch_Result_descriptor_,
      FileSystem_Touch_Result::default_instance_,
      FileSystem_Touch_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Touch_Result));
  FileSystem_RM_descriptor_ = FileSystem_descriptor_->nested_type(4);
  static const int FileSystem_RM_offsets_[1] = {
  };
  FileSystem_RM_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_RM_descriptor_,
      FileSystem_RM::default_instance_,
      FileSystem_RM_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_RM));
  FileSystem_RM_Args_descriptor_ = FileSystem_RM_descriptor_->nested_type(0);
  static const int FileSystem_RM_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Args, path_),
  };
  FileSystem_RM_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_RM_Args_descriptor_,
      FileSystem_RM_Args::default_instance_,
      FileSystem_RM_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_RM_Args));
  FileSystem_RM_Result_descriptor_ = FileSystem_RM_descriptor_->nested_type(1);
  static const int FileSystem_RM_Result_offsets_[1] = {
  };
  FileSystem_RM_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_RM_Result_descriptor_,
      FileSystem_RM_Result::default_instance_,
      FileSystem_RM_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_RM_Result));
  FileSystem_CP_descriptor_ = FileSystem_descriptor_->nested_type(5);
  static const int FileSystem_CP_offsets_[1] = {
  };
  FileSystem_CP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_CP_descriptor_,
      FileSystem_CP::default_instance_,
      FileSystem_CP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_CP));
  FileSystem_CP_Args_descriptor_ = FileSystem_CP_descriptor_->nested_type(0);
  static const int FileSystem_CP_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Args, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Args, dst_),
  };
  FileSystem_CP_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_CP_Args_descriptor_,
      FileSystem_CP_Args::default_instance_,
      FileSystem_CP_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_CP_Args));
  FileSystem_CP_Result_descriptor_ = FileSystem_CP_descriptor_->nested_type(1);
  static const int FileSystem_CP_Result_offsets_[1] = {
  };
  FileSystem_CP_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_CP_Result_descriptor_,
      FileSystem_CP_Result::default_instance_,
      FileSystem_CP_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_CP_Result));
  FileSystem_MV_descriptor_ = FileSystem_descriptor_->nested_type(6);
  static const int FileSystem_MV_offsets_[1] = {
  };
  FileSystem_MV_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MV_descriptor_,
      FileSystem_MV::default_instance_,
      FileSystem_MV_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MV));
  FileSystem_MV_Args_descriptor_ = FileSystem_MV_descriptor_->nested_type(0);
  static const int FileSystem_MV_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Args, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Args, dst_),
  };
  FileSystem_MV_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MV_Args_descriptor_,
      FileSystem_MV_Args::default_instance_,
      FileSystem_MV_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MV_Args));
  FileSystem_MV_Result_descriptor_ = FileSystem_MV_descriptor_->nested_type(1);
  static const int FileSystem_MV_Result_offsets_[1] = {
  };
  FileSystem_MV_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MV_Result_descriptor_,
      FileSystem_MV_Result::default_instance_,
      FileSystem_MV_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MV_Result));
  Library_descriptor_ = file->message_type(4);
  static const int Library_offsets_[1] = {
  };
  Library_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_descriptor_,
      Library::default_instance_,
      Library_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library));
  Library_Libraries_descriptor_ = Library_descriptor_->nested_type(0);
  static const int Library_Libraries_offsets_[1] = {
  };
  Library_Libraries_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_Libraries_descriptor_,
      Library_Libraries::default_instance_,
      Library_Libraries_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_Libraries));
  Library_Libraries_Args_descriptor_ = Library_Libraries_descriptor_->nested_type(0);
  static const int Library_Libraries_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Args, projectid_),
  };
  Library_Libraries_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_Libraries_Args_descriptor_,
      Library_Libraries_Args::default_instance_,
      Library_Libraries_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_Libraries_Args));
  Library_Libraries_Result_descriptor_ = Library_Libraries_descriptor_->nested_type(1);
  static const int Library_Libraries_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Result, liraries_),
  };
  Library_Libraries_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_Libraries_Result_descriptor_,
      Library_Libraries_Result::default_instance_,
      Library_Libraries_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_Libraries_Result));
  Library_LibraryByID_descriptor_ = Library_descriptor_->nested_type(1);
  static const int Library_LibraryByID_offsets_[1] = {
  };
  Library_LibraryByID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LibraryByID_descriptor_,
      Library_LibraryByID::default_instance_,
      Library_LibraryByID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LibraryByID));
  Library_LibraryByID_Args_descriptor_ = Library_LibraryByID_descriptor_->nested_type(0);
  static const int Library_LibraryByID_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Args, projectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Args, libraryid_),
  };
  Library_LibraryByID_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LibraryByID_Args_descriptor_,
      Library_LibraryByID_Args::default_instance_,
      Library_LibraryByID_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LibraryByID_Args));
  Library_LibraryByID_Result_descriptor_ = Library_LibraryByID_descriptor_->nested_type(1);
  static const int Library_LibraryByID_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Result, library_),
  };
  Library_LibraryByID_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LibraryByID_Result_descriptor_,
      Library_LibraryByID_Result::default_instance_,
      Library_LibraryByID_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LibraryByID_Result));
  Library_CreateLibrary_descriptor_ = Library_descriptor_->nested_type(2);
  static const int Library_CreateLibrary_offsets_[1] = {
  };
  Library_CreateLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_CreateLibrary_descriptor_,
      Library_CreateLibrary::default_instance_,
      Library_CreateLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_CreateLibrary));
  Library_CreateLibrary_Args_descriptor_ = Library_CreateLibrary_descriptor_->nested_type(0);
  static const int Library_CreateLibrary_Args_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, projectid_),
  };
  Library_CreateLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_CreateLibrary_Args_descriptor_,
      Library_CreateLibrary_Args::default_instance_,
      Library_CreateLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_CreateLibrary_Args));
  Library_CreateLibrary_Result_descriptor_ = Library_CreateLibrary_descriptor_->nested_type(1);
  static const int Library_CreateLibrary_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Result, library_),
  };
  Library_CreateLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_CreateLibrary_Result_descriptor_,
      Library_CreateLibrary_Result::default_instance_,
      Library_CreateLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_CreateLibrary_Result));
  Library_LoadLibrary_descriptor_ = Library_descriptor_->nested_type(3);
  static const int Library_LoadLibrary_offsets_[1] = {
  };
  Library_LoadLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LoadLibrary_descriptor_,
      Library_LoadLibrary::default_instance_,
      Library_LoadLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LoadLibrary));
  Library_LoadLibrary_Args_descriptor_ = Library_LoadLibrary_descriptor_->nested_type(0);
  static const int Library_LoadLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Args, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Args, projectid_),
  };
  Library_LoadLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LoadLibrary_Args_descriptor_,
      Library_LoadLibrary_Args::default_instance_,
      Library_LoadLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LoadLibrary_Args));
  Library_LoadLibrary_Result_descriptor_ = Library_LoadLibrary_descriptor_->nested_type(1);
  static const int Library_LoadLibrary_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Result, library_),
  };
  Library_LoadLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LoadLibrary_Result_descriptor_,
      Library_LoadLibrary_Result::default_instance_,
      Library_LoadLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LoadLibrary_Result));
  Library_UnloadLibrary_descriptor_ = Library_descriptor_->nested_type(4);
  static const int Library_UnloadLibrary_offsets_[1] = {
  };
  Library_UnloadLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_UnloadLibrary_descriptor_,
      Library_UnloadLibrary::default_instance_,
      Library_UnloadLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_UnloadLibrary));
  Library_UnloadLibrary_Args_descriptor_ = Library_UnloadLibrary_descriptor_->nested_type(0);
  static const int Library_UnloadLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Args, projectid_),
  };
  Library_UnloadLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_UnloadLibrary_Args_descriptor_,
      Library_UnloadLibrary_Args::default_instance_,
      Library_UnloadLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_UnloadLibrary_Args));
  Library_UnloadLibrary_Result_descriptor_ = Library_UnloadLibrary_descriptor_->nested_type(1);
  static const int Library_UnloadLibrary_Result_offsets_[1] = {
  };
  Library_UnloadLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_UnloadLibrary_Result_descriptor_,
      Library_UnloadLibrary_Result::default_instance_,
      Library_UnloadLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_UnloadLibrary_Result));
  Library_StoreLibrary_descriptor_ = Library_descriptor_->nested_type(5);
  static const int Library_StoreLibrary_offsets_[1] = {
  };
  Library_StoreLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_StoreLibrary_descriptor_,
      Library_StoreLibrary::default_instance_,
      Library_StoreLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_StoreLibrary));
  Library_StoreLibrary_Args_descriptor_ = Library_StoreLibrary_descriptor_->nested_type(0);
  static const int Library_StoreLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Args, projectid_),
  };
  Library_StoreLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_StoreLibrary_Args_descriptor_,
      Library_StoreLibrary_Args::default_instance_,
      Library_StoreLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_StoreLibrary_Args));
  Library_StoreLibrary_Result_descriptor_ = Library_StoreLibrary_descriptor_->nested_type(1);
  static const int Library_StoreLibrary_Result_offsets_[1] = {
  };
  Library_StoreLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_StoreLibrary_Result_descriptor_,
      Library_StoreLibrary_Result::default_instance_,
      Library_StoreLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_StoreLibrary_Result));
  Library_BuildLibrary_descriptor_ = Library_descriptor_->nested_type(6);
  static const int Library_BuildLibrary_offsets_[1] = {
  };
  Library_BuildLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_BuildLibrary_descriptor_,
      Library_BuildLibrary::default_instance_,
      Library_BuildLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_BuildLibrary));
  Library_BuildLibrary_Args_descriptor_ = Library_BuildLibrary_descriptor_->nested_type(0);
  static const int Library_BuildLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Args, projectid_),
  };
  Library_BuildLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_BuildLibrary_Args_descriptor_,
      Library_BuildLibrary_Args::default_instance_,
      Library_BuildLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_BuildLibrary_Args));
  Library_BuildLibrary_Result_descriptor_ = Library_BuildLibrary_descriptor_->nested_type(1);
  static const int Library_BuildLibrary_Result_offsets_[1] = {
  };
  Library_BuildLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_BuildLibrary_Result_descriptor_,
      Library_BuildLibrary_Result::default_instance_,
      Library_BuildLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_BuildLibrary_Result));
  Library_RunLibrary_descriptor_ = Library_descriptor_->nested_type(7);
  static const int Library_RunLibrary_offsets_[1] = {
  };
  Library_RunLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_RunLibrary_descriptor_,
      Library_RunLibrary::default_instance_,
      Library_RunLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_RunLibrary));
  Library_RunLibrary_Args_descriptor_ = Library_RunLibrary_descriptor_->nested_type(0);
  static const int Library_RunLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Args, projectid_),
  };
  Library_RunLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_RunLibrary_Args_descriptor_,
      Library_RunLibrary_Args::default_instance_,
      Library_RunLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_RunLibrary_Args));
  Library_RunLibrary_Result_descriptor_ = Library_RunLibrary_descriptor_->nested_type(1);
  static const int Library_RunLibrary_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Result, output_),
  };
  Library_RunLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_RunLibrary_Result_descriptor_,
      Library_RunLibrary_Result::default_instance_,
      Library_RunLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_RunLibrary_Result));
  Maintenance_descriptor_ = file->message_type(5);
  static const int Maintenance_offsets_[1] = {
  };
  Maintenance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_descriptor_,
      Maintenance::default_instance_,
      Maintenance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance));
  Maintenance_Initialize_descriptor_ = Maintenance_descriptor_->nested_type(0);
  static const int Maintenance_Initialize_offsets_[1] = {
  };
  Maintenance_Initialize_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Initialize_descriptor_,
      Maintenance_Initialize::default_instance_,
      Maintenance_Initialize_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Initialize));
  Maintenance_Initialize_Args_descriptor_ = Maintenance_Initialize_descriptor_->nested_type(0);
  static const int Maintenance_Initialize_Args_offsets_[1] = {
  };
  Maintenance_Initialize_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Initialize_Args_descriptor_,
      Maintenance_Initialize_Args::default_instance_,
      Maintenance_Initialize_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Initialize_Args));
  Maintenance_Initialize_Result_descriptor_ = Maintenance_Initialize_descriptor_->nested_type(1);
  static const int Maintenance_Initialize_Result_offsets_[1] = {
  };
  Maintenance_Initialize_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Initialize_Result_descriptor_,
      Maintenance_Initialize_Result::default_instance_,
      Maintenance_Initialize_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Initialize_Result));
  Maintenance_Ping_descriptor_ = Maintenance_descriptor_->nested_type(1);
  static const int Maintenance_Ping_offsets_[1] = {
  };
  Maintenance_Ping_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Ping_descriptor_,
      Maintenance_Ping::default_instance_,
      Maintenance_Ping_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Ping));
  Maintenance_Ping_Args_descriptor_ = Maintenance_Ping_descriptor_->nested_type(0);
  static const int Maintenance_Ping_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Args, data_),
  };
  Maintenance_Ping_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Ping_Args_descriptor_,
      Maintenance_Ping_Args::default_instance_,
      Maintenance_Ping_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Ping_Args));
  Maintenance_Ping_Result_descriptor_ = Maintenance_Ping_descriptor_->nested_type(1);
  static const int Maintenance_Ping_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Result, data_),
  };
  Maintenance_Ping_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Ping_Result_descriptor_,
      Maintenance_Ping_Result::default_instance_,
      Maintenance_Ping_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Ping_Result));
  Maintenance_Dump_descriptor_ = Maintenance_descriptor_->nested_type(2);
  static const int Maintenance_Dump_offsets_[1] = {
  };
  Maintenance_Dump_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Dump_descriptor_,
      Maintenance_Dump::default_instance_,
      Maintenance_Dump_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Dump));
  Maintenance_Dump_Args_descriptor_ = Maintenance_Dump_descriptor_->nested_type(0);
  static const int Maintenance_Dump_Args_offsets_[1] = {
  };
  Maintenance_Dump_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Dump_Args_descriptor_,
      Maintenance_Dump_Args::default_instance_,
      Maintenance_Dump_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Dump_Args));
  Maintenance_Dump_Result_descriptor_ = Maintenance_Dump_descriptor_->nested_type(1);
  static const int Maintenance_Dump_Result_offsets_[1] = {
  };
  Maintenance_Dump_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Dump_Result_descriptor_,
      Maintenance_Dump_Result::default_instance_,
      Maintenance_Dump_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Dump_Result));
  Maintenance_Shutdown_descriptor_ = Maintenance_descriptor_->nested_type(3);
  static const int Maintenance_Shutdown_offsets_[1] = {
  };
  Maintenance_Shutdown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Shutdown_descriptor_,
      Maintenance_Shutdown::default_instance_,
      Maintenance_Shutdown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Shutdown));
  Maintenance_Shutdown_Args_descriptor_ = Maintenance_Shutdown_descriptor_->nested_type(0);
  static const int Maintenance_Shutdown_Args_offsets_[1] = {
  };
  Maintenance_Shutdown_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Shutdown_Args_descriptor_,
      Maintenance_Shutdown_Args::default_instance_,
      Maintenance_Shutdown_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Shutdown_Args));
  Maintenance_Shutdown_Result_descriptor_ = Maintenance_Shutdown_descriptor_->nested_type(1);
  static const int Maintenance_Shutdown_Result_offsets_[1] = {
  };
  Maintenance_Shutdown_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Shutdown_Result_descriptor_,
      Maintenance_Shutdown_Result::default_instance_,
      Maintenance_Shutdown_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Shutdown_Result));
  Project_descriptor_ = file->message_type(6);
  static const int Project_offsets_[1] = {
  };
  Project_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_descriptor_,
      Project::default_instance_,
      Project_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project));
  Project_Projects_descriptor_ = Project_descriptor_->nested_type(0);
  static const int Project_Projects_offsets_[1] = {
  };
  Project_Projects_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Projects_descriptor_,
      Project_Projects::default_instance_,
      Project_Projects_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Projects));
  Project_Projects_Args_descriptor_ = Project_Projects_descriptor_->nested_type(0);
  static const int Project_Projects_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Args, projectid_),
  };
  Project_Projects_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Projects_Args_descriptor_,
      Project_Projects_Args::default_instance_,
      Project_Projects_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Projects_Args));
  Project_Projects_Result_descriptor_ = Project_Projects_descriptor_->nested_type(1);
  static const int Project_Projects_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Result, project_),
  };
  Project_Projects_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Projects_Result_descriptor_,
      Project_Projects_Result::default_instance_,
      Project_Projects_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Projects_Result));
  Project_ProjectByID_descriptor_ = Project_descriptor_->nested_type(1);
  static const int Project_ProjectByID_offsets_[1] = {
  };
  Project_ProjectByID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_ProjectByID_descriptor_,
      Project_ProjectByID::default_instance_,
      Project_ProjectByID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_ProjectByID));
  Project_ProjectByID_Args_descriptor_ = Project_ProjectByID_descriptor_->nested_type(0);
  static const int Project_ProjectByID_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Args, projectid_),
  };
  Project_ProjectByID_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_ProjectByID_Args_descriptor_,
      Project_ProjectByID_Args::default_instance_,
      Project_ProjectByID_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_ProjectByID_Args));
  Project_ProjectByID_Result_descriptor_ = Project_ProjectByID_descriptor_->nested_type(1);
  static const int Project_ProjectByID_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Result, project_),
  };
  Project_ProjectByID_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_ProjectByID_Result_descriptor_,
      Project_ProjectByID_Result::default_instance_,
      Project_ProjectByID_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_ProjectByID_Result));
  Project_CreateProject_descriptor_ = Project_descriptor_->nested_type(2);
  static const int Project_CreateProject_offsets_[1] = {
  };
  Project_CreateProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CreateProject_descriptor_,
      Project_CreateProject::default_instance_,
      Project_CreateProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CreateProject));
  Project_CreateProject_Args_descriptor_ = Project_CreateProject_descriptor_->nested_type(0);
  static const int Project_CreateProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Args, project_),
  };
  Project_CreateProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CreateProject_Args_descriptor_,
      Project_CreateProject_Args::default_instance_,
      Project_CreateProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CreateProject_Args));
  Project_CreateProject_Result_descriptor_ = Project_CreateProject_descriptor_->nested_type(1);
  static const int Project_CreateProject_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Result, project_),
  };
  Project_CreateProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CreateProject_Result_descriptor_,
      Project_CreateProject_Result::default_instance_,
      Project_CreateProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CreateProject_Result));
  Project_OpenProject_descriptor_ = Project_descriptor_->nested_type(3);
  static const int Project_OpenProject_offsets_[1] = {
  };
  Project_OpenProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_OpenProject_descriptor_,
      Project_OpenProject::default_instance_,
      Project_OpenProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_OpenProject));
  Project_OpenProject_Args_descriptor_ = Project_OpenProject_descriptor_->nested_type(0);
  static const int Project_OpenProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Args, path_),
  };
  Project_OpenProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_OpenProject_Args_descriptor_,
      Project_OpenProject_Args::default_instance_,
      Project_OpenProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_OpenProject_Args));
  Project_OpenProject_Result_descriptor_ = Project_OpenProject_descriptor_->nested_type(1);
  static const int Project_OpenProject_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Result, project_),
  };
  Project_OpenProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_OpenProject_Result_descriptor_,
      Project_OpenProject_Result::default_instance_,
      Project_OpenProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_OpenProject_Result));
  Project_UpdateProject_descriptor_ = Project_descriptor_->nested_type(4);
  static const int Project_UpdateProject_offsets_[1] = {
  };
  Project_UpdateProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_UpdateProject_descriptor_,
      Project_UpdateProject::default_instance_,
      Project_UpdateProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_UpdateProject));
  Project_UpdateProject_Args_descriptor_ = Project_UpdateProject_descriptor_->nested_type(0);
  static const int Project_UpdateProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Args, project_),
  };
  Project_UpdateProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_UpdateProject_Args_descriptor_,
      Project_UpdateProject_Args::default_instance_,
      Project_UpdateProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_UpdateProject_Args));
  Project_UpdateProject_Result_descriptor_ = Project_UpdateProject_descriptor_->nested_type(1);
  static const int Project_UpdateProject_Result_offsets_[1] = {
  };
  Project_UpdateProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_UpdateProject_Result_descriptor_,
      Project_UpdateProject_Result::default_instance_,
      Project_UpdateProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_UpdateProject_Result));
  Project_CloseProject_descriptor_ = Project_descriptor_->nested_type(5);
  static const int Project_CloseProject_offsets_[1] = {
  };
  Project_CloseProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CloseProject_descriptor_,
      Project_CloseProject::default_instance_,
      Project_CloseProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CloseProject));
  Project_CloseProject_Args_descriptor_ = Project_CloseProject_descriptor_->nested_type(0);
  static const int Project_CloseProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Args, projectid_),
  };
  Project_CloseProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CloseProject_Args_descriptor_,
      Project_CloseProject_Args::default_instance_,
      Project_CloseProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CloseProject_Args));
  Project_CloseProject_Result_descriptor_ = Project_CloseProject_descriptor_->nested_type(1);
  static const int Project_CloseProject_Result_offsets_[1] = {
  };
  Project_CloseProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CloseProject_Result_descriptor_,
      Project_CloseProject_Result::default_instance_,
      Project_CloseProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CloseProject_Result));
  Project_StoreProject_descriptor_ = Project_descriptor_->nested_type(6);
  static const int Project_StoreProject_offsets_[1] = {
  };
  Project_StoreProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_StoreProject_descriptor_,
      Project_StoreProject::default_instance_,
      Project_StoreProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_StoreProject));
  Project_StoreProject_Args_descriptor_ = Project_StoreProject_descriptor_->nested_type(0);
  static const int Project_StoreProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Args, projectid_),
  };
  Project_StoreProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_StoreProject_Args_descriptor_,
      Project_StoreProject_Args::default_instance_,
      Project_StoreProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_StoreProject_Args));
  Project_StoreProject_Result_descriptor_ = Project_StoreProject_descriptor_->nested_type(1);
  static const int Project_StoreProject_Result_offsets_[1] = {
  };
  Project_StoreProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_StoreProject_Result_descriptor_,
      Project_StoreProject_Result::default_instance_,
      Project_StoreProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_StoreProject_Result));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_2dapi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Exception_descriptor_, &Exception::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_descriptor_, &FileSystem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_LS_descriptor_, &FileSystem_LS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_LS_Args_descriptor_, &FileSystem_LS_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_LS_Result_descriptor_, &FileSystem_LS_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Stat_descriptor_, &FileSystem_Stat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Stat_Args_descriptor_, &FileSystem_Stat_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Stat_Result_descriptor_, &FileSystem_Stat_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MkDir_descriptor_, &FileSystem_MkDir::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MkDir_Args_descriptor_, &FileSystem_MkDir_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MkDir_Result_descriptor_, &FileSystem_MkDir_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Touch_descriptor_, &FileSystem_Touch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Touch_Args_descriptor_, &FileSystem_Touch_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Touch_Result_descriptor_, &FileSystem_Touch_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_RM_descriptor_, &FileSystem_RM::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_RM_Args_descriptor_, &FileSystem_RM_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_RM_Result_descriptor_, &FileSystem_RM_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_CP_descriptor_, &FileSystem_CP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_CP_Args_descriptor_, &FileSystem_CP_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_CP_Result_descriptor_, &FileSystem_CP_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MV_descriptor_, &FileSystem_MV::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MV_Args_descriptor_, &FileSystem_MV_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MV_Result_descriptor_, &FileSystem_MV_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_descriptor_, &Library::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_Libraries_descriptor_, &Library_Libraries::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_Libraries_Args_descriptor_, &Library_Libraries_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_Libraries_Result_descriptor_, &Library_Libraries_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LibraryByID_descriptor_, &Library_LibraryByID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LibraryByID_Args_descriptor_, &Library_LibraryByID_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LibraryByID_Result_descriptor_, &Library_LibraryByID_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_CreateLibrary_descriptor_, &Library_CreateLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_CreateLibrary_Args_descriptor_, &Library_CreateLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_CreateLibrary_Result_descriptor_, &Library_CreateLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LoadLibrary_descriptor_, &Library_LoadLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LoadLibrary_Args_descriptor_, &Library_LoadLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LoadLibrary_Result_descriptor_, &Library_LoadLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_UnloadLibrary_descriptor_, &Library_UnloadLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_UnloadLibrary_Args_descriptor_, &Library_UnloadLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_UnloadLibrary_Result_descriptor_, &Library_UnloadLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_StoreLibrary_descriptor_, &Library_StoreLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_StoreLibrary_Args_descriptor_, &Library_StoreLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_StoreLibrary_Result_descriptor_, &Library_StoreLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_BuildLibrary_descriptor_, &Library_BuildLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_BuildLibrary_Args_descriptor_, &Library_BuildLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_BuildLibrary_Result_descriptor_, &Library_BuildLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_RunLibrary_descriptor_, &Library_RunLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_RunLibrary_Args_descriptor_, &Library_RunLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_RunLibrary_Result_descriptor_, &Library_RunLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_descriptor_, &Maintenance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Initialize_descriptor_, &Maintenance_Initialize::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Initialize_Args_descriptor_, &Maintenance_Initialize_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Initialize_Result_descriptor_, &Maintenance_Initialize_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Ping_descriptor_, &Maintenance_Ping::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Ping_Args_descriptor_, &Maintenance_Ping_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Ping_Result_descriptor_, &Maintenance_Ping_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Dump_descriptor_, &Maintenance_Dump::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Dump_Args_descriptor_, &Maintenance_Dump_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Dump_Result_descriptor_, &Maintenance_Dump_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Shutdown_descriptor_, &Maintenance_Shutdown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Shutdown_Args_descriptor_, &Maintenance_Shutdown_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Shutdown_Result_descriptor_, &Maintenance_Shutdown_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_descriptor_, &Project::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Projects_descriptor_, &Project_Projects::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Projects_Args_descriptor_, &Project_Projects_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Projects_Result_descriptor_, &Project_Projects_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_ProjectByID_descriptor_, &Project_ProjectByID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_ProjectByID_Args_descriptor_, &Project_ProjectByID_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_ProjectByID_Result_descriptor_, &Project_ProjectByID_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CreateProject_descriptor_, &Project_CreateProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CreateProject_Args_descriptor_, &Project_CreateProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CreateProject_Result_descriptor_, &Project_CreateProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_OpenProject_descriptor_, &Project_OpenProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_OpenProject_Args_descriptor_, &Project_OpenProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_OpenProject_Result_descriptor_, &Project_OpenProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_UpdateProject_descriptor_, &Project_UpdateProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_UpdateProject_Args_descriptor_, &Project_UpdateProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_UpdateProject_Result_descriptor_, &Project_UpdateProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CloseProject_descriptor_, &Project_CloseProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CloseProject_Args_descriptor_, &Project_CloseProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CloseProject_Result_descriptor_, &Project_CloseProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_StoreProject_descriptor_, &Project_StoreProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_StoreProject_Args_descriptor_, &Project_StoreProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_StoreProject_Result_descriptor_, &Project_StoreProject_Result::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_2dapi_2eproto() {
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Response::default_instance_;
  delete Response_reflection_;
  delete Exception::default_instance_;
  delete Exception_reflection_;
  delete FileSystem::default_instance_;
  delete FileSystem_reflection_;
  delete FileSystem_LS::default_instance_;
  delete FileSystem_LS_reflection_;
  delete FileSystem_LS_Args::default_instance_;
  delete FileSystem_LS_Args_reflection_;
  delete FileSystem_LS_Result::default_instance_;
  delete FileSystem_LS_Result_reflection_;
  delete FileSystem_Stat::default_instance_;
  delete FileSystem_Stat_reflection_;
  delete FileSystem_Stat_Args::default_instance_;
  delete FileSystem_Stat_Args_reflection_;
  delete FileSystem_Stat_Result::default_instance_;
  delete FileSystem_Stat_Result_reflection_;
  delete FileSystem_MkDir::default_instance_;
  delete FileSystem_MkDir_reflection_;
  delete FileSystem_MkDir_Args::default_instance_;
  delete FileSystem_MkDir_Args_reflection_;
  delete FileSystem_MkDir_Result::default_instance_;
  delete FileSystem_MkDir_Result_reflection_;
  delete FileSystem_Touch::default_instance_;
  delete FileSystem_Touch_reflection_;
  delete FileSystem_Touch_Args::default_instance_;
  delete FileSystem_Touch_Args_reflection_;
  delete FileSystem_Touch_Result::default_instance_;
  delete FileSystem_Touch_Result_reflection_;
  delete FileSystem_RM::default_instance_;
  delete FileSystem_RM_reflection_;
  delete FileSystem_RM_Args::default_instance_;
  delete FileSystem_RM_Args_reflection_;
  delete FileSystem_RM_Result::default_instance_;
  delete FileSystem_RM_Result_reflection_;
  delete FileSystem_CP::default_instance_;
  delete FileSystem_CP_reflection_;
  delete FileSystem_CP_Args::default_instance_;
  delete FileSystem_CP_Args_reflection_;
  delete FileSystem_CP_Result::default_instance_;
  delete FileSystem_CP_Result_reflection_;
  delete FileSystem_MV::default_instance_;
  delete FileSystem_MV_reflection_;
  delete FileSystem_MV_Args::default_instance_;
  delete FileSystem_MV_Args_reflection_;
  delete FileSystem_MV_Result::default_instance_;
  delete FileSystem_MV_Result_reflection_;
  delete Library::default_instance_;
  delete Library_reflection_;
  delete Library_Libraries::default_instance_;
  delete Library_Libraries_reflection_;
  delete Library_Libraries_Args::default_instance_;
  delete Library_Libraries_Args_reflection_;
  delete Library_Libraries_Result::default_instance_;
  delete Library_Libraries_Result_reflection_;
  delete Library_LibraryByID::default_instance_;
  delete Library_LibraryByID_reflection_;
  delete Library_LibraryByID_Args::default_instance_;
  delete Library_LibraryByID_Args_reflection_;
  delete Library_LibraryByID_Result::default_instance_;
  delete Library_LibraryByID_Result_reflection_;
  delete Library_CreateLibrary::default_instance_;
  delete Library_CreateLibrary_reflection_;
  delete Library_CreateLibrary_Args::default_instance_;
  delete Library_CreateLibrary_Args_reflection_;
  delete Library_CreateLibrary_Result::default_instance_;
  delete Library_CreateLibrary_Result_reflection_;
  delete Library_LoadLibrary::default_instance_;
  delete Library_LoadLibrary_reflection_;
  delete Library_LoadLibrary_Args::default_instance_;
  delete Library_LoadLibrary_Args_reflection_;
  delete Library_LoadLibrary_Result::default_instance_;
  delete Library_LoadLibrary_Result_reflection_;
  delete Library_UnloadLibrary::default_instance_;
  delete Library_UnloadLibrary_reflection_;
  delete Library_UnloadLibrary_Args::default_instance_;
  delete Library_UnloadLibrary_Args_reflection_;
  delete Library_UnloadLibrary_Result::default_instance_;
  delete Library_UnloadLibrary_Result_reflection_;
  delete Library_StoreLibrary::default_instance_;
  delete Library_StoreLibrary_reflection_;
  delete Library_StoreLibrary_Args::default_instance_;
  delete Library_StoreLibrary_Args_reflection_;
  delete Library_StoreLibrary_Result::default_instance_;
  delete Library_StoreLibrary_Result_reflection_;
  delete Library_BuildLibrary::default_instance_;
  delete Library_BuildLibrary_reflection_;
  delete Library_BuildLibrary_Args::default_instance_;
  delete Library_BuildLibrary_Args_reflection_;
  delete Library_BuildLibrary_Result::default_instance_;
  delete Library_BuildLibrary_Result_reflection_;
  delete Library_RunLibrary::default_instance_;
  delete Library_RunLibrary_reflection_;
  delete Library_RunLibrary_Args::default_instance_;
  delete Library_RunLibrary_Args_reflection_;
  delete Library_RunLibrary_Result::default_instance_;
  delete Library_RunLibrary_Result_reflection_;
  delete Maintenance::default_instance_;
  delete Maintenance_reflection_;
  delete Maintenance_Initialize::default_instance_;
  delete Maintenance_Initialize_reflection_;
  delete Maintenance_Initialize_Args::default_instance_;
  delete Maintenance_Initialize_Args_reflection_;
  delete Maintenance_Initialize_Result::default_instance_;
  delete Maintenance_Initialize_Result_reflection_;
  delete Maintenance_Ping::default_instance_;
  delete Maintenance_Ping_reflection_;
  delete Maintenance_Ping_Args::default_instance_;
  delete Maintenance_Ping_Args_reflection_;
  delete Maintenance_Ping_Result::default_instance_;
  delete Maintenance_Ping_Result_reflection_;
  delete Maintenance_Dump::default_instance_;
  delete Maintenance_Dump_reflection_;
  delete Maintenance_Dump_Args::default_instance_;
  delete Maintenance_Dump_Args_reflection_;
  delete Maintenance_Dump_Result::default_instance_;
  delete Maintenance_Dump_Result_reflection_;
  delete Maintenance_Shutdown::default_instance_;
  delete Maintenance_Shutdown_reflection_;
  delete Maintenance_Shutdown_Args::default_instance_;
  delete Maintenance_Shutdown_Args_reflection_;
  delete Maintenance_Shutdown_Result::default_instance_;
  delete Maintenance_Shutdown_Result_reflection_;
  delete Project::default_instance_;
  delete Project_reflection_;
  delete Project_Projects::default_instance_;
  delete Project_Projects_reflection_;
  delete Project_Projects_Args::default_instance_;
  delete Project_Projects_Args_reflection_;
  delete Project_Projects_Result::default_instance_;
  delete Project_Projects_Result_reflection_;
  delete Project_ProjectByID::default_instance_;
  delete Project_ProjectByID_reflection_;
  delete Project_ProjectByID_Args::default_instance_;
  delete Project_ProjectByID_Args_reflection_;
  delete Project_ProjectByID_Result::default_instance_;
  delete Project_ProjectByID_Result_reflection_;
  delete Project_CreateProject::default_instance_;
  delete Project_CreateProject_reflection_;
  delete Project_CreateProject_Args::default_instance_;
  delete Project_CreateProject_Args_reflection_;
  delete Project_CreateProject_Result::default_instance_;
  delete Project_CreateProject_Result_reflection_;
  delete Project_OpenProject::default_instance_;
  delete Project_OpenProject_reflection_;
  delete Project_OpenProject_Args::default_instance_;
  delete Project_OpenProject_Args_reflection_;
  delete Project_OpenProject_Result::default_instance_;
  delete Project_OpenProject_Result_reflection_;
  delete Project_UpdateProject::default_instance_;
  delete Project_UpdateProject_reflection_;
  delete Project_UpdateProject_Args::default_instance_;
  delete Project_UpdateProject_Args_reflection_;
  delete Project_UpdateProject_Result::default_instance_;
  delete Project_UpdateProject_Result_reflection_;
  delete Project_CloseProject::default_instance_;
  delete Project_CloseProject_reflection_;
  delete Project_CloseProject_Args::default_instance_;
  delete Project_CloseProject_Args_reflection_;
  delete Project_CloseProject_Result::default_instance_;
  delete Project_CloseProject_Result_reflection_;
  delete Project_StoreProject::default_instance_;
  delete Project_StoreProject_reflection_;
  delete Project_StoreProject_Args::default_instance_;
  delete Project_StoreProject_Args_reflection_;
  delete Project_StoreProject_Result::default_instance_;
  delete Project_StoreProject_Result_reflection_;
}

void protobuf_AddDesc_server_2dapi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::generated::proto::filesystem::protobuf_AddDesc_file_2dsystem_2eproto();
  ::generated::proto::project::protobuf_AddDesc_project_2eproto();
  ::generated::proto::library::protobuf_AddDesc_library_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020server-api.proto\022\025generated.proto.batc"
    "h\032\021file-system.proto\032\rproject.proto\032\rlib"
    "rary.proto\"\315\003\n\007Request\0225\n\006method\030\001 \002(\0162%"
    ".generated.proto.batch.Request.Method\"\377\002"
    "\n\006Method\022\006\n\002LS\020\001\022\010\n\004Stat\020\002\022\t\n\005MkDir\020\003\022\t\n"
    "\005Touch\020\004\022\006\n\002RM\020\005\022\006\n\002CP\020\006\022\006\n\002MV\020\007\022\r\n\tLibr"
    "aries\020\010\022\017\n\013LibraryByID\020\t\022\021\n\rCreateLibrar"
    "y\020\n\022\017\n\013LoadLibrary\020\013\022\021\n\rUnloadLibrary\020\014\022"
    "\020\n\014StoreLibrary\020\r\022\020\n\014BuildLibrary\020\016\022\016\n\nR"
    "unLibrary\020\017\022\016\n\nInitialize\020\020\022\010\n\004Ping\020\021\022\010\n"
    "\004Dump\020\022\022\014\n\010Shutdown\020\023\022\014\n\010Projects\020\024\022\017\n\013P"
    "rojectByID\020\025\022\021\n\rCreateProject\020\026\022\017\n\013OpenP"
    "roject\020\027\022\021\n\rUpdateProject\020\030\022\020\n\014CloseProj"
    "ect\020\031\022\020\n\014StoreProject\020\032*\t\010\350\007\020\200\200\200\200\002\"l\n\010Re"
    "sponse\0222\n\004type\030\001 \002(\0162$.generated.proto.b"
    "atch.Response.Type\"!\n\004Type\022\n\n\006Result\020\000\022\r"
    "\n\tException\020\001*\t\010\350\007\020\200\200\200\200\002\"m\n\tException\022\017\n"
    "\007message\030\001 \001(\t2O\n\003rsp\022\037.generated.proto."
    "batch.Response\030\350\007 \001(\0132 .generated.proto."
    "batch.Exception\"\243\r\n\nFileSystem\032\213\002\n\002LS\032m\n"
    "\004Args\022\014\n\004path\030\001 \002(\t2W\n\003req\022\036.generated.p"
    "roto.batch.Request\030\351\007 \001(\0132).generated.pr"
    "oto.batch.FileSystem.LS.Args\032\225\001\n\006Result\022"
    "/\n\005items\030\001 \003(\0132 .generated.proto.filesys"
    "tem.Item2Z\n\003rsp\022\037.generated.proto.batch."
    "Response\030\351\007 \001(\0132+.generated.proto.batch."
    "FileSystem.LS.Result\032\220\002\n\004Stat\032o\n\004Args\022\014\n"
    "\004path\030\001 \002(\t2Y\n\003req\022\036.generated.proto.bat"
    "ch.Request\030\352\007 \001(\0132+.generated.proto.batc"
    "h.FileSystem.Stat.Args\032\226\001\n\006Result\022.\n\004ite"
    "m\030\001 \002(\0132 .generated.proto.filesystem.Ite"
    "m2\\\n\003rsp\022\037.generated.proto.batch.Respons"
    "e\030\352\007 \001(\0132-.generated.proto.batch.FileSys"
    "tem.Stat.Result\032\342\001\n\005MkDir\032p\n\004Args\022\014\n\004pat"
    "h\030\001 \002(\t2Z\n\003req\022\036.generated.proto.batch.R"
    "equest\030\353\007 \001(\0132,.generated.proto.batch.Fi"
    "leSystem.MkDir.Args\032g\n\006Result2]\n\003rsp\022\037.g"
    "enerated.proto.batch.Response\030\353\007 \001(\0132..g"
    "enerated.proto.batch.FileSystem.MkDir.Re"
    "sult\032\342\001\n\005Touch\032p\n\004Args\022\014\n\004path\030\001 \002(\t2Z\n\003"
    "req\022\036.generated.proto.batch.Request\030\354\007 \001"
    "(\0132,.generated.proto.batch.FileSystem.To"
    "uch.Args\032g\n\006Result2]\n\003rsp\022\037.generated.pr"
    "oto.batch.Response\030\354\007 \001(\0132..generated.pr"
    "oto.batch.FileSystem.Touch.Result\032\331\001\n\002RM"
    "\032m\n\004Args\022\014\n\004path\030\001 \002(\t2W\n\003req\022\036.generate"
    "d.proto.batch.Request\030\355\007 \001(\0132).generated"
    ".proto.batch.FileSystem.RM.Args\032d\n\006Resul"
    "t2Z\n\003rsp\022\037.generated.proto.batch.Respons"
    "e\030\355\007 \001(\0132+.generated.proto.batch.FileSys"
    "tem.RM.Result\032\345\001\n\002CP\032y\n\004Args\022\013\n\003src\030\001 \002("
    "\t\022\013\n\003dst\030\002 \002(\t2W\n\003req\022\036.generated.proto."
    "batch.Request\030\356\007 \001(\0132).generated.proto.b"
    "atch.FileSystem.CP.Args\032d\n\006Result2Z\n\003rsp"
    "\022\037.generated.proto.batch.Response\030\356\007 \001(\013"
    "2+.generated.proto.batch.FileSystem.CP.R"
    "esult\032\345\001\n\002MV\032y\n\004Args\022\013\n\003src\030\001 \002(\t\022\013\n\003dst"
    "\030\002 \002(\t2W\n\003req\022\036.generated.proto.batch.Re"
    "quest\030\357\007 \001(\0132).generated.proto.batch.Fil"
    "eSystem.MV.Args\032d\n\006Result2Z\n\003rsp\022\037.gener"
    "ated.proto.batch.Response\030\357\007 \001(\0132+.gener"
    "ated.proto.batch.FileSystem.MV.Result\"\263\022"
    "\n\007Library\032\242\002\n\tLibraries\032v\n\004Args\022\021\n\tproje"
    "ctID\030\001 \002(\0052[\n\003req\022\036.generated.proto.batc"
    "h.Request\030\360\007 \001(\0132-.generated.proto.batch"
    ".Library.Libraries.Args\032\234\001\n\006Result\0222\n\010li"
    "raries\030\001 \003(\0132 .generated.proto.library.L"
    "ibrary2^\n\003rsp\022\037.generated.proto.batch.Re"
    "sponse\030\361\007 \001(\0132/.generated.proto.batch.Li"
    "brary.Libraries.Result\032\273\002\n\013LibraryByID\032\213"
    "\001\n\004Args\022\021\n\tprojectID\030\001 \002(\005\022\021\n\tlibraryID\030"
    "\002 \002(\0052]\n\003req\022\036.generated.proto.batch.Req"
    "uest\030\363\007 \001(\0132/.generated.proto.batch.Libr"
    "ary.LibraryByID.Args\032\235\001\n\006Result\0221\n\007libra"
    "ry\030\001 \002(\0132 .generated.proto.library.Libra"
    "ry2`\n\003rsp\022\037.generated.proto.batch.Respon"
    "se\030\363\007 \001(\01321.generated.proto.batch.Librar"
    "y.LibraryByID.Result\032\312\002\n\rCreateLibrary\032\226"
    "\001\n\004Args\022\014\n\004name\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\022\021\n\tp"
    "rojectID\030\003 \002(\0052_\n\003req\022\036.generated.proto."
    "batch.Request\030\364\007 \001(\01321.generated.proto.b"
    "atch.Library.CreateLibrary.Args\032\237\001\n\006Resu"
    "lt\0221\n\007library\030\001 \002(\0132 .generated.proto.li"
    "brary.Library2b\n\003rsp\022\037.generated.proto.b"
    "atch.Response\030\364\007 \001(\01323.generated.proto.b"
    "atch.Library.CreateLibrary.Result\032\266\002\n\013Lo"
    "adLibrary\032\206\001\n\004Args\022\014\n\004path\030\001 \002(\t\022\021\n\tproj"
    "ectID\030\002 \002(\0052]\n\003req\022\036.generated.proto.bat"
    "ch.Request\030\365\007 \001(\0132/.generated.proto.batc"
    "h.Library.LoadLibrary.Args\032\235\001\n\006Result\0221\n"
    "\007library\030\001 \002(\0132 .generated.proto.library"
    ".Library2`\n\003rsp\022\037.generated.proto.batch."
    "Response\030\365\007 \001(\01321.generated.proto.batch."
    "Library.LoadLibrary.Result\032\215\002\n\rUnloadLib"
    "rary\032\215\001\n\004Args\022\021\n\tlibraryID\030\001 \002(\005\022\021\n\tproj"
    "ectID\030\002 \002(\0052_\n\003req\022\036.generated.proto.bat"
    "ch.Request\030\366\007 \001(\01321.generated.proto.batc"
    "h.Library.UnloadLibrary.Args\032l\n\006Result2b"
    "\n\003rsp\022\037.generated.proto.batch.Response\030\366"
    "\007 \001(\01323.generated.proto.batch.Library.Un"
    "loadLibrary.Result\032\212\002\n\014StoreLibrary\032\214\001\n\004"
    "Args\022\021\n\tlibraryID\030\001 \002(\005\022\021\n\tprojectID\030\002 \002"
    "(\0052^\n\003req\022\036.generated.proto.batch.Reques"
    "t\030\367\007 \001(\01320.generated.proto.batch.Library"
    ".StoreLibrary.Args\032k\n\006Result2a\n\003rsp\022\037.ge"
    "nerated.proto.batch.Response\030\367\007 \001(\01322.ge"
    "nerated.proto.batch.Library.StoreLibrary"
    ".Result\032\212\002\n\014BuildLibrary\032\214\001\n\004Args\022\021\n\tlib"
    "raryID\030\001 \002(\005\022\021\n\tprojectID\030\002 \002(\0052^\n\003req\022\036"
    ".generated.proto.batch.Request\030\370\007 \001(\01320."
    "generated.proto.batch.Library.BuildLibra"
    "ry.Args\032k\n\006Result2a\n\003rsp\022\037.generated.pro"
    "to.batch.Response\030\370\007 \001(\01322.generated.pro"
    "to.batch.Library.BuildLibrary.Result\032\224\002\n"
    "\nRunLibrary\032\212\001\n\004Args\022\021\n\tlibraryID\030\001 \002(\005\022"
    "\021\n\tprojectID\030\002 \002(\0052\\\n\003req\022\036.generated.pr"
    "oto.batch.Request\030\371\007 \001(\0132..generated.pro"
    "to.batch.Library.RunLibrary.Args\032y\n\006Resu"
    "lt\022\016\n\006output\030\001 \002(\t2_\n\003rsp\022\037.generated.pr"
    "oto.batch.Response\030\371\007 \001(\01320.generated.pr"
    "oto.batch.Library.RunLibrary.Result\"\237\007\n\013"
    "Maintenance\032\345\001\n\nInitialize\032h\n\004Args2`\n\003re"
    "q\022\036.generated.proto.batch.Request\030\372\007 \001(\013"
    "22.generated.proto.batch.Maintenance.Ini"
    "tialize.Args\032m\n\006Result2c\n\003rsp\022\037.generate"
    "d.proto.batch.Response\030\372\007 \001(\01324.generate"
    "d.proto.batch.Maintenance.Initialize.Res"
    "ult\032\357\001\n\004Ping\032p\n\004Args\022\014\n\004data\030\001 \001(\0142Z\n\003re"
    "q\022\036.generated.proto.batch.Request\030\373\007 \001(\013"
    "2,.generated.proto.batch.Maintenance.Pin"
    "g.Args\032u\n\006Result\022\014\n\004data\030\001 \001(\0142]\n\003rsp\022\037."
    "generated.proto.batch.Response\030\373\007 \001(\0132.."
    "generated.proto.batch.Maintenance.Ping.R"
    "esult\032\323\001\n\004Dump\032b\n\004Args2Z\n\003req\022\036.generate"
    "d.proto.batch.Request\030\374\007 \001(\0132,.generated"
    ".proto.batch.Maintenance.Dump.Args\032g\n\006Re"
    "sult2]\n\003rsp\022\037.generated.proto.batch.Resp"
    "onse\030\374\007 \001(\0132..generated.proto.batch.Main"
    "tenance.Dump.Result\032\337\001\n\010Shutdown\032f\n\004Args"
    "2^\n\003req\022\036.generated.proto.batch.Request\030"
    "\375\007 \001(\01320.generated.proto.batch.Maintenan"
    "ce.Shutdown.Args\032k\n\006Result2a\n\003rsp\022\037.gene"
    "rated.proto.batch.Response\030\375\007 \001(\01322.gene"
    "rated.proto.batch.Maintenance.Shutdown.R"
    "esult\"\331\017\n\007Project\032\236\002\n\010Projects\032u\n\004Args\022\021"
    "\n\tprojectID\030\001 \002(\0052Z\n\003req\022\036.generated.pro"
    "to.batch.Request\030\376\007 \001(\0132,.generated.prot"
    "o.batch.Project.Projects.Args\032\232\001\n\006Result"
    "\0221\n\007project\030\001 \003(\0132 .generated.proto.proj"
    "ect.Project2]\n\003rsp\022\037.generated.proto.bat"
    "ch.Response\030\376\007 \001(\0132..generated.proto.bat"
    "ch.Project.Projects.Result\032\247\002\n\013ProjectBy"
    "ID\032x\n\004Args\022\021\n\tprojectID\030\001 \002(\0052]\n\003req\022\036.g"
    "enerated.proto.batch.Request\030\377\007 \001(\0132/.ge"
    "nerated.proto.batch.Project.ProjectByID."
    "Args\032\235\001\n\006Result\0221\n\007project\030\001 \002(\0132 .gener"
    "ated.proto.project.Project2`\n\003rsp\022\037.gene"
    "rated.proto.batch.Response\030\377\007 \001(\01321.gene"
    "rated.proto.batch.Project.ProjectByID.Re"
    "sult\032\316\002\n\rCreateProject\032\232\001\n\004Args\0221\n\007proje"
    "ct\030\001 \002(\0132 .generated.proto.project.Proje"
    "ct2_\n\003req\022\036.generated.proto.batch.Reques"
    "t\030\200\010 \001(\01321.generated.proto.batch.Project"
    ".CreateProject.Args\032\237\001\n\006Result\0221\n\007projec"
    "t\030\001 \002(\0132 .generated.proto.project.Projec"
    "t2b\n\003rsp\022\037.generated.proto.batch.Respons"
    "e\030\200\010 \001(\01323.generated.proto.batch.Project"
    ".CreateProject.Result\032\242\002\n\013OpenProject\032s\n"
    "\004Args\022\014\n\004path\030\001 \002(\t2]\n\003req\022\036.generated.p"
    "roto.batch.Request\030\201\010 \001(\0132/.generated.pr"
    "oto.batch.Project.OpenProject.Args\032\235\001\n\006R"
    "esult\0221\n\007project\030\001 \002(\0132 .generated.proto"
    ".project.Project2`\n\003rsp\022\037.generated.prot"
    "o.batch.Response\030\201\010 \001(\01321.generated.prot"
    "o.batch.Project.OpenProject.Result\032\232\002\n\rU"
    "pdateProject\032\232\001\n\004Args\0221\n\007project\030\001 \002(\0132 "
    ".generated.proto.project.Project2_\n\003req\022"
    "\036.generated.proto.batch.Request\030\202\010 \001(\01321"
    ".generated.proto.batch.Project.UpdatePro"
    "ject.Args\032l\n\006Result2b\n\003rsp\022\037.generated.p"
    "roto.batch.Response\030\202\010 \001(\01323.generated.p"
    "roto.batch.Project.UpdateProject.Result\032"
    "\366\001\n\014CloseProject\032y\n\004Args\022\021\n\tprojectID\030\001 "
    "\002(\0052^\n\003req\022\036.generated.proto.batch.Reque"
    "st\030\203\010 \001(\01320.generated.proto.batch.Projec"
    "t.CloseProject.Args\032k\n\006Result2a\n\003rsp\022\037.g"
    "enerated.proto.batch.Response\030\203\010 \001(\01322.g"
    "enerated.proto.batch.Project.CloseProjec"
    "t.Result\032\366\001\n\014StoreProject\032y\n\004Args\022\021\n\tpro"
    "jectID\030\001 \002(\0052^\n\003req\022\036.generated.proto.ba"
    "tch.Request\030\204\010 \001(\01320.generated.proto.bat"
    "ch.Project.StoreProject.Args\032k\n\006Result2a"
    "\n\003rsp\022\037.generated.proto.batch.Response\030\204"
    "\010 \001(\01322.generated.proto.batch.Project.St"
    "oreProject.Result", 7777);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server-api.proto", &protobuf_RegisterTypes);
  Request::default_instance_ = new Request();
  Response::default_instance_ = new Response();
  Exception::default_instance_ = new Exception();
  FileSystem::default_instance_ = new FileSystem();
  FileSystem_LS::default_instance_ = new FileSystem_LS();
  FileSystem_LS_Args::default_instance_ = new FileSystem_LS_Args();
  FileSystem_LS_Result::default_instance_ = new FileSystem_LS_Result();
  FileSystem_Stat::default_instance_ = new FileSystem_Stat();
  FileSystem_Stat_Args::default_instance_ = new FileSystem_Stat_Args();
  FileSystem_Stat_Result::default_instance_ = new FileSystem_Stat_Result();
  FileSystem_MkDir::default_instance_ = new FileSystem_MkDir();
  FileSystem_MkDir_Args::default_instance_ = new FileSystem_MkDir_Args();
  FileSystem_MkDir_Result::default_instance_ = new FileSystem_MkDir_Result();
  FileSystem_Touch::default_instance_ = new FileSystem_Touch();
  FileSystem_Touch_Args::default_instance_ = new FileSystem_Touch_Args();
  FileSystem_Touch_Result::default_instance_ = new FileSystem_Touch_Result();
  FileSystem_RM::default_instance_ = new FileSystem_RM();
  FileSystem_RM_Args::default_instance_ = new FileSystem_RM_Args();
  FileSystem_RM_Result::default_instance_ = new FileSystem_RM_Result();
  FileSystem_CP::default_instance_ = new FileSystem_CP();
  FileSystem_CP_Args::default_instance_ = new FileSystem_CP_Args();
  FileSystem_CP_Result::default_instance_ = new FileSystem_CP_Result();
  FileSystem_MV::default_instance_ = new FileSystem_MV();
  FileSystem_MV_Args::default_instance_ = new FileSystem_MV_Args();
  FileSystem_MV_Result::default_instance_ = new FileSystem_MV_Result();
  Library::default_instance_ = new Library();
  Library_Libraries::default_instance_ = new Library_Libraries();
  Library_Libraries_Args::default_instance_ = new Library_Libraries_Args();
  Library_Libraries_Result::default_instance_ = new Library_Libraries_Result();
  Library_LibraryByID::default_instance_ = new Library_LibraryByID();
  Library_LibraryByID_Args::default_instance_ = new Library_LibraryByID_Args();
  Library_LibraryByID_Result::default_instance_ = new Library_LibraryByID_Result();
  Library_CreateLibrary::default_instance_ = new Library_CreateLibrary();
  Library_CreateLibrary_Args::default_instance_ = new Library_CreateLibrary_Args();
  Library_CreateLibrary_Result::default_instance_ = new Library_CreateLibrary_Result();
  Library_LoadLibrary::default_instance_ = new Library_LoadLibrary();
  Library_LoadLibrary_Args::default_instance_ = new Library_LoadLibrary_Args();
  Library_LoadLibrary_Result::default_instance_ = new Library_LoadLibrary_Result();
  Library_UnloadLibrary::default_instance_ = new Library_UnloadLibrary();
  Library_UnloadLibrary_Args::default_instance_ = new Library_UnloadLibrary_Args();
  Library_UnloadLibrary_Result::default_instance_ = new Library_UnloadLibrary_Result();
  Library_StoreLibrary::default_instance_ = new Library_StoreLibrary();
  Library_StoreLibrary_Args::default_instance_ = new Library_StoreLibrary_Args();
  Library_StoreLibrary_Result::default_instance_ = new Library_StoreLibrary_Result();
  Library_BuildLibrary::default_instance_ = new Library_BuildLibrary();
  Library_BuildLibrary_Args::default_instance_ = new Library_BuildLibrary_Args();
  Library_BuildLibrary_Result::default_instance_ = new Library_BuildLibrary_Result();
  Library_RunLibrary::default_instance_ = new Library_RunLibrary();
  Library_RunLibrary_Args::default_instance_ = new Library_RunLibrary_Args();
  Library_RunLibrary_Result::default_instance_ = new Library_RunLibrary_Result();
  Maintenance::default_instance_ = new Maintenance();
  Maintenance_Initialize::default_instance_ = new Maintenance_Initialize();
  Maintenance_Initialize_Args::default_instance_ = new Maintenance_Initialize_Args();
  Maintenance_Initialize_Result::default_instance_ = new Maintenance_Initialize_Result();
  Maintenance_Ping::default_instance_ = new Maintenance_Ping();
  Maintenance_Ping_Args::default_instance_ = new Maintenance_Ping_Args();
  Maintenance_Ping_Result::default_instance_ = new Maintenance_Ping_Result();
  Maintenance_Dump::default_instance_ = new Maintenance_Dump();
  Maintenance_Dump_Args::default_instance_ = new Maintenance_Dump_Args();
  Maintenance_Dump_Result::default_instance_ = new Maintenance_Dump_Result();
  Maintenance_Shutdown::default_instance_ = new Maintenance_Shutdown();
  Maintenance_Shutdown_Args::default_instance_ = new Maintenance_Shutdown_Args();
  Maintenance_Shutdown_Result::default_instance_ = new Maintenance_Shutdown_Result();
  Project::default_instance_ = new Project();
  Project_Projects::default_instance_ = new Project_Projects();
  Project_Projects_Args::default_instance_ = new Project_Projects_Args();
  Project_Projects_Result::default_instance_ = new Project_Projects_Result();
  Project_ProjectByID::default_instance_ = new Project_ProjectByID();
  Project_ProjectByID_Args::default_instance_ = new Project_ProjectByID_Args();
  Project_ProjectByID_Result::default_instance_ = new Project_ProjectByID_Result();
  Project_CreateProject::default_instance_ = new Project_CreateProject();
  Project_CreateProject_Args::default_instance_ = new Project_CreateProject_Args();
  Project_CreateProject_Result::default_instance_ = new Project_CreateProject_Result();
  Project_OpenProject::default_instance_ = new Project_OpenProject();
  Project_OpenProject_Args::default_instance_ = new Project_OpenProject_Args();
  Project_OpenProject_Result::default_instance_ = new Project_OpenProject_Result();
  Project_UpdateProject::default_instance_ = new Project_UpdateProject();
  Project_UpdateProject_Args::default_instance_ = new Project_UpdateProject_Args();
  Project_UpdateProject_Result::default_instance_ = new Project_UpdateProject_Result();
  Project_CloseProject::default_instance_ = new Project_CloseProject();
  Project_CloseProject_Args::default_instance_ = new Project_CloseProject_Args();
  Project_CloseProject_Result::default_instance_ = new Project_CloseProject_Result();
  Project_StoreProject::default_instance_ = new Project_StoreProject();
  Project_StoreProject_Args::default_instance_ = new Project_StoreProject_Args();
  Project_StoreProject_Result::default_instance_ = new Project_StoreProject_Result();
  Request::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  Exception::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1000, 11, false, false,
    &::generated::proto::batch::Exception::default_instance());
  FileSystem::default_instance_->InitAsDefaultInstance();
  FileSystem_LS::default_instance_->InitAsDefaultInstance();
  FileSystem_LS_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1001, 11, false, false,
    &::generated::proto::batch::FileSystem_LS_Args::default_instance());
  FileSystem_LS_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1001, 11, false, false,
    &::generated::proto::batch::FileSystem_LS_Result::default_instance());
  FileSystem_Stat::default_instance_->InitAsDefaultInstance();
  FileSystem_Stat_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1002, 11, false, false,
    &::generated::proto::batch::FileSystem_Stat_Args::default_instance());
  FileSystem_Stat_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1002, 11, false, false,
    &::generated::proto::batch::FileSystem_Stat_Result::default_instance());
  FileSystem_MkDir::default_instance_->InitAsDefaultInstance();
  FileSystem_MkDir_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1003, 11, false, false,
    &::generated::proto::batch::FileSystem_MkDir_Args::default_instance());
  FileSystem_MkDir_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1003, 11, false, false,
    &::generated::proto::batch::FileSystem_MkDir_Result::default_instance());
  FileSystem_Touch::default_instance_->InitAsDefaultInstance();
  FileSystem_Touch_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1004, 11, false, false,
    &::generated::proto::batch::FileSystem_Touch_Args::default_instance());
  FileSystem_Touch_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1004, 11, false, false,
    &::generated::proto::batch::FileSystem_Touch_Result::default_instance());
  FileSystem_RM::default_instance_->InitAsDefaultInstance();
  FileSystem_RM_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1005, 11, false, false,
    &::generated::proto::batch::FileSystem_RM_Args::default_instance());
  FileSystem_RM_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1005, 11, false, false,
    &::generated::proto::batch::FileSystem_RM_Result::default_instance());
  FileSystem_CP::default_instance_->InitAsDefaultInstance();
  FileSystem_CP_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1006, 11, false, false,
    &::generated::proto::batch::FileSystem_CP_Args::default_instance());
  FileSystem_CP_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1006, 11, false, false,
    &::generated::proto::batch::FileSystem_CP_Result::default_instance());
  FileSystem_MV::default_instance_->InitAsDefaultInstance();
  FileSystem_MV_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1007, 11, false, false,
    &::generated::proto::batch::FileSystem_MV_Args::default_instance());
  FileSystem_MV_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1007, 11, false, false,
    &::generated::proto::batch::FileSystem_MV_Result::default_instance());
  Library::default_instance_->InitAsDefaultInstance();
  Library_Libraries::default_instance_->InitAsDefaultInstance();
  Library_Libraries_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1008, 11, false, false,
    &::generated::proto::batch::Library_Libraries_Args::default_instance());
  Library_Libraries_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1009, 11, false, false,
    &::generated::proto::batch::Library_Libraries_Result::default_instance());
  Library_LibraryByID::default_instance_->InitAsDefaultInstance();
  Library_LibraryByID_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1011, 11, false, false,
    &::generated::proto::batch::Library_LibraryByID_Args::default_instance());
  Library_LibraryByID_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1011, 11, false, false,
    &::generated::proto::batch::Library_LibraryByID_Result::default_instance());
  Library_CreateLibrary::default_instance_->InitAsDefaultInstance();
  Library_CreateLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1012, 11, false, false,
    &::generated::proto::batch::Library_CreateLibrary_Args::default_instance());
  Library_CreateLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1012, 11, false, false,
    &::generated::proto::batch::Library_CreateLibrary_Result::default_instance());
  Library_LoadLibrary::default_instance_->InitAsDefaultInstance();
  Library_LoadLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1013, 11, false, false,
    &::generated::proto::batch::Library_LoadLibrary_Args::default_instance());
  Library_LoadLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1013, 11, false, false,
    &::generated::proto::batch::Library_LoadLibrary_Result::default_instance());
  Library_UnloadLibrary::default_instance_->InitAsDefaultInstance();
  Library_UnloadLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1014, 11, false, false,
    &::generated::proto::batch::Library_UnloadLibrary_Args::default_instance());
  Library_UnloadLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1014, 11, false, false,
    &::generated::proto::batch::Library_UnloadLibrary_Result::default_instance());
  Library_StoreLibrary::default_instance_->InitAsDefaultInstance();
  Library_StoreLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1015, 11, false, false,
    &::generated::proto::batch::Library_StoreLibrary_Args::default_instance());
  Library_StoreLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1015, 11, false, false,
    &::generated::proto::batch::Library_StoreLibrary_Result::default_instance());
  Library_BuildLibrary::default_instance_->InitAsDefaultInstance();
  Library_BuildLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1016, 11, false, false,
    &::generated::proto::batch::Library_BuildLibrary_Args::default_instance());
  Library_BuildLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1016, 11, false, false,
    &::generated::proto::batch::Library_BuildLibrary_Result::default_instance());
  Library_RunLibrary::default_instance_->InitAsDefaultInstance();
  Library_RunLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1017, 11, false, false,
    &::generated::proto::batch::Library_RunLibrary_Args::default_instance());
  Library_RunLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1017, 11, false, false,
    &::generated::proto::batch::Library_RunLibrary_Result::default_instance());
  Maintenance::default_instance_->InitAsDefaultInstance();
  Maintenance_Initialize::default_instance_->InitAsDefaultInstance();
  Maintenance_Initialize_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1018, 11, false, false,
    &::generated::proto::batch::Maintenance_Initialize_Args::default_instance());
  Maintenance_Initialize_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1018, 11, false, false,
    &::generated::proto::batch::Maintenance_Initialize_Result::default_instance());
  Maintenance_Ping::default_instance_->InitAsDefaultInstance();
  Maintenance_Ping_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1019, 11, false, false,
    &::generated::proto::batch::Maintenance_Ping_Args::default_instance());
  Maintenance_Ping_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1019, 11, false, false,
    &::generated::proto::batch::Maintenance_Ping_Result::default_instance());
  Maintenance_Dump::default_instance_->InitAsDefaultInstance();
  Maintenance_Dump_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1020, 11, false, false,
    &::generated::proto::batch::Maintenance_Dump_Args::default_instance());
  Maintenance_Dump_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1020, 11, false, false,
    &::generated::proto::batch::Maintenance_Dump_Result::default_instance());
  Maintenance_Shutdown::default_instance_->InitAsDefaultInstance();
  Maintenance_Shutdown_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1021, 11, false, false,
    &::generated::proto::batch::Maintenance_Shutdown_Args::default_instance());
  Maintenance_Shutdown_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1021, 11, false, false,
    &::generated::proto::batch::Maintenance_Shutdown_Result::default_instance());
  Project::default_instance_->InitAsDefaultInstance();
  Project_Projects::default_instance_->InitAsDefaultInstance();
  Project_Projects_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1022, 11, false, false,
    &::generated::proto::batch::Project_Projects_Args::default_instance());
  Project_Projects_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1022, 11, false, false,
    &::generated::proto::batch::Project_Projects_Result::default_instance());
  Project_ProjectByID::default_instance_->InitAsDefaultInstance();
  Project_ProjectByID_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1023, 11, false, false,
    &::generated::proto::batch::Project_ProjectByID_Args::default_instance());
  Project_ProjectByID_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1023, 11, false, false,
    &::generated::proto::batch::Project_ProjectByID_Result::default_instance());
  Project_CreateProject::default_instance_->InitAsDefaultInstance();
  Project_CreateProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1024, 11, false, false,
    &::generated::proto::batch::Project_CreateProject_Args::default_instance());
  Project_CreateProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1024, 11, false, false,
    &::generated::proto::batch::Project_CreateProject_Result::default_instance());
  Project_OpenProject::default_instance_->InitAsDefaultInstance();
  Project_OpenProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1025, 11, false, false,
    &::generated::proto::batch::Project_OpenProject_Args::default_instance());
  Project_OpenProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1025, 11, false, false,
    &::generated::proto::batch::Project_OpenProject_Result::default_instance());
  Project_UpdateProject::default_instance_->InitAsDefaultInstance();
  Project_UpdateProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1026, 11, false, false,
    &::generated::proto::batch::Project_UpdateProject_Args::default_instance());
  Project_UpdateProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1026, 11, false, false,
    &::generated::proto::batch::Project_UpdateProject_Result::default_instance());
  Project_CloseProject::default_instance_->InitAsDefaultInstance();
  Project_CloseProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1027, 11, false, false,
    &::generated::proto::batch::Project_CloseProject_Args::default_instance());
  Project_CloseProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1027, 11, false, false,
    &::generated::proto::batch::Project_CloseProject_Result::default_instance());
  Project_StoreProject::default_instance_->InitAsDefaultInstance();
  Project_StoreProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1028, 11, false, false,
    &::generated::proto::batch::Project_StoreProject_Args::default_instance());
  Project_StoreProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1028, 11, false, false,
    &::generated::proto::batch::Project_StoreProject_Result::default_instance());
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_2dapi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_2dapi_2eproto {
  StaticDescriptorInitializer_server_2dapi_2eproto() {
    protobuf_AddDesc_server_2dapi_2eproto();
  }
} static_descriptor_initializer_server_2dapi_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* Request_Method_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_Method_descriptor_;
}
bool Request_Method_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
    case 9:
    case 10:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
    case 17:
    case 18:
    case 19:
    case 20:
    case 21:
    case 22:
    case 23:
    case 24:
    case 25:
    case 26:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Request_Method Request::LS;
const Request_Method Request::Stat;
const Request_Method Request::MkDir;
const Request_Method Request::Touch;
const Request_Method Request::RM;
const Request_Method Request::CP;
const Request_Method Request::MV;
const Request_Method Request::Libraries;
const Request_Method Request::LibraryByID;
const Request_Method Request::CreateLibrary;
const Request_Method Request::LoadLibrary;
const Request_Method Request::UnloadLibrary;
const Request_Method Request::StoreLibrary;
const Request_Method Request::BuildLibrary;
const Request_Method Request::RunLibrary;
const Request_Method Request::Initialize;
const Request_Method Request::Ping;
const Request_Method Request::Dump;
const Request_Method Request::Shutdown;
const Request_Method Request::Projects;
const Request_Method Request::ProjectByID;
const Request_Method Request::CreateProject;
const Request_Method Request::OpenProject;
const Request_Method Request::UpdateProject;
const Request_Method Request::CloseProject;
const Request_Method Request::StoreProject;
const Request_Method Request::Method_MIN;
const Request_Method Request::Method_MAX;
const int Request::Method_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Request::kMethodFieldNumber;
#endif  // !_MSC_VER

Request::Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request::InitAsDefaultInstance() {
}

Request::Request(const Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  method_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New() const {
  return new Request;
}

void Request::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    method_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.batch.Request.Method method = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::generated::proto::batch::Request_Method_IsValid(value)) {
            set_method(static_cast< ::generated::proto::batch::Request_Method >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.batch.Request.Method method = 1;
  if (has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }
  
  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.batch.Request.Method method = 1;
  if (has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }
  
  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.batch.Request.Method method = 1;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
    }
    
  }
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_method()) {
      set_method(from.method());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Request::Swap(Request* other) {
  if (other != this) {
    std::swap(method_, other->method_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Response_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Type_descriptor_;
}
bool Response_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Response_Type Response::Result;
const Response_Type Response::Exception;
const Response_Type Response::Type_MIN;
const Response_Type Response::Type_MAX;
const int Response::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Response::kTypeFieldNumber;
#endif  // !_MSC_VER

Response::Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response::InitAsDefaultInstance() {
}

Response::Response(const Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response::~Response() {
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New() const {
  return new Response;
}

void Response::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.batch.Response.Type type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::generated::proto::batch::Response_Type_IsValid(value)) {
            set_type(static_cast< ::generated::proto::batch::Response_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.batch.Response.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }
  
  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.batch.Response.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }
  
  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.batch.Response.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }
    
  }
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Response::Swap(Response* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Exception::kMessageFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Exception::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Exception >, 11, false >
  Exception::rsp(kRspFieldNumber, ::generated::proto::batch::Exception::default_instance());
Exception::Exception()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Exception::InitAsDefaultInstance() {
}

Exception::Exception(const Exception& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Exception::SharedCtor() {
  _cached_size_ = 0;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Exception::~Exception() {
  SharedDtor();
}

void Exception::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void Exception::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Exception::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Exception_descriptor_;
}

const Exception& Exception::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Exception* Exception::default_instance_ = NULL;

Exception* Exception::New() const {
  return new Exception;
}

void Exception::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Exception::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Exception::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->message(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Exception::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Exception::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string message = 1;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Exception::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Exception* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Exception*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Exception::MergeFrom(const Exception& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Exception::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Exception::CopyFrom(const Exception& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Exception::IsInitialized() const {
  
  return true;
}

void Exception::Swap(Exception* other) {
  if (other != this) {
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Exception::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Exception_descriptor_;
  metadata.reflection = Exception_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FileSystem_LS_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_LS_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_LS_Args >, 11, false >
  FileSystem_LS_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_LS_Args::default_instance());
FileSystem_LS_Args::FileSystem_LS_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_LS_Args::InitAsDefaultInstance() {
}

FileSystem_LS_Args::FileSystem_LS_Args(const FileSystem_LS_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_LS_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_LS_Args::~FileSystem_LS_Args() {
  SharedDtor();
}

void FileSystem_LS_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_LS_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_LS_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_LS_Args_descriptor_;
}

const FileSystem_LS_Args& FileSystem_LS_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_LS_Args* FileSystem_LS_Args::default_instance_ = NULL;

FileSystem_LS_Args* FileSystem_LS_Args::New() const {
  return new FileSystem_LS_Args;
}

void FileSystem_LS_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_LS_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_LS_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_LS_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_LS_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_LS_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_LS_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_LS_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_LS_Args::MergeFrom(const FileSystem_LS_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_LS_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_LS_Args::CopyFrom(const FileSystem_LS_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_LS_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void FileSystem_LS_Args::Swap(FileSystem_LS_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_LS_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_LS_Args_descriptor_;
  metadata.reflection = FileSystem_LS_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_LS_Result::kItemsFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_LS_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_LS_Result >, 11, false >
  FileSystem_LS_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_LS_Result::default_instance());
FileSystem_LS_Result::FileSystem_LS_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_LS_Result::InitAsDefaultInstance() {
}

FileSystem_LS_Result::FileSystem_LS_Result(const FileSystem_LS_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_LS_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_LS_Result::~FileSystem_LS_Result() {
  SharedDtor();
}

void FileSystem_LS_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_LS_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_LS_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_LS_Result_descriptor_;
}

const FileSystem_LS_Result& FileSystem_LS_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_LS_Result* FileSystem_LS_Result::default_instance_ = NULL;

FileSystem_LS_Result* FileSystem_LS_Result::New() const {
  return new FileSystem_LS_Result;
}

void FileSystem_LS_Result::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_LS_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.filesystem.Item items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_LS_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.filesystem.Item items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_LS_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.filesystem.Item items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_LS_Result::ByteSize() const {
  int total_size = 0;
  
  // repeated .generated.proto.filesystem.Item items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_LS_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_LS_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_LS_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_LS_Result::MergeFrom(const FileSystem_LS_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_LS_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_LS_Result::CopyFrom(const FileSystem_LS_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_LS_Result::IsInitialized() const {
  
  return true;
}

void FileSystem_LS_Result::Swap(FileSystem_LS_Result* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_LS_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_LS_Result_descriptor_;
  metadata.reflection = FileSystem_LS_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_LS::FileSystem_LS()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_LS::InitAsDefaultInstance() {
}

FileSystem_LS::FileSystem_LS(const FileSystem_LS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_LS::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_LS::~FileSystem_LS() {
  SharedDtor();
}

void FileSystem_LS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_LS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_LS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_LS_descriptor_;
}

const FileSystem_LS& FileSystem_LS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_LS* FileSystem_LS::default_instance_ = NULL;

FileSystem_LS* FileSystem_LS::New() const {
  return new FileSystem_LS;
}

void FileSystem_LS::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_LS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_LS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_LS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_LS::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_LS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_LS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_LS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_LS::MergeFrom(const FileSystem_LS& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_LS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_LS::CopyFrom(const FileSystem_LS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_LS::IsInitialized() const {
  
  return true;
}

void FileSystem_LS::Swap(FileSystem_LS* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_LS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_LS_descriptor_;
  metadata.reflection = FileSystem_LS_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_Stat_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_Stat_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_Stat_Args >, 11, false >
  FileSystem_Stat_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_Stat_Args::default_instance());
FileSystem_Stat_Args::FileSystem_Stat_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Stat_Args::InitAsDefaultInstance() {
}

FileSystem_Stat_Args::FileSystem_Stat_Args(const FileSystem_Stat_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Stat_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Stat_Args::~FileSystem_Stat_Args() {
  SharedDtor();
}

void FileSystem_Stat_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_Stat_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Stat_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Stat_Args_descriptor_;
}

const FileSystem_Stat_Args& FileSystem_Stat_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_Stat_Args* FileSystem_Stat_Args::default_instance_ = NULL;

FileSystem_Stat_Args* FileSystem_Stat_Args::New() const {
  return new FileSystem_Stat_Args;
}

void FileSystem_Stat_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Stat_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_Stat_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Stat_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Stat_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Stat_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Stat_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Stat_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Stat_Args::MergeFrom(const FileSystem_Stat_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Stat_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Stat_Args::CopyFrom(const FileSystem_Stat_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Stat_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void FileSystem_Stat_Args::Swap(FileSystem_Stat_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Stat_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Stat_Args_descriptor_;
  metadata.reflection = FileSystem_Stat_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_Stat_Result::kItemFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_Stat_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_Stat_Result >, 11, false >
  FileSystem_Stat_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_Stat_Result::default_instance());
FileSystem_Stat_Result::FileSystem_Stat_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Stat_Result::InitAsDefaultInstance() {
  item_ = const_cast< ::generated::proto::filesystem::Item*>(&::generated::proto::filesystem::Item::default_instance());
}

FileSystem_Stat_Result::FileSystem_Stat_Result(const FileSystem_Stat_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Stat_Result::SharedCtor() {
  _cached_size_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Stat_Result::~FileSystem_Stat_Result() {
  SharedDtor();
}

void FileSystem_Stat_Result::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void FileSystem_Stat_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Stat_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Stat_Result_descriptor_;
}

const FileSystem_Stat_Result& FileSystem_Stat_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_Stat_Result* FileSystem_Stat_Result::default_instance_ = NULL;

FileSystem_Stat_Result* FileSystem_Stat_Result::New() const {
  return new FileSystem_Stat_Result;
}

void FileSystem_Stat_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item()) {
      if (item_ != NULL) item_->::generated::proto::filesystem::Item::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Stat_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.filesystem.Item item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_Stat_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.filesystem.Item item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Stat_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.filesystem.Item item = 1;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Stat_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.filesystem.Item item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Stat_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Stat_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Stat_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Stat_Result::MergeFrom(const FileSystem_Stat_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item()) {
      mutable_item()->::generated::proto::filesystem::Item::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Stat_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Stat_Result::CopyFrom(const FileSystem_Stat_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Stat_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void FileSystem_Stat_Result::Swap(FileSystem_Stat_Result* other) {
  if (other != this) {
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Stat_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Stat_Result_descriptor_;
  metadata.reflection = FileSystem_Stat_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_Stat::FileSystem_Stat()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Stat::InitAsDefaultInstance() {
}

FileSystem_Stat::FileSystem_Stat(const FileSystem_Stat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Stat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Stat::~FileSystem_Stat() {
  SharedDtor();
}

void FileSystem_Stat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_Stat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Stat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Stat_descriptor_;
}

const FileSystem_Stat& FileSystem_Stat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_Stat* FileSystem_Stat::default_instance_ = NULL;

FileSystem_Stat* FileSystem_Stat::New() const {
  return new FileSystem_Stat;
}

void FileSystem_Stat::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Stat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Stat::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Stat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Stat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Stat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Stat::MergeFrom(const FileSystem_Stat& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Stat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Stat::CopyFrom(const FileSystem_Stat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Stat::IsInitialized() const {
  
  return true;
}

void FileSystem_Stat::Swap(FileSystem_Stat* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Stat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Stat_descriptor_;
  metadata.reflection = FileSystem_Stat_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_MkDir_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_MkDir_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_MkDir_Args >, 11, false >
  FileSystem_MkDir_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_MkDir_Args::default_instance());
FileSystem_MkDir_Args::FileSystem_MkDir_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MkDir_Args::InitAsDefaultInstance() {
}

FileSystem_MkDir_Args::FileSystem_MkDir_Args(const FileSystem_MkDir_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MkDir_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MkDir_Args::~FileSystem_MkDir_Args() {
  SharedDtor();
}

void FileSystem_MkDir_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_MkDir_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MkDir_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MkDir_Args_descriptor_;
}

const FileSystem_MkDir_Args& FileSystem_MkDir_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_MkDir_Args* FileSystem_MkDir_Args::default_instance_ = NULL;

FileSystem_MkDir_Args* FileSystem_MkDir_Args::New() const {
  return new FileSystem_MkDir_Args;
}

void FileSystem_MkDir_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MkDir_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_MkDir_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MkDir_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MkDir_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MkDir_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MkDir_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MkDir_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MkDir_Args::MergeFrom(const FileSystem_MkDir_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MkDir_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MkDir_Args::CopyFrom(const FileSystem_MkDir_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MkDir_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void FileSystem_MkDir_Args::Swap(FileSystem_MkDir_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MkDir_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MkDir_Args_descriptor_;
  metadata.reflection = FileSystem_MkDir_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_MkDir_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_MkDir_Result >, 11, false >
  FileSystem_MkDir_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_MkDir_Result::default_instance());
FileSystem_MkDir_Result::FileSystem_MkDir_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MkDir_Result::InitAsDefaultInstance() {
}

FileSystem_MkDir_Result::FileSystem_MkDir_Result(const FileSystem_MkDir_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MkDir_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MkDir_Result::~FileSystem_MkDir_Result() {
  SharedDtor();
}

void FileSystem_MkDir_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_MkDir_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MkDir_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MkDir_Result_descriptor_;
}

const FileSystem_MkDir_Result& FileSystem_MkDir_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_MkDir_Result* FileSystem_MkDir_Result::default_instance_ = NULL;

FileSystem_MkDir_Result* FileSystem_MkDir_Result::New() const {
  return new FileSystem_MkDir_Result;
}

void FileSystem_MkDir_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MkDir_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_MkDir_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MkDir_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MkDir_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MkDir_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MkDir_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MkDir_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MkDir_Result::MergeFrom(const FileSystem_MkDir_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MkDir_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MkDir_Result::CopyFrom(const FileSystem_MkDir_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MkDir_Result::IsInitialized() const {
  
  return true;
}

void FileSystem_MkDir_Result::Swap(FileSystem_MkDir_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MkDir_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MkDir_Result_descriptor_;
  metadata.reflection = FileSystem_MkDir_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_MkDir::FileSystem_MkDir()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MkDir::InitAsDefaultInstance() {
}

FileSystem_MkDir::FileSystem_MkDir(const FileSystem_MkDir& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MkDir::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MkDir::~FileSystem_MkDir() {
  SharedDtor();
}

void FileSystem_MkDir::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_MkDir::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MkDir::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MkDir_descriptor_;
}

const FileSystem_MkDir& FileSystem_MkDir::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_MkDir* FileSystem_MkDir::default_instance_ = NULL;

FileSystem_MkDir* FileSystem_MkDir::New() const {
  return new FileSystem_MkDir;
}

void FileSystem_MkDir::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MkDir::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_MkDir::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MkDir::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MkDir::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MkDir::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MkDir* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MkDir*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MkDir::MergeFrom(const FileSystem_MkDir& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MkDir::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MkDir::CopyFrom(const FileSystem_MkDir& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MkDir::IsInitialized() const {
  
  return true;
}

void FileSystem_MkDir::Swap(FileSystem_MkDir* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MkDir::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MkDir_descriptor_;
  metadata.reflection = FileSystem_MkDir_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_Touch_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_Touch_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_Touch_Args >, 11, false >
  FileSystem_Touch_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_Touch_Args::default_instance());
FileSystem_Touch_Args::FileSystem_Touch_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Touch_Args::InitAsDefaultInstance() {
}

FileSystem_Touch_Args::FileSystem_Touch_Args(const FileSystem_Touch_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Touch_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Touch_Args::~FileSystem_Touch_Args() {
  SharedDtor();
}

void FileSystem_Touch_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_Touch_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Touch_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Touch_Args_descriptor_;
}

const FileSystem_Touch_Args& FileSystem_Touch_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_Touch_Args* FileSystem_Touch_Args::default_instance_ = NULL;

FileSystem_Touch_Args* FileSystem_Touch_Args::New() const {
  return new FileSystem_Touch_Args;
}

void FileSystem_Touch_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Touch_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_Touch_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Touch_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Touch_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Touch_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Touch_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Touch_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Touch_Args::MergeFrom(const FileSystem_Touch_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Touch_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Touch_Args::CopyFrom(const FileSystem_Touch_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Touch_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void FileSystem_Touch_Args::Swap(FileSystem_Touch_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Touch_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Touch_Args_descriptor_;
  metadata.reflection = FileSystem_Touch_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_Touch_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_Touch_Result >, 11, false >
  FileSystem_Touch_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_Touch_Result::default_instance());
FileSystem_Touch_Result::FileSystem_Touch_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Touch_Result::InitAsDefaultInstance() {
}

FileSystem_Touch_Result::FileSystem_Touch_Result(const FileSystem_Touch_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Touch_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Touch_Result::~FileSystem_Touch_Result() {
  SharedDtor();
}

void FileSystem_Touch_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_Touch_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Touch_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Touch_Result_descriptor_;
}

const FileSystem_Touch_Result& FileSystem_Touch_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_Touch_Result* FileSystem_Touch_Result::default_instance_ = NULL;

FileSystem_Touch_Result* FileSystem_Touch_Result::New() const {
  return new FileSystem_Touch_Result;
}

void FileSystem_Touch_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Touch_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_Touch_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Touch_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Touch_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Touch_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Touch_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Touch_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Touch_Result::MergeFrom(const FileSystem_Touch_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Touch_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Touch_Result::CopyFrom(const FileSystem_Touch_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Touch_Result::IsInitialized() const {
  
  return true;
}

void FileSystem_Touch_Result::Swap(FileSystem_Touch_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Touch_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Touch_Result_descriptor_;
  metadata.reflection = FileSystem_Touch_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_Touch::FileSystem_Touch()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Touch::InitAsDefaultInstance() {
}

FileSystem_Touch::FileSystem_Touch(const FileSystem_Touch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Touch::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Touch::~FileSystem_Touch() {
  SharedDtor();
}

void FileSystem_Touch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_Touch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Touch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Touch_descriptor_;
}

const FileSystem_Touch& FileSystem_Touch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_Touch* FileSystem_Touch::default_instance_ = NULL;

FileSystem_Touch* FileSystem_Touch::New() const {
  return new FileSystem_Touch;
}

void FileSystem_Touch::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Touch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_Touch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Touch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Touch::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Touch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Touch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Touch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Touch::MergeFrom(const FileSystem_Touch& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Touch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Touch::CopyFrom(const FileSystem_Touch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Touch::IsInitialized() const {
  
  return true;
}

void FileSystem_Touch::Swap(FileSystem_Touch* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Touch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Touch_descriptor_;
  metadata.reflection = FileSystem_Touch_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_RM_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_RM_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_RM_Args >, 11, false >
  FileSystem_RM_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_RM_Args::default_instance());
FileSystem_RM_Args::FileSystem_RM_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_RM_Args::InitAsDefaultInstance() {
}

FileSystem_RM_Args::FileSystem_RM_Args(const FileSystem_RM_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_RM_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_RM_Args::~FileSystem_RM_Args() {
  SharedDtor();
}

void FileSystem_RM_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_RM_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_RM_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_RM_Args_descriptor_;
}

const FileSystem_RM_Args& FileSystem_RM_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_RM_Args* FileSystem_RM_Args::default_instance_ = NULL;

FileSystem_RM_Args* FileSystem_RM_Args::New() const {
  return new FileSystem_RM_Args;
}

void FileSystem_RM_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_RM_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_RM_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_RM_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_RM_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_RM_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_RM_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_RM_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_RM_Args::MergeFrom(const FileSystem_RM_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_RM_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_RM_Args::CopyFrom(const FileSystem_RM_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_RM_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void FileSystem_RM_Args::Swap(FileSystem_RM_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_RM_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_RM_Args_descriptor_;
  metadata.reflection = FileSystem_RM_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_RM_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_RM_Result >, 11, false >
  FileSystem_RM_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_RM_Result::default_instance());
FileSystem_RM_Result::FileSystem_RM_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_RM_Result::InitAsDefaultInstance() {
}

FileSystem_RM_Result::FileSystem_RM_Result(const FileSystem_RM_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_RM_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_RM_Result::~FileSystem_RM_Result() {
  SharedDtor();
}

void FileSystem_RM_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_RM_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_RM_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_RM_Result_descriptor_;
}

const FileSystem_RM_Result& FileSystem_RM_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_RM_Result* FileSystem_RM_Result::default_instance_ = NULL;

FileSystem_RM_Result* FileSystem_RM_Result::New() const {
  return new FileSystem_RM_Result;
}

void FileSystem_RM_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_RM_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_RM_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_RM_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_RM_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_RM_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_RM_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_RM_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_RM_Result::MergeFrom(const FileSystem_RM_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_RM_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_RM_Result::CopyFrom(const FileSystem_RM_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_RM_Result::IsInitialized() const {
  
  return true;
}

void FileSystem_RM_Result::Swap(FileSystem_RM_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_RM_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_RM_Result_descriptor_;
  metadata.reflection = FileSystem_RM_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_RM::FileSystem_RM()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_RM::InitAsDefaultInstance() {
}

FileSystem_RM::FileSystem_RM(const FileSystem_RM& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_RM::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_RM::~FileSystem_RM() {
  SharedDtor();
}

void FileSystem_RM::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_RM::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_RM::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_RM_descriptor_;
}

const FileSystem_RM& FileSystem_RM::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_RM* FileSystem_RM::default_instance_ = NULL;

FileSystem_RM* FileSystem_RM::New() const {
  return new FileSystem_RM;
}

void FileSystem_RM::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_RM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_RM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_RM::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_RM::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_RM::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_RM* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_RM*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_RM::MergeFrom(const FileSystem_RM& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_RM::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_RM::CopyFrom(const FileSystem_RM& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_RM::IsInitialized() const {
  
  return true;
}

void FileSystem_RM::Swap(FileSystem_RM* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_RM::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_RM_descriptor_;
  metadata.reflection = FileSystem_RM_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_CP_Args::kSrcFieldNumber;
const int FileSystem_CP_Args::kDstFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_CP_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_CP_Args >, 11, false >
  FileSystem_CP_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_CP_Args::default_instance());
FileSystem_CP_Args::FileSystem_CP_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_CP_Args::InitAsDefaultInstance() {
}

FileSystem_CP_Args::FileSystem_CP_Args(const FileSystem_CP_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_CP_Args::SharedCtor() {
  _cached_size_ = 0;
  src_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_CP_Args::~FileSystem_CP_Args() {
  SharedDtor();
}

void FileSystem_CP_Args::SharedDtor() {
  if (src_ != &::google::protobuf::internal::kEmptyString) {
    delete src_;
  }
  if (dst_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_CP_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_CP_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_CP_Args_descriptor_;
}

const FileSystem_CP_Args& FileSystem_CP_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_CP_Args* FileSystem_CP_Args::default_instance_ = NULL;

FileSystem_CP_Args* FileSystem_CP_Args::New() const {
  return new FileSystem_CP_Args;
}

void FileSystem_CP_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_src()) {
      if (src_ != &::google::protobuf::internal::kEmptyString) {
        src_->clear();
      }
    }
    if (has_dst()) {
      if (dst_ != &::google::protobuf::internal::kEmptyString) {
        dst_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_CP_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dst;
        break;
      }
      
      // required string dst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dst().data(), this->dst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_CP_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->src(), output);
  }
  
  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->dst(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_CP_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }
  
  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dst(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_CP_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string src = 1;
    if (has_src()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src());
    }
    
    // required string dst = 2;
    if (has_dst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dst());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_CP_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_CP_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_CP_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_CP_Args::MergeFrom(const FileSystem_CP_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_src(from.src());
    }
    if (from.has_dst()) {
      set_dst(from.dst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_CP_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_CP_Args::CopyFrom(const FileSystem_CP_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_CP_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void FileSystem_CP_Args::Swap(FileSystem_CP_Args* other) {
  if (other != this) {
    std::swap(src_, other->src_);
    std::swap(dst_, other->dst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_CP_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_CP_Args_descriptor_;
  metadata.reflection = FileSystem_CP_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_CP_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_CP_Result >, 11, false >
  FileSystem_CP_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_CP_Result::default_instance());
FileSystem_CP_Result::FileSystem_CP_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_CP_Result::InitAsDefaultInstance() {
}

FileSystem_CP_Result::FileSystem_CP_Result(const FileSystem_CP_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_CP_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_CP_Result::~FileSystem_CP_Result() {
  SharedDtor();
}

void FileSystem_CP_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_CP_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_CP_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_CP_Result_descriptor_;
}

const FileSystem_CP_Result& FileSystem_CP_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_CP_Result* FileSystem_CP_Result::default_instance_ = NULL;

FileSystem_CP_Result* FileSystem_CP_Result::New() const {
  return new FileSystem_CP_Result;
}

void FileSystem_CP_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_CP_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_CP_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_CP_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_CP_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_CP_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_CP_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_CP_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_CP_Result::MergeFrom(const FileSystem_CP_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_CP_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_CP_Result::CopyFrom(const FileSystem_CP_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_CP_Result::IsInitialized() const {
  
  return true;
}

void FileSystem_CP_Result::Swap(FileSystem_CP_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_CP_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_CP_Result_descriptor_;
  metadata.reflection = FileSystem_CP_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_CP::FileSystem_CP()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_CP::InitAsDefaultInstance() {
}

FileSystem_CP::FileSystem_CP(const FileSystem_CP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_CP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_CP::~FileSystem_CP() {
  SharedDtor();
}

void FileSystem_CP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_CP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_CP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_CP_descriptor_;
}

const FileSystem_CP& FileSystem_CP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_CP* FileSystem_CP::default_instance_ = NULL;

FileSystem_CP* FileSystem_CP::New() const {
  return new FileSystem_CP;
}

void FileSystem_CP::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_CP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_CP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_CP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_CP::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_CP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_CP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_CP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_CP::MergeFrom(const FileSystem_CP& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_CP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_CP::CopyFrom(const FileSystem_CP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_CP::IsInitialized() const {
  
  return true;
}

void FileSystem_CP::Swap(FileSystem_CP* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_CP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_CP_descriptor_;
  metadata.reflection = FileSystem_CP_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_MV_Args::kSrcFieldNumber;
const int FileSystem_MV_Args::kDstFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_MV_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_MV_Args >, 11, false >
  FileSystem_MV_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_MV_Args::default_instance());
FileSystem_MV_Args::FileSystem_MV_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MV_Args::InitAsDefaultInstance() {
}

FileSystem_MV_Args::FileSystem_MV_Args(const FileSystem_MV_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MV_Args::SharedCtor() {
  _cached_size_ = 0;
  src_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MV_Args::~FileSystem_MV_Args() {
  SharedDtor();
}

void FileSystem_MV_Args::SharedDtor() {
  if (src_ != &::google::protobuf::internal::kEmptyString) {
    delete src_;
  }
  if (dst_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_MV_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MV_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MV_Args_descriptor_;
}

const FileSystem_MV_Args& FileSystem_MV_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_MV_Args* FileSystem_MV_Args::default_instance_ = NULL;

FileSystem_MV_Args* FileSystem_MV_Args::New() const {
  return new FileSystem_MV_Args;
}

void FileSystem_MV_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_src()) {
      if (src_ != &::google::protobuf::internal::kEmptyString) {
        src_->clear();
      }
    }
    if (has_dst()) {
      if (dst_ != &::google::protobuf::internal::kEmptyString) {
        dst_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MV_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dst;
        break;
      }
      
      // required string dst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dst().data(), this->dst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_MV_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->src(), output);
  }
  
  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->dst(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MV_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }
  
  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dst(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MV_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string src = 1;
    if (has_src()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src());
    }
    
    // required string dst = 2;
    if (has_dst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dst());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MV_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MV_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MV_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MV_Args::MergeFrom(const FileSystem_MV_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_src(from.src());
    }
    if (from.has_dst()) {
      set_dst(from.dst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MV_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MV_Args::CopyFrom(const FileSystem_MV_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MV_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void FileSystem_MV_Args::Swap(FileSystem_MV_Args* other) {
  if (other != this) {
    std::swap(src_, other->src_);
    std::swap(dst_, other->dst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MV_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MV_Args_descriptor_;
  metadata.reflection = FileSystem_MV_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_MV_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_MV_Result >, 11, false >
  FileSystem_MV_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_MV_Result::default_instance());
FileSystem_MV_Result::FileSystem_MV_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MV_Result::InitAsDefaultInstance() {
}

FileSystem_MV_Result::FileSystem_MV_Result(const FileSystem_MV_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MV_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MV_Result::~FileSystem_MV_Result() {
  SharedDtor();
}

void FileSystem_MV_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_MV_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MV_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MV_Result_descriptor_;
}

const FileSystem_MV_Result& FileSystem_MV_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_MV_Result* FileSystem_MV_Result::default_instance_ = NULL;

FileSystem_MV_Result* FileSystem_MV_Result::New() const {
  return new FileSystem_MV_Result;
}

void FileSystem_MV_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MV_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_MV_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MV_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MV_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MV_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MV_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MV_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MV_Result::MergeFrom(const FileSystem_MV_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MV_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MV_Result::CopyFrom(const FileSystem_MV_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MV_Result::IsInitialized() const {
  
  return true;
}

void FileSystem_MV_Result::Swap(FileSystem_MV_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MV_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MV_Result_descriptor_;
  metadata.reflection = FileSystem_MV_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_MV::FileSystem_MV()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MV::InitAsDefaultInstance() {
}

FileSystem_MV::FileSystem_MV(const FileSystem_MV& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MV::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MV::~FileSystem_MV() {
  SharedDtor();
}

void FileSystem_MV::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_MV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MV::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MV_descriptor_;
}

const FileSystem_MV& FileSystem_MV::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem_MV* FileSystem_MV::default_instance_ = NULL;

FileSystem_MV* FileSystem_MV::New() const {
  return new FileSystem_MV;
}

void FileSystem_MV::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_MV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MV::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MV::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MV::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MV* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MV*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MV::MergeFrom(const FileSystem_MV& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MV::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MV::CopyFrom(const FileSystem_MV& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MV::IsInitialized() const {
  
  return true;
}

void FileSystem_MV::Swap(FileSystem_MV* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MV::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MV_descriptor_;
  metadata.reflection = FileSystem_MV_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem::FileSystem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem::InitAsDefaultInstance() {
}

FileSystem::FileSystem(const FileSystem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem::~FileSystem() {
  SharedDtor();
}

void FileSystem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_descriptor_;
}

const FileSystem& FileSystem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

FileSystem* FileSystem::default_instance_ = NULL;

FileSystem* FileSystem::New() const {
  return new FileSystem;
}

void FileSystem::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem::MergeFrom(const FileSystem& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem::CopyFrom(const FileSystem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem::IsInitialized() const {
  
  return true;
}

void FileSystem::Swap(FileSystem* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_descriptor_;
  metadata.reflection = FileSystem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Library_Libraries_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_Libraries_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_Libraries_Args >, 11, false >
  Library_Libraries_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_Libraries_Args::default_instance());
Library_Libraries_Args::Library_Libraries_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_Libraries_Args::InitAsDefaultInstance() {
}

Library_Libraries_Args::Library_Libraries_Args(const Library_Libraries_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_Libraries_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_Libraries_Args::~Library_Libraries_Args() {
  SharedDtor();
}

void Library_Libraries_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_Libraries_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_Libraries_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_Libraries_Args_descriptor_;
}

const Library_Libraries_Args& Library_Libraries_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_Libraries_Args* Library_Libraries_Args::default_instance_ = NULL;

Library_Libraries_Args* Library_Libraries_Args::New() const {
  return new Library_Libraries_Args;
}

void Library_Libraries_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_Libraries_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_Libraries_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_Libraries_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_Libraries_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_Libraries_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_Libraries_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_Libraries_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_Libraries_Args::MergeFrom(const Library_Libraries_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_Libraries_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_Libraries_Args::CopyFrom(const Library_Libraries_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_Libraries_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Library_Libraries_Args::Swap(Library_Libraries_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_Libraries_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_Libraries_Args_descriptor_;
  metadata.reflection = Library_Libraries_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_Libraries_Result::kLirariesFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_Libraries_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_Libraries_Result >, 11, false >
  Library_Libraries_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_Libraries_Result::default_instance());
Library_Libraries_Result::Library_Libraries_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_Libraries_Result::InitAsDefaultInstance() {
}

Library_Libraries_Result::Library_Libraries_Result(const Library_Libraries_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_Libraries_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_Libraries_Result::~Library_Libraries_Result() {
  SharedDtor();
}

void Library_Libraries_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_Libraries_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_Libraries_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_Libraries_Result_descriptor_;
}

const Library_Libraries_Result& Library_Libraries_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_Libraries_Result* Library_Libraries_Result::default_instance_ = NULL;

Library_Libraries_Result* Library_Libraries_Result::New() const {
  return new Library_Libraries_Result;
}

void Library_Libraries_Result::Clear() {
  liraries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_Libraries_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.library.Library liraries = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_liraries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_liraries()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_liraries;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_Libraries_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.library.Library liraries = 1;
  for (int i = 0; i < this->liraries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->liraries(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_Libraries_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.library.Library liraries = 1;
  for (int i = 0; i < this->liraries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->liraries(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_Libraries_Result::ByteSize() const {
  int total_size = 0;
  
  // repeated .generated.proto.library.Library liraries = 1;
  total_size += 1 * this->liraries_size();
  for (int i = 0; i < this->liraries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->liraries(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_Libraries_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_Libraries_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_Libraries_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_Libraries_Result::MergeFrom(const Library_Libraries_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  liraries_.MergeFrom(from.liraries_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_Libraries_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_Libraries_Result::CopyFrom(const Library_Libraries_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_Libraries_Result::IsInitialized() const {
  
  for (int i = 0; i < liraries_size(); i++) {
    if (!this->liraries(i).IsInitialized()) return false;
  }
  return true;
}

void Library_Libraries_Result::Swap(Library_Libraries_Result* other) {
  if (other != this) {
    liraries_.Swap(&other->liraries_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_Libraries_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_Libraries_Result_descriptor_;
  metadata.reflection = Library_Libraries_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_Libraries::Library_Libraries()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_Libraries::InitAsDefaultInstance() {
}

Library_Libraries::Library_Libraries(const Library_Libraries& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_Libraries::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_Libraries::~Library_Libraries() {
  SharedDtor();
}

void Library_Libraries::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_Libraries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_Libraries::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_Libraries_descriptor_;
}

const Library_Libraries& Library_Libraries::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_Libraries* Library_Libraries::default_instance_ = NULL;

Library_Libraries* Library_Libraries::New() const {
  return new Library_Libraries;
}

void Library_Libraries::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_Libraries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_Libraries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_Libraries::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_Libraries::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_Libraries::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_Libraries* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_Libraries*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_Libraries::MergeFrom(const Library_Libraries& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_Libraries::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_Libraries::CopyFrom(const Library_Libraries& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_Libraries::IsInitialized() const {
  
  return true;
}

void Library_Libraries::Swap(Library_Libraries* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_Libraries::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_Libraries_descriptor_;
  metadata.reflection = Library_Libraries_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_LibraryByID_Args::kProjectIDFieldNumber;
const int Library_LibraryByID_Args::kLibraryIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_LibraryByID_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_LibraryByID_Args >, 11, false >
  Library_LibraryByID_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_LibraryByID_Args::default_instance());
Library_LibraryByID_Args::Library_LibraryByID_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LibraryByID_Args::InitAsDefaultInstance() {
}

Library_LibraryByID_Args::Library_LibraryByID_Args(const Library_LibraryByID_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LibraryByID_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  libraryid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LibraryByID_Args::~Library_LibraryByID_Args() {
  SharedDtor();
}

void Library_LibraryByID_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_LibraryByID_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LibraryByID_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LibraryByID_Args_descriptor_;
}

const Library_LibraryByID_Args& Library_LibraryByID_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_LibraryByID_Args* Library_LibraryByID_Args::default_instance_ = NULL;

Library_LibraryByID_Args* Library_LibraryByID_Args::New() const {
  return new Library_LibraryByID_Args;
}

void Library_LibraryByID_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
    libraryid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LibraryByID_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_libraryID;
        break;
      }
      
      // required int32 libraryID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_LibraryByID_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }
  
  // required int32 libraryID = 2;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->libraryid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LibraryByID_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }
  
  // required int32 libraryID = 2;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->libraryid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LibraryByID_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
    // required int32 libraryID = 2;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LibraryByID_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LibraryByID_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LibraryByID_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LibraryByID_Args::MergeFrom(const Library_LibraryByID_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LibraryByID_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LibraryByID_Args::CopyFrom(const Library_LibraryByID_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LibraryByID_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Library_LibraryByID_Args::Swap(Library_LibraryByID_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LibraryByID_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LibraryByID_Args_descriptor_;
  metadata.reflection = Library_LibraryByID_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_LibraryByID_Result::kLibraryFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_LibraryByID_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_LibraryByID_Result >, 11, false >
  Library_LibraryByID_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_LibraryByID_Result::default_instance());
Library_LibraryByID_Result::Library_LibraryByID_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LibraryByID_Result::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Library_LibraryByID_Result::Library_LibraryByID_Result(const Library_LibraryByID_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LibraryByID_Result::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LibraryByID_Result::~Library_LibraryByID_Result() {
  SharedDtor();
}

void Library_LibraryByID_Result::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Library_LibraryByID_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LibraryByID_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LibraryByID_Result_descriptor_;
}

const Library_LibraryByID_Result& Library_LibraryByID_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_LibraryByID_Result* Library_LibraryByID_Result::default_instance_ = NULL;

Library_LibraryByID_Result* Library_LibraryByID_Result::New() const {
  return new Library_LibraryByID_Result;
}

void Library_LibraryByID_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LibraryByID_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_LibraryByID_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LibraryByID_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LibraryByID_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LibraryByID_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LibraryByID_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LibraryByID_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LibraryByID_Result::MergeFrom(const Library_LibraryByID_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LibraryByID_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LibraryByID_Result::CopyFrom(const Library_LibraryByID_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LibraryByID_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Library_LibraryByID_Result::Swap(Library_LibraryByID_Result* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LibraryByID_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LibraryByID_Result_descriptor_;
  metadata.reflection = Library_LibraryByID_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_LibraryByID::Library_LibraryByID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LibraryByID::InitAsDefaultInstance() {
}

Library_LibraryByID::Library_LibraryByID(const Library_LibraryByID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LibraryByID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LibraryByID::~Library_LibraryByID() {
  SharedDtor();
}

void Library_LibraryByID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_LibraryByID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LibraryByID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LibraryByID_descriptor_;
}

const Library_LibraryByID& Library_LibraryByID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_LibraryByID* Library_LibraryByID::default_instance_ = NULL;

Library_LibraryByID* Library_LibraryByID::New() const {
  return new Library_LibraryByID;
}

void Library_LibraryByID::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LibraryByID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_LibraryByID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LibraryByID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LibraryByID::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LibraryByID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LibraryByID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LibraryByID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LibraryByID::MergeFrom(const Library_LibraryByID& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LibraryByID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LibraryByID::CopyFrom(const Library_LibraryByID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LibraryByID::IsInitialized() const {
  
  return true;
}

void Library_LibraryByID::Swap(Library_LibraryByID* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LibraryByID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LibraryByID_descriptor_;
  metadata.reflection = Library_LibraryByID_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_CreateLibrary_Args::kNameFieldNumber;
const int Library_CreateLibrary_Args::kPathFieldNumber;
const int Library_CreateLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_CreateLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_CreateLibrary_Args >, 11, false >
  Library_CreateLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_CreateLibrary_Args::default_instance());
Library_CreateLibrary_Args::Library_CreateLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_CreateLibrary_Args::InitAsDefaultInstance() {
}

Library_CreateLibrary_Args::Library_CreateLibrary_Args(const Library_CreateLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_CreateLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_CreateLibrary_Args::~Library_CreateLibrary_Args() {
  SharedDtor();
}

void Library_CreateLibrary_Args::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Library_CreateLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_CreateLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_CreateLibrary_Args_descriptor_;
}

const Library_CreateLibrary_Args& Library_CreateLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_CreateLibrary_Args* Library_CreateLibrary_Args::default_instance_ = NULL;

Library_CreateLibrary_Args* Library_CreateLibrary_Args::New() const {
  return new Library_CreateLibrary_Args;
}

void Library_CreateLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_CreateLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }
      
      // required string path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }
      
      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_CreateLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }
  
  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path(), output);
  }
  
  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_CreateLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }
  
  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }
  
  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_CreateLibrary_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
    // required string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_CreateLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_CreateLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_CreateLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_CreateLibrary_Args::MergeFrom(const Library_CreateLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_CreateLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_CreateLibrary_Args::CopyFrom(const Library_CreateLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_CreateLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;
  
  return true;
}

void Library_CreateLibrary_Args::Swap(Library_CreateLibrary_Args* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(path_, other->path_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_CreateLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_CreateLibrary_Args_descriptor_;
  metadata.reflection = Library_CreateLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_CreateLibrary_Result::kLibraryFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_CreateLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_CreateLibrary_Result >, 11, false >
  Library_CreateLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_CreateLibrary_Result::default_instance());
Library_CreateLibrary_Result::Library_CreateLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_CreateLibrary_Result::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Library_CreateLibrary_Result::Library_CreateLibrary_Result(const Library_CreateLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_CreateLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_CreateLibrary_Result::~Library_CreateLibrary_Result() {
  SharedDtor();
}

void Library_CreateLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Library_CreateLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_CreateLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_CreateLibrary_Result_descriptor_;
}

const Library_CreateLibrary_Result& Library_CreateLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_CreateLibrary_Result* Library_CreateLibrary_Result::default_instance_ = NULL;

Library_CreateLibrary_Result* Library_CreateLibrary_Result::New() const {
  return new Library_CreateLibrary_Result;
}

void Library_CreateLibrary_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_CreateLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_CreateLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_CreateLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_CreateLibrary_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_CreateLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_CreateLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_CreateLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_CreateLibrary_Result::MergeFrom(const Library_CreateLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_CreateLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_CreateLibrary_Result::CopyFrom(const Library_CreateLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_CreateLibrary_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Library_CreateLibrary_Result::Swap(Library_CreateLibrary_Result* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_CreateLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_CreateLibrary_Result_descriptor_;
  metadata.reflection = Library_CreateLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_CreateLibrary::Library_CreateLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_CreateLibrary::InitAsDefaultInstance() {
}

Library_CreateLibrary::Library_CreateLibrary(const Library_CreateLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_CreateLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_CreateLibrary::~Library_CreateLibrary() {
  SharedDtor();
}

void Library_CreateLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_CreateLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_CreateLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_CreateLibrary_descriptor_;
}

const Library_CreateLibrary& Library_CreateLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_CreateLibrary* Library_CreateLibrary::default_instance_ = NULL;

Library_CreateLibrary* Library_CreateLibrary::New() const {
  return new Library_CreateLibrary;
}

void Library_CreateLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_CreateLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_CreateLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_CreateLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_CreateLibrary::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_CreateLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_CreateLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_CreateLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_CreateLibrary::MergeFrom(const Library_CreateLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_CreateLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_CreateLibrary::CopyFrom(const Library_CreateLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_CreateLibrary::IsInitialized() const {
  
  return true;
}

void Library_CreateLibrary::Swap(Library_CreateLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_CreateLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_CreateLibrary_descriptor_;
  metadata.reflection = Library_CreateLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_LoadLibrary_Args::kPathFieldNumber;
const int Library_LoadLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_LoadLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_LoadLibrary_Args >, 11, false >
  Library_LoadLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_LoadLibrary_Args::default_instance());
Library_LoadLibrary_Args::Library_LoadLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LoadLibrary_Args::InitAsDefaultInstance() {
}

Library_LoadLibrary_Args::Library_LoadLibrary_Args(const Library_LoadLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LoadLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LoadLibrary_Args::~Library_LoadLibrary_Args() {
  SharedDtor();
}

void Library_LoadLibrary_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Library_LoadLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LoadLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LoadLibrary_Args_descriptor_;
}

const Library_LoadLibrary_Args& Library_LoadLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_LoadLibrary_Args* Library_LoadLibrary_Args::default_instance_ = NULL;

Library_LoadLibrary_Args* Library_LoadLibrary_Args::New() const {
  return new Library_LoadLibrary_Args;
}

void Library_LoadLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LoadLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }
      
      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_LoadLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LoadLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LoadLibrary_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LoadLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LoadLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LoadLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LoadLibrary_Args::MergeFrom(const Library_LoadLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LoadLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LoadLibrary_Args::CopyFrom(const Library_LoadLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LoadLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Library_LoadLibrary_Args::Swap(Library_LoadLibrary_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LoadLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LoadLibrary_Args_descriptor_;
  metadata.reflection = Library_LoadLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_LoadLibrary_Result::kLibraryFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_LoadLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_LoadLibrary_Result >, 11, false >
  Library_LoadLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_LoadLibrary_Result::default_instance());
Library_LoadLibrary_Result::Library_LoadLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LoadLibrary_Result::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Library_LoadLibrary_Result::Library_LoadLibrary_Result(const Library_LoadLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LoadLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LoadLibrary_Result::~Library_LoadLibrary_Result() {
  SharedDtor();
}

void Library_LoadLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Library_LoadLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LoadLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LoadLibrary_Result_descriptor_;
}

const Library_LoadLibrary_Result& Library_LoadLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_LoadLibrary_Result* Library_LoadLibrary_Result::default_instance_ = NULL;

Library_LoadLibrary_Result* Library_LoadLibrary_Result::New() const {
  return new Library_LoadLibrary_Result;
}

void Library_LoadLibrary_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LoadLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_LoadLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LoadLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LoadLibrary_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LoadLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LoadLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LoadLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LoadLibrary_Result::MergeFrom(const Library_LoadLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LoadLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LoadLibrary_Result::CopyFrom(const Library_LoadLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LoadLibrary_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Library_LoadLibrary_Result::Swap(Library_LoadLibrary_Result* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LoadLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LoadLibrary_Result_descriptor_;
  metadata.reflection = Library_LoadLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_LoadLibrary::Library_LoadLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LoadLibrary::InitAsDefaultInstance() {
}

Library_LoadLibrary::Library_LoadLibrary(const Library_LoadLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LoadLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LoadLibrary::~Library_LoadLibrary() {
  SharedDtor();
}

void Library_LoadLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_LoadLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LoadLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LoadLibrary_descriptor_;
}

const Library_LoadLibrary& Library_LoadLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_LoadLibrary* Library_LoadLibrary::default_instance_ = NULL;

Library_LoadLibrary* Library_LoadLibrary::New() const {
  return new Library_LoadLibrary;
}

void Library_LoadLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LoadLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_LoadLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LoadLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LoadLibrary::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LoadLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LoadLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LoadLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LoadLibrary::MergeFrom(const Library_LoadLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LoadLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LoadLibrary::CopyFrom(const Library_LoadLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LoadLibrary::IsInitialized() const {
  
  return true;
}

void Library_LoadLibrary::Swap(Library_LoadLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LoadLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LoadLibrary_descriptor_;
  metadata.reflection = Library_LoadLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_UnloadLibrary_Args::kLibraryIDFieldNumber;
const int Library_UnloadLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_UnloadLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_UnloadLibrary_Args >, 11, false >
  Library_UnloadLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_UnloadLibrary_Args::default_instance());
Library_UnloadLibrary_Args::Library_UnloadLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_UnloadLibrary_Args::InitAsDefaultInstance() {
}

Library_UnloadLibrary_Args::Library_UnloadLibrary_Args(const Library_UnloadLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_UnloadLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_UnloadLibrary_Args::~Library_UnloadLibrary_Args() {
  SharedDtor();
}

void Library_UnloadLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_UnloadLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_UnloadLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_UnloadLibrary_Args_descriptor_;
}

const Library_UnloadLibrary_Args& Library_UnloadLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_UnloadLibrary_Args* Library_UnloadLibrary_Args::default_instance_ = NULL;

Library_UnloadLibrary_Args* Library_UnloadLibrary_Args::New() const {
  return new Library_UnloadLibrary_Args;
}

void Library_UnloadLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_UnloadLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }
      
      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_UnloadLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_UnloadLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_UnloadLibrary_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }
    
    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_UnloadLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_UnloadLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_UnloadLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_UnloadLibrary_Args::MergeFrom(const Library_UnloadLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_UnloadLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_UnloadLibrary_Args::CopyFrom(const Library_UnloadLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_UnloadLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Library_UnloadLibrary_Args::Swap(Library_UnloadLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_UnloadLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_UnloadLibrary_Args_descriptor_;
  metadata.reflection = Library_UnloadLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_UnloadLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_UnloadLibrary_Result >, 11, false >
  Library_UnloadLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_UnloadLibrary_Result::default_instance());
Library_UnloadLibrary_Result::Library_UnloadLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_UnloadLibrary_Result::InitAsDefaultInstance() {
}

Library_UnloadLibrary_Result::Library_UnloadLibrary_Result(const Library_UnloadLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_UnloadLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_UnloadLibrary_Result::~Library_UnloadLibrary_Result() {
  SharedDtor();
}

void Library_UnloadLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_UnloadLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_UnloadLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_UnloadLibrary_Result_descriptor_;
}

const Library_UnloadLibrary_Result& Library_UnloadLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_UnloadLibrary_Result* Library_UnloadLibrary_Result::default_instance_ = NULL;

Library_UnloadLibrary_Result* Library_UnloadLibrary_Result::New() const {
  return new Library_UnloadLibrary_Result;
}

void Library_UnloadLibrary_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_UnloadLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_UnloadLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_UnloadLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_UnloadLibrary_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_UnloadLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_UnloadLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_UnloadLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_UnloadLibrary_Result::MergeFrom(const Library_UnloadLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_UnloadLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_UnloadLibrary_Result::CopyFrom(const Library_UnloadLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_UnloadLibrary_Result::IsInitialized() const {
  
  return true;
}

void Library_UnloadLibrary_Result::Swap(Library_UnloadLibrary_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_UnloadLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_UnloadLibrary_Result_descriptor_;
  metadata.reflection = Library_UnloadLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_UnloadLibrary::Library_UnloadLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_UnloadLibrary::InitAsDefaultInstance() {
}

Library_UnloadLibrary::Library_UnloadLibrary(const Library_UnloadLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_UnloadLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_UnloadLibrary::~Library_UnloadLibrary() {
  SharedDtor();
}

void Library_UnloadLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_UnloadLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_UnloadLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_UnloadLibrary_descriptor_;
}

const Library_UnloadLibrary& Library_UnloadLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_UnloadLibrary* Library_UnloadLibrary::default_instance_ = NULL;

Library_UnloadLibrary* Library_UnloadLibrary::New() const {
  return new Library_UnloadLibrary;
}

void Library_UnloadLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_UnloadLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_UnloadLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_UnloadLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_UnloadLibrary::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_UnloadLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_UnloadLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_UnloadLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_UnloadLibrary::MergeFrom(const Library_UnloadLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_UnloadLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_UnloadLibrary::CopyFrom(const Library_UnloadLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_UnloadLibrary::IsInitialized() const {
  
  return true;
}

void Library_UnloadLibrary::Swap(Library_UnloadLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_UnloadLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_UnloadLibrary_descriptor_;
  metadata.reflection = Library_UnloadLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_StoreLibrary_Args::kLibraryIDFieldNumber;
const int Library_StoreLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_StoreLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_StoreLibrary_Args >, 11, false >
  Library_StoreLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_StoreLibrary_Args::default_instance());
Library_StoreLibrary_Args::Library_StoreLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_StoreLibrary_Args::InitAsDefaultInstance() {
}

Library_StoreLibrary_Args::Library_StoreLibrary_Args(const Library_StoreLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_StoreLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_StoreLibrary_Args::~Library_StoreLibrary_Args() {
  SharedDtor();
}

void Library_StoreLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_StoreLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_StoreLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_StoreLibrary_Args_descriptor_;
}

const Library_StoreLibrary_Args& Library_StoreLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_StoreLibrary_Args* Library_StoreLibrary_Args::default_instance_ = NULL;

Library_StoreLibrary_Args* Library_StoreLibrary_Args::New() const {
  return new Library_StoreLibrary_Args;
}

void Library_StoreLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_StoreLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }
      
      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_StoreLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_StoreLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_StoreLibrary_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }
    
    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_StoreLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_StoreLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_StoreLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_StoreLibrary_Args::MergeFrom(const Library_StoreLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_StoreLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_StoreLibrary_Args::CopyFrom(const Library_StoreLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_StoreLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Library_StoreLibrary_Args::Swap(Library_StoreLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_StoreLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_StoreLibrary_Args_descriptor_;
  metadata.reflection = Library_StoreLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_StoreLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_StoreLibrary_Result >, 11, false >
  Library_StoreLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_StoreLibrary_Result::default_instance());
Library_StoreLibrary_Result::Library_StoreLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_StoreLibrary_Result::InitAsDefaultInstance() {
}

Library_StoreLibrary_Result::Library_StoreLibrary_Result(const Library_StoreLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_StoreLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_StoreLibrary_Result::~Library_StoreLibrary_Result() {
  SharedDtor();
}

void Library_StoreLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_StoreLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_StoreLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_StoreLibrary_Result_descriptor_;
}

const Library_StoreLibrary_Result& Library_StoreLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_StoreLibrary_Result* Library_StoreLibrary_Result::default_instance_ = NULL;

Library_StoreLibrary_Result* Library_StoreLibrary_Result::New() const {
  return new Library_StoreLibrary_Result;
}

void Library_StoreLibrary_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_StoreLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_StoreLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_StoreLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_StoreLibrary_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_StoreLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_StoreLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_StoreLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_StoreLibrary_Result::MergeFrom(const Library_StoreLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_StoreLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_StoreLibrary_Result::CopyFrom(const Library_StoreLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_StoreLibrary_Result::IsInitialized() const {
  
  return true;
}

void Library_StoreLibrary_Result::Swap(Library_StoreLibrary_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_StoreLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_StoreLibrary_Result_descriptor_;
  metadata.reflection = Library_StoreLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_StoreLibrary::Library_StoreLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_StoreLibrary::InitAsDefaultInstance() {
}

Library_StoreLibrary::Library_StoreLibrary(const Library_StoreLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_StoreLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_StoreLibrary::~Library_StoreLibrary() {
  SharedDtor();
}

void Library_StoreLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_StoreLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_StoreLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_StoreLibrary_descriptor_;
}

const Library_StoreLibrary& Library_StoreLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_StoreLibrary* Library_StoreLibrary::default_instance_ = NULL;

Library_StoreLibrary* Library_StoreLibrary::New() const {
  return new Library_StoreLibrary;
}

void Library_StoreLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_StoreLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_StoreLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_StoreLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_StoreLibrary::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_StoreLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_StoreLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_StoreLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_StoreLibrary::MergeFrom(const Library_StoreLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_StoreLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_StoreLibrary::CopyFrom(const Library_StoreLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_StoreLibrary::IsInitialized() const {
  
  return true;
}

void Library_StoreLibrary::Swap(Library_StoreLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_StoreLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_StoreLibrary_descriptor_;
  metadata.reflection = Library_StoreLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_BuildLibrary_Args::kLibraryIDFieldNumber;
const int Library_BuildLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_BuildLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_BuildLibrary_Args >, 11, false >
  Library_BuildLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_BuildLibrary_Args::default_instance());
Library_BuildLibrary_Args::Library_BuildLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_BuildLibrary_Args::InitAsDefaultInstance() {
}

Library_BuildLibrary_Args::Library_BuildLibrary_Args(const Library_BuildLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_BuildLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_BuildLibrary_Args::~Library_BuildLibrary_Args() {
  SharedDtor();
}

void Library_BuildLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_BuildLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_BuildLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_BuildLibrary_Args_descriptor_;
}

const Library_BuildLibrary_Args& Library_BuildLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_BuildLibrary_Args* Library_BuildLibrary_Args::default_instance_ = NULL;

Library_BuildLibrary_Args* Library_BuildLibrary_Args::New() const {
  return new Library_BuildLibrary_Args;
}

void Library_BuildLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_BuildLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }
      
      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_BuildLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_BuildLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_BuildLibrary_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }
    
    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_BuildLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_BuildLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_BuildLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_BuildLibrary_Args::MergeFrom(const Library_BuildLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_BuildLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_BuildLibrary_Args::CopyFrom(const Library_BuildLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_BuildLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Library_BuildLibrary_Args::Swap(Library_BuildLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_BuildLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_BuildLibrary_Args_descriptor_;
  metadata.reflection = Library_BuildLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_BuildLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_BuildLibrary_Result >, 11, false >
  Library_BuildLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_BuildLibrary_Result::default_instance());
Library_BuildLibrary_Result::Library_BuildLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_BuildLibrary_Result::InitAsDefaultInstance() {
}

Library_BuildLibrary_Result::Library_BuildLibrary_Result(const Library_BuildLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_BuildLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_BuildLibrary_Result::~Library_BuildLibrary_Result() {
  SharedDtor();
}

void Library_BuildLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_BuildLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_BuildLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_BuildLibrary_Result_descriptor_;
}

const Library_BuildLibrary_Result& Library_BuildLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_BuildLibrary_Result* Library_BuildLibrary_Result::default_instance_ = NULL;

Library_BuildLibrary_Result* Library_BuildLibrary_Result::New() const {
  return new Library_BuildLibrary_Result;
}

void Library_BuildLibrary_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_BuildLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_BuildLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_BuildLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_BuildLibrary_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_BuildLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_BuildLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_BuildLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_BuildLibrary_Result::MergeFrom(const Library_BuildLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_BuildLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_BuildLibrary_Result::CopyFrom(const Library_BuildLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_BuildLibrary_Result::IsInitialized() const {
  
  return true;
}

void Library_BuildLibrary_Result::Swap(Library_BuildLibrary_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_BuildLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_BuildLibrary_Result_descriptor_;
  metadata.reflection = Library_BuildLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_BuildLibrary::Library_BuildLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_BuildLibrary::InitAsDefaultInstance() {
}

Library_BuildLibrary::Library_BuildLibrary(const Library_BuildLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_BuildLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_BuildLibrary::~Library_BuildLibrary() {
  SharedDtor();
}

void Library_BuildLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_BuildLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_BuildLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_BuildLibrary_descriptor_;
}

const Library_BuildLibrary& Library_BuildLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_BuildLibrary* Library_BuildLibrary::default_instance_ = NULL;

Library_BuildLibrary* Library_BuildLibrary::New() const {
  return new Library_BuildLibrary;
}

void Library_BuildLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_BuildLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_BuildLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_BuildLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_BuildLibrary::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_BuildLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_BuildLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_BuildLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_BuildLibrary::MergeFrom(const Library_BuildLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_BuildLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_BuildLibrary::CopyFrom(const Library_BuildLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_BuildLibrary::IsInitialized() const {
  
  return true;
}

void Library_BuildLibrary::Swap(Library_BuildLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_BuildLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_BuildLibrary_descriptor_;
  metadata.reflection = Library_BuildLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_RunLibrary_Args::kLibraryIDFieldNumber;
const int Library_RunLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_RunLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_RunLibrary_Args >, 11, false >
  Library_RunLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_RunLibrary_Args::default_instance());
Library_RunLibrary_Args::Library_RunLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_RunLibrary_Args::InitAsDefaultInstance() {
}

Library_RunLibrary_Args::Library_RunLibrary_Args(const Library_RunLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_RunLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_RunLibrary_Args::~Library_RunLibrary_Args() {
  SharedDtor();
}

void Library_RunLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_RunLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_RunLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_RunLibrary_Args_descriptor_;
}

const Library_RunLibrary_Args& Library_RunLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_RunLibrary_Args* Library_RunLibrary_Args::default_instance_ = NULL;

Library_RunLibrary_Args* Library_RunLibrary_Args::New() const {
  return new Library_RunLibrary_Args;
}

void Library_RunLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_RunLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }
      
      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_RunLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_RunLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }
  
  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_RunLibrary_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }
    
    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_RunLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_RunLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_RunLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_RunLibrary_Args::MergeFrom(const Library_RunLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_RunLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_RunLibrary_Args::CopyFrom(const Library_RunLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_RunLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;
  
  return true;
}

void Library_RunLibrary_Args::Swap(Library_RunLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_RunLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_RunLibrary_Args_descriptor_;
  metadata.reflection = Library_RunLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_RunLibrary_Result::kOutputFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_RunLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_RunLibrary_Result >, 11, false >
  Library_RunLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_RunLibrary_Result::default_instance());
Library_RunLibrary_Result::Library_RunLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_RunLibrary_Result::InitAsDefaultInstance() {
}

Library_RunLibrary_Result::Library_RunLibrary_Result(const Library_RunLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_RunLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  output_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_RunLibrary_Result::~Library_RunLibrary_Result() {
  SharedDtor();
}

void Library_RunLibrary_Result::SharedDtor() {
  if (output_ != &::google::protobuf::internal::kEmptyString) {
    delete output_;
  }
  if (this != default_instance_) {
  }
}

void Library_RunLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_RunLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_RunLibrary_Result_descriptor_;
}

const Library_RunLibrary_Result& Library_RunLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_RunLibrary_Result* Library_RunLibrary_Result::default_instance_ = NULL;

Library_RunLibrary_Result* Library_RunLibrary_Result::New() const {
  return new Library_RunLibrary_Result;
}

void Library_RunLibrary_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_output()) {
      if (output_ != &::google::protobuf::internal::kEmptyString) {
        output_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_RunLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string output = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_output()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->output().data(), this->output().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_RunLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string output = 1;
  if (has_output()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->output().data(), this->output().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->output(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_RunLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string output = 1;
  if (has_output()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->output().data(), this->output().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->output(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_RunLibrary_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string output = 1;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->output());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_RunLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_RunLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_RunLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_RunLibrary_Result::MergeFrom(const Library_RunLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_output()) {
      set_output(from.output());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_RunLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_RunLibrary_Result::CopyFrom(const Library_RunLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_RunLibrary_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Library_RunLibrary_Result::Swap(Library_RunLibrary_Result* other) {
  if (other != this) {
    std::swap(output_, other->output_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_RunLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_RunLibrary_Result_descriptor_;
  metadata.reflection = Library_RunLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_RunLibrary::Library_RunLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_RunLibrary::InitAsDefaultInstance() {
}

Library_RunLibrary::Library_RunLibrary(const Library_RunLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_RunLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_RunLibrary::~Library_RunLibrary() {
  SharedDtor();
}

void Library_RunLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_RunLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_RunLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_RunLibrary_descriptor_;
}

const Library_RunLibrary& Library_RunLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library_RunLibrary* Library_RunLibrary::default_instance_ = NULL;

Library_RunLibrary* Library_RunLibrary::New() const {
  return new Library_RunLibrary;
}

void Library_RunLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_RunLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_RunLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_RunLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_RunLibrary::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_RunLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_RunLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_RunLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_RunLibrary::MergeFrom(const Library_RunLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_RunLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_RunLibrary::CopyFrom(const Library_RunLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_RunLibrary::IsInitialized() const {
  
  return true;
}

void Library_RunLibrary::Swap(Library_RunLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_RunLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_RunLibrary_descriptor_;
  metadata.reflection = Library_RunLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library::Library()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library::InitAsDefaultInstance() {
}

Library::Library(const Library& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library::~Library() {
  SharedDtor();
}

void Library::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_descriptor_;
}

const Library& Library::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Library* Library::default_instance_ = NULL;

Library* Library::New() const {
  return new Library;
}

void Library::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library::MergeFrom(const Library& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library::CopyFrom(const Library& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library::IsInitialized() const {
  
  return true;
}

void Library::Swap(Library* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_descriptor_;
  metadata.reflection = Library_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Initialize_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Initialize_Args >, 11, false >
  Maintenance_Initialize_Args::req(kReqFieldNumber, ::generated::proto::batch::Maintenance_Initialize_Args::default_instance());
Maintenance_Initialize_Args::Maintenance_Initialize_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Initialize_Args::InitAsDefaultInstance() {
}

Maintenance_Initialize_Args::Maintenance_Initialize_Args(const Maintenance_Initialize_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Initialize_Args::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Initialize_Args::~Maintenance_Initialize_Args() {
  SharedDtor();
}

void Maintenance_Initialize_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Initialize_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Initialize_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Initialize_Args_descriptor_;
}

const Maintenance_Initialize_Args& Maintenance_Initialize_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Initialize_Args* Maintenance_Initialize_Args::default_instance_ = NULL;

Maintenance_Initialize_Args* Maintenance_Initialize_Args::New() const {
  return new Maintenance_Initialize_Args;
}

void Maintenance_Initialize_Args::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Initialize_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Initialize_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Initialize_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Initialize_Args::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Initialize_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Initialize_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Initialize_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Initialize_Args::MergeFrom(const Maintenance_Initialize_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Initialize_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Initialize_Args::CopyFrom(const Maintenance_Initialize_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Initialize_Args::IsInitialized() const {
  
  return true;
}

void Maintenance_Initialize_Args::Swap(Maintenance_Initialize_Args* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Initialize_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Initialize_Args_descriptor_;
  metadata.reflection = Maintenance_Initialize_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Initialize_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Initialize_Result >, 11, false >
  Maintenance_Initialize_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Maintenance_Initialize_Result::default_instance());
Maintenance_Initialize_Result::Maintenance_Initialize_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Initialize_Result::InitAsDefaultInstance() {
}

Maintenance_Initialize_Result::Maintenance_Initialize_Result(const Maintenance_Initialize_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Initialize_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Initialize_Result::~Maintenance_Initialize_Result() {
  SharedDtor();
}

void Maintenance_Initialize_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Initialize_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Initialize_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Initialize_Result_descriptor_;
}

const Maintenance_Initialize_Result& Maintenance_Initialize_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Initialize_Result* Maintenance_Initialize_Result::default_instance_ = NULL;

Maintenance_Initialize_Result* Maintenance_Initialize_Result::New() const {
  return new Maintenance_Initialize_Result;
}

void Maintenance_Initialize_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Initialize_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Initialize_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Initialize_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Initialize_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Initialize_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Initialize_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Initialize_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Initialize_Result::MergeFrom(const Maintenance_Initialize_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Initialize_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Initialize_Result::CopyFrom(const Maintenance_Initialize_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Initialize_Result::IsInitialized() const {
  
  return true;
}

void Maintenance_Initialize_Result::Swap(Maintenance_Initialize_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Initialize_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Initialize_Result_descriptor_;
  metadata.reflection = Maintenance_Initialize_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance_Initialize::Maintenance_Initialize()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Initialize::InitAsDefaultInstance() {
}

Maintenance_Initialize::Maintenance_Initialize(const Maintenance_Initialize& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Initialize::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Initialize::~Maintenance_Initialize() {
  SharedDtor();
}

void Maintenance_Initialize::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Initialize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Initialize::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Initialize_descriptor_;
}

const Maintenance_Initialize& Maintenance_Initialize::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Initialize* Maintenance_Initialize::default_instance_ = NULL;

Maintenance_Initialize* Maintenance_Initialize::New() const {
  return new Maintenance_Initialize;
}

void Maintenance_Initialize::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Initialize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Initialize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Initialize::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Initialize::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Initialize::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Initialize* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Initialize*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Initialize::MergeFrom(const Maintenance_Initialize& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Initialize::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Initialize::CopyFrom(const Maintenance_Initialize& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Initialize::IsInitialized() const {
  
  return true;
}

void Maintenance_Initialize::Swap(Maintenance_Initialize* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Initialize::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Initialize_descriptor_;
  metadata.reflection = Maintenance_Initialize_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Maintenance_Ping_Args::kDataFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Ping_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Ping_Args >, 11, false >
  Maintenance_Ping_Args::req(kReqFieldNumber, ::generated::proto::batch::Maintenance_Ping_Args::default_instance());
Maintenance_Ping_Args::Maintenance_Ping_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Ping_Args::InitAsDefaultInstance() {
}

Maintenance_Ping_Args::Maintenance_Ping_Args(const Maintenance_Ping_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Ping_Args::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Ping_Args::~Maintenance_Ping_Args() {
  SharedDtor();
}

void Maintenance_Ping_Args::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void Maintenance_Ping_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Ping_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Ping_Args_descriptor_;
}

const Maintenance_Ping_Args& Maintenance_Ping_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Ping_Args* Maintenance_Ping_Args::default_instance_ = NULL;

Maintenance_Ping_Args* Maintenance_Ping_Args::New() const {
  return new Maintenance_Ping_Args;
}

void Maintenance_Ping_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Ping_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Maintenance_Ping_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Ping_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Ping_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Ping_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Ping_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Ping_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Ping_Args::MergeFrom(const Maintenance_Ping_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Ping_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Ping_Args::CopyFrom(const Maintenance_Ping_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Ping_Args::IsInitialized() const {
  
  return true;
}

void Maintenance_Ping_Args::Swap(Maintenance_Ping_Args* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Ping_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Ping_Args_descriptor_;
  metadata.reflection = Maintenance_Ping_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Maintenance_Ping_Result::kDataFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Ping_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Ping_Result >, 11, false >
  Maintenance_Ping_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Maintenance_Ping_Result::default_instance());
Maintenance_Ping_Result::Maintenance_Ping_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Ping_Result::InitAsDefaultInstance() {
}

Maintenance_Ping_Result::Maintenance_Ping_Result(const Maintenance_Ping_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Ping_Result::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Ping_Result::~Maintenance_Ping_Result() {
  SharedDtor();
}

void Maintenance_Ping_Result::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void Maintenance_Ping_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Ping_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Ping_Result_descriptor_;
}

const Maintenance_Ping_Result& Maintenance_Ping_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Ping_Result* Maintenance_Ping_Result::default_instance_ = NULL;

Maintenance_Ping_Result* Maintenance_Ping_Result::New() const {
  return new Maintenance_Ping_Result;
}

void Maintenance_Ping_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Ping_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Maintenance_Ping_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Ping_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Ping_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Ping_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Ping_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Ping_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Ping_Result::MergeFrom(const Maintenance_Ping_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Ping_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Ping_Result::CopyFrom(const Maintenance_Ping_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Ping_Result::IsInitialized() const {
  
  return true;
}

void Maintenance_Ping_Result::Swap(Maintenance_Ping_Result* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Ping_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Ping_Result_descriptor_;
  metadata.reflection = Maintenance_Ping_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance_Ping::Maintenance_Ping()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Ping::InitAsDefaultInstance() {
}

Maintenance_Ping::Maintenance_Ping(const Maintenance_Ping& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Ping::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Ping::~Maintenance_Ping() {
  SharedDtor();
}

void Maintenance_Ping::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Ping::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Ping_descriptor_;
}

const Maintenance_Ping& Maintenance_Ping::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Ping* Maintenance_Ping::default_instance_ = NULL;

Maintenance_Ping* Maintenance_Ping::New() const {
  return new Maintenance_Ping;
}

void Maintenance_Ping::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Ping::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Ping::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Ping::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Ping* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Ping*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Ping::MergeFrom(const Maintenance_Ping& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Ping::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Ping::CopyFrom(const Maintenance_Ping& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Ping::IsInitialized() const {
  
  return true;
}

void Maintenance_Ping::Swap(Maintenance_Ping* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Ping::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Ping_descriptor_;
  metadata.reflection = Maintenance_Ping_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Dump_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Dump_Args >, 11, false >
  Maintenance_Dump_Args::req(kReqFieldNumber, ::generated::proto::batch::Maintenance_Dump_Args::default_instance());
Maintenance_Dump_Args::Maintenance_Dump_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Dump_Args::InitAsDefaultInstance() {
}

Maintenance_Dump_Args::Maintenance_Dump_Args(const Maintenance_Dump_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Dump_Args::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Dump_Args::~Maintenance_Dump_Args() {
  SharedDtor();
}

void Maintenance_Dump_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Dump_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Dump_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Dump_Args_descriptor_;
}

const Maintenance_Dump_Args& Maintenance_Dump_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Dump_Args* Maintenance_Dump_Args::default_instance_ = NULL;

Maintenance_Dump_Args* Maintenance_Dump_Args::New() const {
  return new Maintenance_Dump_Args;
}

void Maintenance_Dump_Args::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Dump_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Dump_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Dump_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Dump_Args::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Dump_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Dump_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Dump_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Dump_Args::MergeFrom(const Maintenance_Dump_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Dump_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Dump_Args::CopyFrom(const Maintenance_Dump_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Dump_Args::IsInitialized() const {
  
  return true;
}

void Maintenance_Dump_Args::Swap(Maintenance_Dump_Args* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Dump_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Dump_Args_descriptor_;
  metadata.reflection = Maintenance_Dump_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Dump_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Dump_Result >, 11, false >
  Maintenance_Dump_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Maintenance_Dump_Result::default_instance());
Maintenance_Dump_Result::Maintenance_Dump_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Dump_Result::InitAsDefaultInstance() {
}

Maintenance_Dump_Result::Maintenance_Dump_Result(const Maintenance_Dump_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Dump_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Dump_Result::~Maintenance_Dump_Result() {
  SharedDtor();
}

void Maintenance_Dump_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Dump_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Dump_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Dump_Result_descriptor_;
}

const Maintenance_Dump_Result& Maintenance_Dump_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Dump_Result* Maintenance_Dump_Result::default_instance_ = NULL;

Maintenance_Dump_Result* Maintenance_Dump_Result::New() const {
  return new Maintenance_Dump_Result;
}

void Maintenance_Dump_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Dump_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Dump_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Dump_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Dump_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Dump_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Dump_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Dump_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Dump_Result::MergeFrom(const Maintenance_Dump_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Dump_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Dump_Result::CopyFrom(const Maintenance_Dump_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Dump_Result::IsInitialized() const {
  
  return true;
}

void Maintenance_Dump_Result::Swap(Maintenance_Dump_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Dump_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Dump_Result_descriptor_;
  metadata.reflection = Maintenance_Dump_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance_Dump::Maintenance_Dump()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Dump::InitAsDefaultInstance() {
}

Maintenance_Dump::Maintenance_Dump(const Maintenance_Dump& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Dump::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Dump::~Maintenance_Dump() {
  SharedDtor();
}

void Maintenance_Dump::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Dump::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Dump::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Dump_descriptor_;
}

const Maintenance_Dump& Maintenance_Dump::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Dump* Maintenance_Dump::default_instance_ = NULL;

Maintenance_Dump* Maintenance_Dump::New() const {
  return new Maintenance_Dump;
}

void Maintenance_Dump::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Dump::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Dump::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Dump::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Dump::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Dump::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Dump* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Dump*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Dump::MergeFrom(const Maintenance_Dump& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Dump::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Dump::CopyFrom(const Maintenance_Dump& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Dump::IsInitialized() const {
  
  return true;
}

void Maintenance_Dump::Swap(Maintenance_Dump* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Dump::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Dump_descriptor_;
  metadata.reflection = Maintenance_Dump_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Shutdown_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Shutdown_Args >, 11, false >
  Maintenance_Shutdown_Args::req(kReqFieldNumber, ::generated::proto::batch::Maintenance_Shutdown_Args::default_instance());
Maintenance_Shutdown_Args::Maintenance_Shutdown_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Shutdown_Args::InitAsDefaultInstance() {
}

Maintenance_Shutdown_Args::Maintenance_Shutdown_Args(const Maintenance_Shutdown_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Shutdown_Args::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Shutdown_Args::~Maintenance_Shutdown_Args() {
  SharedDtor();
}

void Maintenance_Shutdown_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Shutdown_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Shutdown_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Shutdown_Args_descriptor_;
}

const Maintenance_Shutdown_Args& Maintenance_Shutdown_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Shutdown_Args* Maintenance_Shutdown_Args::default_instance_ = NULL;

Maintenance_Shutdown_Args* Maintenance_Shutdown_Args::New() const {
  return new Maintenance_Shutdown_Args;
}

void Maintenance_Shutdown_Args::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Shutdown_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Shutdown_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Shutdown_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Shutdown_Args::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Shutdown_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Shutdown_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Shutdown_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Shutdown_Args::MergeFrom(const Maintenance_Shutdown_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Shutdown_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Shutdown_Args::CopyFrom(const Maintenance_Shutdown_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Shutdown_Args::IsInitialized() const {
  
  return true;
}

void Maintenance_Shutdown_Args::Swap(Maintenance_Shutdown_Args* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Shutdown_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Shutdown_Args_descriptor_;
  metadata.reflection = Maintenance_Shutdown_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Shutdown_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Shutdown_Result >, 11, false >
  Maintenance_Shutdown_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Maintenance_Shutdown_Result::default_instance());
Maintenance_Shutdown_Result::Maintenance_Shutdown_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Shutdown_Result::InitAsDefaultInstance() {
}

Maintenance_Shutdown_Result::Maintenance_Shutdown_Result(const Maintenance_Shutdown_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Shutdown_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Shutdown_Result::~Maintenance_Shutdown_Result() {
  SharedDtor();
}

void Maintenance_Shutdown_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Shutdown_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Shutdown_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Shutdown_Result_descriptor_;
}

const Maintenance_Shutdown_Result& Maintenance_Shutdown_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Shutdown_Result* Maintenance_Shutdown_Result::default_instance_ = NULL;

Maintenance_Shutdown_Result* Maintenance_Shutdown_Result::New() const {
  return new Maintenance_Shutdown_Result;
}

void Maintenance_Shutdown_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Shutdown_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Shutdown_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Shutdown_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Shutdown_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Shutdown_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Shutdown_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Shutdown_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Shutdown_Result::MergeFrom(const Maintenance_Shutdown_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Shutdown_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Shutdown_Result::CopyFrom(const Maintenance_Shutdown_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Shutdown_Result::IsInitialized() const {
  
  return true;
}

void Maintenance_Shutdown_Result::Swap(Maintenance_Shutdown_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Shutdown_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Shutdown_Result_descriptor_;
  metadata.reflection = Maintenance_Shutdown_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance_Shutdown::Maintenance_Shutdown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Shutdown::InitAsDefaultInstance() {
}

Maintenance_Shutdown::Maintenance_Shutdown(const Maintenance_Shutdown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Shutdown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Shutdown::~Maintenance_Shutdown() {
  SharedDtor();
}

void Maintenance_Shutdown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Shutdown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Shutdown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Shutdown_descriptor_;
}

const Maintenance_Shutdown& Maintenance_Shutdown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance_Shutdown* Maintenance_Shutdown::default_instance_ = NULL;

Maintenance_Shutdown* Maintenance_Shutdown::New() const {
  return new Maintenance_Shutdown;
}

void Maintenance_Shutdown::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Shutdown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Shutdown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Shutdown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Shutdown::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Shutdown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Shutdown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Shutdown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Shutdown::MergeFrom(const Maintenance_Shutdown& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Shutdown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Shutdown::CopyFrom(const Maintenance_Shutdown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Shutdown::IsInitialized() const {
  
  return true;
}

void Maintenance_Shutdown::Swap(Maintenance_Shutdown* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Shutdown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Shutdown_descriptor_;
  metadata.reflection = Maintenance_Shutdown_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance::Maintenance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance::InitAsDefaultInstance() {
}

Maintenance::Maintenance(const Maintenance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance::~Maintenance() {
  SharedDtor();
}

void Maintenance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_descriptor_;
}

const Maintenance& Maintenance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Maintenance* Maintenance::default_instance_ = NULL;

Maintenance* Maintenance::New() const {
  return new Maintenance;
}

void Maintenance::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance::MergeFrom(const Maintenance& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance::CopyFrom(const Maintenance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance::IsInitialized() const {
  
  return true;
}

void Maintenance::Swap(Maintenance* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_descriptor_;
  metadata.reflection = Maintenance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Project_Projects_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_Projects_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_Projects_Args >, 11, false >
  Project_Projects_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_Projects_Args::default_instance());
Project_Projects_Args::Project_Projects_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Projects_Args::InitAsDefaultInstance() {
}

Project_Projects_Args::Project_Projects_Args(const Project_Projects_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Projects_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Projects_Args::~Project_Projects_Args() {
  SharedDtor();
}

void Project_Projects_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Projects_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Projects_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Projects_Args_descriptor_;
}

const Project_Projects_Args& Project_Projects_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_Projects_Args* Project_Projects_Args::default_instance_ = NULL;

Project_Projects_Args* Project_Projects_Args::New() const {
  return new Project_Projects_Args;
}

void Project_Projects_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Projects_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Projects_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Projects_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Projects_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Projects_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Projects_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Projects_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Projects_Args::MergeFrom(const Project_Projects_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Projects_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Projects_Args::CopyFrom(const Project_Projects_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Projects_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Project_Projects_Args::Swap(Project_Projects_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Projects_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Projects_Args_descriptor_;
  metadata.reflection = Project_Projects_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Projects_Result::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_Projects_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_Projects_Result >, 11, false >
  Project_Projects_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_Projects_Result::default_instance());
Project_Projects_Result::Project_Projects_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Projects_Result::InitAsDefaultInstance() {
}

Project_Projects_Result::Project_Projects_Result(const Project_Projects_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Projects_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Projects_Result::~Project_Projects_Result() {
  SharedDtor();
}

void Project_Projects_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Projects_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Projects_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Projects_Result_descriptor_;
}

const Project_Projects_Result& Project_Projects_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_Projects_Result* Project_Projects_Result::default_instance_ = NULL;

Project_Projects_Result* Project_Projects_Result::New() const {
  return new Project_Projects_Result;
}

void Project_Projects_Result::Clear() {
  project_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Projects_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_project:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_project;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Projects_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.project.Project project = 1;
  for (int i = 0; i < this->project_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Projects_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.project.Project project = 1;
  for (int i = 0; i < this->project_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Projects_Result::ByteSize() const {
  int total_size = 0;
  
  // repeated .generated.proto.project.Project project = 1;
  total_size += 1 * this->project_size();
  for (int i = 0; i < this->project_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->project(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Projects_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Projects_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Projects_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Projects_Result::MergeFrom(const Project_Projects_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  project_.MergeFrom(from.project_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Projects_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Projects_Result::CopyFrom(const Project_Projects_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Projects_Result::IsInitialized() const {
  
  for (int i = 0; i < project_size(); i++) {
    if (!this->project(i).IsInitialized()) return false;
  }
  return true;
}

void Project_Projects_Result::Swap(Project_Projects_Result* other) {
  if (other != this) {
    project_.Swap(&other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Projects_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Projects_Result_descriptor_;
  metadata.reflection = Project_Projects_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Projects::Project_Projects()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Projects::InitAsDefaultInstance() {
}

Project_Projects::Project_Projects(const Project_Projects& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Projects::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Projects::~Project_Projects() {
  SharedDtor();
}

void Project_Projects::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Projects::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Projects::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Projects_descriptor_;
}

const Project_Projects& Project_Projects::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_Projects* Project_Projects::default_instance_ = NULL;

Project_Projects* Project_Projects::New() const {
  return new Project_Projects;
}

void Project_Projects::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Projects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Projects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Projects::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Projects::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Projects::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Projects* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Projects*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Projects::MergeFrom(const Project_Projects& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Projects::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Projects::CopyFrom(const Project_Projects& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Projects::IsInitialized() const {
  
  return true;
}

void Project_Projects::Swap(Project_Projects* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Projects::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Projects_descriptor_;
  metadata.reflection = Project_Projects_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_ProjectByID_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_ProjectByID_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_ProjectByID_Args >, 11, false >
  Project_ProjectByID_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_ProjectByID_Args::default_instance());
Project_ProjectByID_Args::Project_ProjectByID_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_ProjectByID_Args::InitAsDefaultInstance() {
}

Project_ProjectByID_Args::Project_ProjectByID_Args(const Project_ProjectByID_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_ProjectByID_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_ProjectByID_Args::~Project_ProjectByID_Args() {
  SharedDtor();
}

void Project_ProjectByID_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_ProjectByID_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_ProjectByID_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_ProjectByID_Args_descriptor_;
}

const Project_ProjectByID_Args& Project_ProjectByID_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_ProjectByID_Args* Project_ProjectByID_Args::default_instance_ = NULL;

Project_ProjectByID_Args* Project_ProjectByID_Args::New() const {
  return new Project_ProjectByID_Args;
}

void Project_ProjectByID_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_ProjectByID_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_ProjectByID_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_ProjectByID_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_ProjectByID_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_ProjectByID_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_ProjectByID_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_ProjectByID_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_ProjectByID_Args::MergeFrom(const Project_ProjectByID_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_ProjectByID_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_ProjectByID_Args::CopyFrom(const Project_ProjectByID_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_ProjectByID_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Project_ProjectByID_Args::Swap(Project_ProjectByID_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_ProjectByID_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_ProjectByID_Args_descriptor_;
  metadata.reflection = Project_ProjectByID_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_ProjectByID_Result::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_ProjectByID_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_ProjectByID_Result >, 11, false >
  Project_ProjectByID_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_ProjectByID_Result::default_instance());
Project_ProjectByID_Result::Project_ProjectByID_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_ProjectByID_Result::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_ProjectByID_Result::Project_ProjectByID_Result(const Project_ProjectByID_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_ProjectByID_Result::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_ProjectByID_Result::~Project_ProjectByID_Result() {
  SharedDtor();
}

void Project_ProjectByID_Result::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_ProjectByID_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_ProjectByID_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_ProjectByID_Result_descriptor_;
}

const Project_ProjectByID_Result& Project_ProjectByID_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_ProjectByID_Result* Project_ProjectByID_Result::default_instance_ = NULL;

Project_ProjectByID_Result* Project_ProjectByID_Result::New() const {
  return new Project_ProjectByID_Result;
}

void Project_ProjectByID_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_ProjectByID_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_ProjectByID_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_ProjectByID_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_ProjectByID_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_ProjectByID_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_ProjectByID_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_ProjectByID_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_ProjectByID_Result::MergeFrom(const Project_ProjectByID_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_ProjectByID_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_ProjectByID_Result::CopyFrom(const Project_ProjectByID_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_ProjectByID_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_ProjectByID_Result::Swap(Project_ProjectByID_Result* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_ProjectByID_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_ProjectByID_Result_descriptor_;
  metadata.reflection = Project_ProjectByID_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_ProjectByID::Project_ProjectByID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_ProjectByID::InitAsDefaultInstance() {
}

Project_ProjectByID::Project_ProjectByID(const Project_ProjectByID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_ProjectByID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_ProjectByID::~Project_ProjectByID() {
  SharedDtor();
}

void Project_ProjectByID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_ProjectByID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_ProjectByID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_ProjectByID_descriptor_;
}

const Project_ProjectByID& Project_ProjectByID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_ProjectByID* Project_ProjectByID::default_instance_ = NULL;

Project_ProjectByID* Project_ProjectByID::New() const {
  return new Project_ProjectByID;
}

void Project_ProjectByID::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_ProjectByID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_ProjectByID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_ProjectByID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_ProjectByID::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_ProjectByID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_ProjectByID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_ProjectByID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_ProjectByID::MergeFrom(const Project_ProjectByID& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_ProjectByID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_ProjectByID::CopyFrom(const Project_ProjectByID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_ProjectByID::IsInitialized() const {
  
  return true;
}

void Project_ProjectByID::Swap(Project_ProjectByID* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_ProjectByID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_ProjectByID_descriptor_;
  metadata.reflection = Project_ProjectByID_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_CreateProject_Args::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_CreateProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_CreateProject_Args >, 11, false >
  Project_CreateProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_CreateProject_Args::default_instance());
Project_CreateProject_Args::Project_CreateProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CreateProject_Args::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_CreateProject_Args::Project_CreateProject_Args(const Project_CreateProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CreateProject_Args::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CreateProject_Args::~Project_CreateProject_Args() {
  SharedDtor();
}

void Project_CreateProject_Args::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_CreateProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CreateProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CreateProject_Args_descriptor_;
}

const Project_CreateProject_Args& Project_CreateProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_CreateProject_Args* Project_CreateProject_Args::default_instance_ = NULL;

Project_CreateProject_Args* Project_CreateProject_Args::New() const {
  return new Project_CreateProject_Args;
}

void Project_CreateProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CreateProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_CreateProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CreateProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CreateProject_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CreateProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CreateProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CreateProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CreateProject_Args::MergeFrom(const Project_CreateProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CreateProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CreateProject_Args::CopyFrom(const Project_CreateProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CreateProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_CreateProject_Args::Swap(Project_CreateProject_Args* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CreateProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CreateProject_Args_descriptor_;
  metadata.reflection = Project_CreateProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_CreateProject_Result::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_CreateProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_CreateProject_Result >, 11, false >
  Project_CreateProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_CreateProject_Result::default_instance());
Project_CreateProject_Result::Project_CreateProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CreateProject_Result::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_CreateProject_Result::Project_CreateProject_Result(const Project_CreateProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CreateProject_Result::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CreateProject_Result::~Project_CreateProject_Result() {
  SharedDtor();
}

void Project_CreateProject_Result::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_CreateProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CreateProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CreateProject_Result_descriptor_;
}

const Project_CreateProject_Result& Project_CreateProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_CreateProject_Result* Project_CreateProject_Result::default_instance_ = NULL;

Project_CreateProject_Result* Project_CreateProject_Result::New() const {
  return new Project_CreateProject_Result;
}

void Project_CreateProject_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CreateProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_CreateProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CreateProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CreateProject_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CreateProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CreateProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CreateProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CreateProject_Result::MergeFrom(const Project_CreateProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CreateProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CreateProject_Result::CopyFrom(const Project_CreateProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CreateProject_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_CreateProject_Result::Swap(Project_CreateProject_Result* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CreateProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CreateProject_Result_descriptor_;
  metadata.reflection = Project_CreateProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_CreateProject::Project_CreateProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CreateProject::InitAsDefaultInstance() {
}

Project_CreateProject::Project_CreateProject(const Project_CreateProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CreateProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CreateProject::~Project_CreateProject() {
  SharedDtor();
}

void Project_CreateProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_CreateProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CreateProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CreateProject_descriptor_;
}

const Project_CreateProject& Project_CreateProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_CreateProject* Project_CreateProject::default_instance_ = NULL;

Project_CreateProject* Project_CreateProject::New() const {
  return new Project_CreateProject;
}

void Project_CreateProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CreateProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_CreateProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CreateProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CreateProject::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CreateProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CreateProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CreateProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CreateProject::MergeFrom(const Project_CreateProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CreateProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CreateProject::CopyFrom(const Project_CreateProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CreateProject::IsInitialized() const {
  
  return true;
}

void Project_CreateProject::Swap(Project_CreateProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CreateProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CreateProject_descriptor_;
  metadata.reflection = Project_CreateProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_OpenProject_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_OpenProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_OpenProject_Args >, 11, false >
  Project_OpenProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_OpenProject_Args::default_instance());
Project_OpenProject_Args::Project_OpenProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_OpenProject_Args::InitAsDefaultInstance() {
}

Project_OpenProject_Args::Project_OpenProject_Args(const Project_OpenProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_OpenProject_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_OpenProject_Args::~Project_OpenProject_Args() {
  SharedDtor();
}

void Project_OpenProject_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Project_OpenProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_OpenProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_OpenProject_Args_descriptor_;
}

const Project_OpenProject_Args& Project_OpenProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_OpenProject_Args* Project_OpenProject_Args::default_instance_ = NULL;

Project_OpenProject_Args* Project_OpenProject_Args::New() const {
  return new Project_OpenProject_Args;
}

void Project_OpenProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_OpenProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_OpenProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_OpenProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_OpenProject_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_OpenProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_OpenProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_OpenProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_OpenProject_Args::MergeFrom(const Project_OpenProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_OpenProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_OpenProject_Args::CopyFrom(const Project_OpenProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_OpenProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Project_OpenProject_Args::Swap(Project_OpenProject_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_OpenProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_OpenProject_Args_descriptor_;
  metadata.reflection = Project_OpenProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_OpenProject_Result::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_OpenProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_OpenProject_Result >, 11, false >
  Project_OpenProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_OpenProject_Result::default_instance());
Project_OpenProject_Result::Project_OpenProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_OpenProject_Result::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_OpenProject_Result::Project_OpenProject_Result(const Project_OpenProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_OpenProject_Result::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_OpenProject_Result::~Project_OpenProject_Result() {
  SharedDtor();
}

void Project_OpenProject_Result::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_OpenProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_OpenProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_OpenProject_Result_descriptor_;
}

const Project_OpenProject_Result& Project_OpenProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_OpenProject_Result* Project_OpenProject_Result::default_instance_ = NULL;

Project_OpenProject_Result* Project_OpenProject_Result::New() const {
  return new Project_OpenProject_Result;
}

void Project_OpenProject_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_OpenProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_OpenProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_OpenProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_OpenProject_Result::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_OpenProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_OpenProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_OpenProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_OpenProject_Result::MergeFrom(const Project_OpenProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_OpenProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_OpenProject_Result::CopyFrom(const Project_OpenProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_OpenProject_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_OpenProject_Result::Swap(Project_OpenProject_Result* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_OpenProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_OpenProject_Result_descriptor_;
  metadata.reflection = Project_OpenProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_OpenProject::Project_OpenProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_OpenProject::InitAsDefaultInstance() {
}

Project_OpenProject::Project_OpenProject(const Project_OpenProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_OpenProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_OpenProject::~Project_OpenProject() {
  SharedDtor();
}

void Project_OpenProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_OpenProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_OpenProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_OpenProject_descriptor_;
}

const Project_OpenProject& Project_OpenProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_OpenProject* Project_OpenProject::default_instance_ = NULL;

Project_OpenProject* Project_OpenProject::New() const {
  return new Project_OpenProject;
}

void Project_OpenProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_OpenProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_OpenProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_OpenProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_OpenProject::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_OpenProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_OpenProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_OpenProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_OpenProject::MergeFrom(const Project_OpenProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_OpenProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_OpenProject::CopyFrom(const Project_OpenProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_OpenProject::IsInitialized() const {
  
  return true;
}

void Project_OpenProject::Swap(Project_OpenProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_OpenProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_OpenProject_descriptor_;
  metadata.reflection = Project_OpenProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_UpdateProject_Args::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_UpdateProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_UpdateProject_Args >, 11, false >
  Project_UpdateProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_UpdateProject_Args::default_instance());
Project_UpdateProject_Args::Project_UpdateProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_UpdateProject_Args::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_UpdateProject_Args::Project_UpdateProject_Args(const Project_UpdateProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_UpdateProject_Args::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_UpdateProject_Args::~Project_UpdateProject_Args() {
  SharedDtor();
}

void Project_UpdateProject_Args::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_UpdateProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_UpdateProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_UpdateProject_Args_descriptor_;
}

const Project_UpdateProject_Args& Project_UpdateProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_UpdateProject_Args* Project_UpdateProject_Args::default_instance_ = NULL;

Project_UpdateProject_Args* Project_UpdateProject_Args::New() const {
  return new Project_UpdateProject_Args;
}

void Project_UpdateProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_UpdateProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_UpdateProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_UpdateProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_UpdateProject_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_UpdateProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_UpdateProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_UpdateProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_UpdateProject_Args::MergeFrom(const Project_UpdateProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_UpdateProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_UpdateProject_Args::CopyFrom(const Project_UpdateProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_UpdateProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_UpdateProject_Args::Swap(Project_UpdateProject_Args* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_UpdateProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_UpdateProject_Args_descriptor_;
  metadata.reflection = Project_UpdateProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_UpdateProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_UpdateProject_Result >, 11, false >
  Project_UpdateProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_UpdateProject_Result::default_instance());
Project_UpdateProject_Result::Project_UpdateProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_UpdateProject_Result::InitAsDefaultInstance() {
}

Project_UpdateProject_Result::Project_UpdateProject_Result(const Project_UpdateProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_UpdateProject_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_UpdateProject_Result::~Project_UpdateProject_Result() {
  SharedDtor();
}

void Project_UpdateProject_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_UpdateProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_UpdateProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_UpdateProject_Result_descriptor_;
}

const Project_UpdateProject_Result& Project_UpdateProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_UpdateProject_Result* Project_UpdateProject_Result::default_instance_ = NULL;

Project_UpdateProject_Result* Project_UpdateProject_Result::New() const {
  return new Project_UpdateProject_Result;
}

void Project_UpdateProject_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_UpdateProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_UpdateProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_UpdateProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_UpdateProject_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_UpdateProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_UpdateProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_UpdateProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_UpdateProject_Result::MergeFrom(const Project_UpdateProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_UpdateProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_UpdateProject_Result::CopyFrom(const Project_UpdateProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_UpdateProject_Result::IsInitialized() const {
  
  return true;
}

void Project_UpdateProject_Result::Swap(Project_UpdateProject_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_UpdateProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_UpdateProject_Result_descriptor_;
  metadata.reflection = Project_UpdateProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_UpdateProject::Project_UpdateProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_UpdateProject::InitAsDefaultInstance() {
}

Project_UpdateProject::Project_UpdateProject(const Project_UpdateProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_UpdateProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_UpdateProject::~Project_UpdateProject() {
  SharedDtor();
}

void Project_UpdateProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_UpdateProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_UpdateProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_UpdateProject_descriptor_;
}

const Project_UpdateProject& Project_UpdateProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_UpdateProject* Project_UpdateProject::default_instance_ = NULL;

Project_UpdateProject* Project_UpdateProject::New() const {
  return new Project_UpdateProject;
}

void Project_UpdateProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_UpdateProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_UpdateProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_UpdateProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_UpdateProject::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_UpdateProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_UpdateProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_UpdateProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_UpdateProject::MergeFrom(const Project_UpdateProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_UpdateProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_UpdateProject::CopyFrom(const Project_UpdateProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_UpdateProject::IsInitialized() const {
  
  return true;
}

void Project_UpdateProject::Swap(Project_UpdateProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_UpdateProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_UpdateProject_descriptor_;
  metadata.reflection = Project_UpdateProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_CloseProject_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_CloseProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_CloseProject_Args >, 11, false >
  Project_CloseProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_CloseProject_Args::default_instance());
Project_CloseProject_Args::Project_CloseProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CloseProject_Args::InitAsDefaultInstance() {
}

Project_CloseProject_Args::Project_CloseProject_Args(const Project_CloseProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CloseProject_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CloseProject_Args::~Project_CloseProject_Args() {
  SharedDtor();
}

void Project_CloseProject_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_CloseProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CloseProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CloseProject_Args_descriptor_;
}

const Project_CloseProject_Args& Project_CloseProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_CloseProject_Args* Project_CloseProject_Args::default_instance_ = NULL;

Project_CloseProject_Args* Project_CloseProject_Args::New() const {
  return new Project_CloseProject_Args;
}

void Project_CloseProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CloseProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_CloseProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CloseProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CloseProject_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CloseProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CloseProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CloseProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CloseProject_Args::MergeFrom(const Project_CloseProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CloseProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CloseProject_Args::CopyFrom(const Project_CloseProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CloseProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Project_CloseProject_Args::Swap(Project_CloseProject_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CloseProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CloseProject_Args_descriptor_;
  metadata.reflection = Project_CloseProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_CloseProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_CloseProject_Result >, 11, false >
  Project_CloseProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_CloseProject_Result::default_instance());
Project_CloseProject_Result::Project_CloseProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CloseProject_Result::InitAsDefaultInstance() {
}

Project_CloseProject_Result::Project_CloseProject_Result(const Project_CloseProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CloseProject_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CloseProject_Result::~Project_CloseProject_Result() {
  SharedDtor();
}

void Project_CloseProject_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_CloseProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CloseProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CloseProject_Result_descriptor_;
}

const Project_CloseProject_Result& Project_CloseProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_CloseProject_Result* Project_CloseProject_Result::default_instance_ = NULL;

Project_CloseProject_Result* Project_CloseProject_Result::New() const {
  return new Project_CloseProject_Result;
}

void Project_CloseProject_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CloseProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_CloseProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CloseProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CloseProject_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CloseProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CloseProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CloseProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CloseProject_Result::MergeFrom(const Project_CloseProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CloseProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CloseProject_Result::CopyFrom(const Project_CloseProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CloseProject_Result::IsInitialized() const {
  
  return true;
}

void Project_CloseProject_Result::Swap(Project_CloseProject_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CloseProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CloseProject_Result_descriptor_;
  metadata.reflection = Project_CloseProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_CloseProject::Project_CloseProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CloseProject::InitAsDefaultInstance() {
}

Project_CloseProject::Project_CloseProject(const Project_CloseProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CloseProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CloseProject::~Project_CloseProject() {
  SharedDtor();
}

void Project_CloseProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_CloseProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CloseProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CloseProject_descriptor_;
}

const Project_CloseProject& Project_CloseProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_CloseProject* Project_CloseProject::default_instance_ = NULL;

Project_CloseProject* Project_CloseProject::New() const {
  return new Project_CloseProject;
}

void Project_CloseProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CloseProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_CloseProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CloseProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CloseProject::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CloseProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CloseProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CloseProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CloseProject::MergeFrom(const Project_CloseProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CloseProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CloseProject::CopyFrom(const Project_CloseProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CloseProject::IsInitialized() const {
  
  return true;
}

void Project_CloseProject::Swap(Project_CloseProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CloseProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CloseProject_descriptor_;
  metadata.reflection = Project_CloseProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_StoreProject_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_StoreProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_StoreProject_Args >, 11, false >
  Project_StoreProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_StoreProject_Args::default_instance());
Project_StoreProject_Args::Project_StoreProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_StoreProject_Args::InitAsDefaultInstance() {
}

Project_StoreProject_Args::Project_StoreProject_Args(const Project_StoreProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_StoreProject_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_StoreProject_Args::~Project_StoreProject_Args() {
  SharedDtor();
}

void Project_StoreProject_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_StoreProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_StoreProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_StoreProject_Args_descriptor_;
}

const Project_StoreProject_Args& Project_StoreProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_StoreProject_Args* Project_StoreProject_Args::default_instance_ = NULL;

Project_StoreProject_Args* Project_StoreProject_Args::New() const {
  return new Project_StoreProject_Args;
}

void Project_StoreProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_StoreProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_StoreProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_StoreProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_StoreProject_Args::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_StoreProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_StoreProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_StoreProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_StoreProject_Args::MergeFrom(const Project_StoreProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_StoreProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_StoreProject_Args::CopyFrom(const Project_StoreProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_StoreProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  return true;
}

void Project_StoreProject_Args::Swap(Project_StoreProject_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_StoreProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_StoreProject_Args_descriptor_;
  metadata.reflection = Project_StoreProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_StoreProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_StoreProject_Result >, 11, false >
  Project_StoreProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_StoreProject_Result::default_instance());
Project_StoreProject_Result::Project_StoreProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_StoreProject_Result::InitAsDefaultInstance() {
}

Project_StoreProject_Result::Project_StoreProject_Result(const Project_StoreProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_StoreProject_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_StoreProject_Result::~Project_StoreProject_Result() {
  SharedDtor();
}

void Project_StoreProject_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_StoreProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_StoreProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_StoreProject_Result_descriptor_;
}

const Project_StoreProject_Result& Project_StoreProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_StoreProject_Result* Project_StoreProject_Result::default_instance_ = NULL;

Project_StoreProject_Result* Project_StoreProject_Result::New() const {
  return new Project_StoreProject_Result;
}

void Project_StoreProject_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_StoreProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_StoreProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_StoreProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_StoreProject_Result::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_StoreProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_StoreProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_StoreProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_StoreProject_Result::MergeFrom(const Project_StoreProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_StoreProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_StoreProject_Result::CopyFrom(const Project_StoreProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_StoreProject_Result::IsInitialized() const {
  
  return true;
}

void Project_StoreProject_Result::Swap(Project_StoreProject_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_StoreProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_StoreProject_Result_descriptor_;
  metadata.reflection = Project_StoreProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_StoreProject::Project_StoreProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_StoreProject::InitAsDefaultInstance() {
}

Project_StoreProject::Project_StoreProject(const Project_StoreProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_StoreProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_StoreProject::~Project_StoreProject() {
  SharedDtor();
}

void Project_StoreProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_StoreProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_StoreProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_StoreProject_descriptor_;
}

const Project_StoreProject& Project_StoreProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project_StoreProject* Project_StoreProject::default_instance_ = NULL;

Project_StoreProject* Project_StoreProject::New() const {
  return new Project_StoreProject;
}

void Project_StoreProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_StoreProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_StoreProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_StoreProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_StoreProject::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_StoreProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_StoreProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_StoreProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_StoreProject::MergeFrom(const Project_StoreProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_StoreProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_StoreProject::CopyFrom(const Project_StoreProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_StoreProject::IsInitialized() const {
  
  return true;
}

void Project_StoreProject::Swap(Project_StoreProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_StoreProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_StoreProject_descriptor_;
  metadata.reflection = Project_StoreProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project::Project()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project::InitAsDefaultInstance() {
}

Project::Project(const Project& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project::~Project() {
  SharedDtor();
}

void Project::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_descriptor_;
}

const Project& Project::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();  return *default_instance_;
}

Project* Project::default_instance_ = NULL;

Project* Project::New() const {
  return new Project;
}

void Project::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project::ByteSize() const {
  int total_size = 0;
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project::MergeFrom(const Project& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project::CopyFrom(const Project& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project::IsInitialized() const {
  
  return true;
}

void Project::Swap(Project* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_descriptor_;
  metadata.reflection = Project_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace batch
}  // namespace proto
}  // namespace generated

// @@protoc_insertion_point(global_scope)

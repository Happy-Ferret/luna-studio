// Generated by the protocol buffer compiler.  DO NOT EDIT!

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "type.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace type {

namespace {

const ::google::protobuf::Descriptor* Type_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Type_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Type_Cls_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Unknown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Unknown_reflection_ = NULL;
const ::google::protobuf::Descriptor* Var_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Var_reflection_ = NULL;
const ::google::protobuf::Descriptor* Tuple_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Tuple_reflection_ = NULL;
const ::google::protobuf::Descriptor* Class_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Class_reflection_ = NULL;
const ::google::protobuf::Descriptor* Module_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Module_reflection_ = NULL;
const ::google::protobuf::Descriptor* Lambda_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Lambda_reflection_ = NULL;
const ::google::protobuf::Descriptor* Con__descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Con__reflection_ = NULL;
const ::google::protobuf::Descriptor* App_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  App_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_type_2eproto() {
  protobuf_AddDesc_type_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "type.proto");
  GOOGLE_CHECK(file != NULL);
  Type_descriptor_ = file->message_type(0);
  static const int Type_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, cls_),
  };
  Type_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Type_descriptor_,
      Type::default_instance_,
      Type_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Type, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Type));
  Type_Cls_descriptor_ = Type_descriptor_->enum_type(0);
  Unknown_descriptor_ = file->message_type(1);
  static const int Unknown_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unknown, id_),
  };
  Unknown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Unknown_descriptor_,
      Unknown::default_instance_,
      Unknown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unknown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Unknown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Unknown));
  Var_descriptor_ = file->message_type(2);
  static const int Var_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Var, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Var, name_),
  };
  Var_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Var_descriptor_,
      Var::default_instance_,
      Var_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Var, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Var, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Var));
  Tuple_descriptor_ = file->message_type(3);
  static const int Tuple_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, items_),
  };
  Tuple_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Tuple_descriptor_,
      Tuple::default_instance_,
      Tuple_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tuple, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Tuple));
  Class_descriptor_ = file->message_type(4);
  static const int Class_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, params_),
  };
  Class_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Class_descriptor_,
      Class::default_instance_,
      Class_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Class, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Class));
  Module_descriptor_ = file->message_type(5);
  static const int Module_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, path_),
  };
  Module_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Module_descriptor_,
      Module::default_instance_,
      Module_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Module));
  Lambda_descriptor_ = file->message_type(6);
  static const int Lambda_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lambda, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lambda, inputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lambda, outputs_),
  };
  Lambda_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Lambda_descriptor_,
      Lambda::default_instance_,
      Lambda_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lambda, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Lambda, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Lambda));
  Con__descriptor_ = file->message_type(7);
  static const int Con__offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Con_, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Con_, segments_),
  };
  Con__reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Con__descriptor_,
      Con_::default_instance_,
      Con__offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Con_, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Con_, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Con_));
  App_descriptor_ = file->message_type(8);
  static const int App_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App, args_),
  };
  App_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      App_descriptor_,
      App::default_instance_,
      App_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(App, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(App));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_type_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Type_descriptor_, &Type::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Unknown_descriptor_, &Unknown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Var_descriptor_, &Var::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Tuple_descriptor_, &Tuple::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Class_descriptor_, &Class::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Module_descriptor_, &Module::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Lambda_descriptor_, &Lambda::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Con__descriptor_, &Con_::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    App_descriptor_, &App::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_type_2eproto() {
  delete Type::default_instance_;
  delete Type_reflection_;
  delete Unknown::default_instance_;
  delete Unknown_reflection_;
  delete Var::default_instance_;
  delete Var_reflection_;
  delete Tuple::default_instance_;
  delete Tuple_reflection_;
  delete Class::default_instance_;
  delete Class_reflection_;
  delete Module::default_instance_;
  delete Module_reflection_;
  delete Lambda::default_instance_;
  delete Lambda_reflection_;
  delete Con_::default_instance_;
  delete Con__reflection_;
  delete App::default_instance_;
  delete App_reflection_;
}

void protobuf_AddDesc_type_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\ntype.proto\022\024generated.proto.type\"\233\001\n\004T"
    "ype\022+\n\003cls\030\001 \002(\0162\036.generated.proto.type."
    "Type.Cls\"\\\n\003Cls\022\013\n\007Unknown\020\001\022\007\n\003Var\020\002\022\t\n"
    "\005Tuple\020\003\022\t\n\005Class\020\004\022\n\n\006Module\020\005\022\n\n\006Lambd"
    "a\020\006\022\010\n\004Con_\020\007\022\007\n\003App\020\010*\010\010d\020\200\200\200\200\002\"]\n\007Unkn"
    "own\022\n\n\002id\030\001 \001(\0052F\n\003ext\022\032.generated.proto"
    ".type.Type\030d \001(\0132\035.generated.proto.type."
    "Unknown\"c\n\003Var\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t"
    "2B\n\003ext\022\032.generated.proto.type.Type\030e \001("
    "\0132\031.generated.proto.type.Var\"\204\001\n\005Tuple\022\n"
    "\n\002id\030\001 \001(\005\022)\n\005items\030\002 \003(\0132\032.generated.pr"
    "oto.type.Type2D\n\003ext\022\032.generated.proto.t"
    "ype.Type\030f \001(\0132\033.generated.proto.type.Tu"
    "ple\"w\n\005Class\022\n\n\002id\030\001 \001(\005\022\014\n\004name\030\002 \001(\t\022\016"
    "\n\006params\030\003 \003(\t2D\n\003ext\022\032.generated.proto."
    "type.Type\030g \001(\0132\033.generated.proto.type.C"
    "lass\"i\n\006Module\022\n\n\002id\030\001 \001(\005\022\014\n\004path\030\002 \003(\t"
    "2E\n\003ext\022\032.generated.proto.type.Type\030h \001("
    "\0132\034.generated.proto.type.Module\"\264\001\n\006Lamb"
    "da\022\n\n\002id\030\001 \001(\005\022*\n\006inputs\030\002 \003(\0132\032.generat"
    "ed.proto.type.Type\022+\n\007outputs\030\003 \001(\0132\032.ge"
    "nerated.proto.type.Type2E\n\003ext\022\032.generat"
    "ed.proto.type.Type\030i \001(\0132\034.generated.pro"
    "to.type.Lambda\"i\n\004Con_\022\n\n\002id\030\001 \001(\005\022\020\n\010se"
    "gments\030\002 \003(\t2C\n\003ext\022\032.generated.proto.ty"
    "pe.Type\030j \001(\0132\032.generated.proto.type.Con"
    "_\"\250\001\n\003App\022\n\n\002id\030\001 \001(\005\022\'\n\003src\030\002 \001(\0132\032.gen"
    "erated.proto.type.Type\022(\n\004args\030\003 \003(\0132\032.g"
    "enerated.proto.type.Type2B\n\003ext\022\032.genera"
    "ted.proto.type.Type\030k \001(\0132\031.generated.pr"
    "oto.type.App", 1212);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "type.proto", &protobuf_RegisterTypes);
  Type::default_instance_ = new Type();
  Unknown::default_instance_ = new Unknown();
  Var::default_instance_ = new Var();
  Tuple::default_instance_ = new Tuple();
  Class::default_instance_ = new Class();
  Module::default_instance_ = new Module();
  Lambda::default_instance_ = new Lambda();
  Con_::default_instance_ = new Con_();
  App::default_instance_ = new App();
  Type::default_instance_->InitAsDefaultInstance();
  Unknown::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::type::Type::default_instance(),
    100, 11, false, false,
    &::generated::proto::type::Unknown::default_instance());
  Var::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::type::Type::default_instance(),
    101, 11, false, false,
    &::generated::proto::type::Var::default_instance());
  Tuple::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::type::Type::default_instance(),
    102, 11, false, false,
    &::generated::proto::type::Tuple::default_instance());
  Class::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::type::Type::default_instance(),
    103, 11, false, false,
    &::generated::proto::type::Class::default_instance());
  Module::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::type::Type::default_instance(),
    104, 11, false, false,
    &::generated::proto::type::Module::default_instance());
  Lambda::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::type::Type::default_instance(),
    105, 11, false, false,
    &::generated::proto::type::Lambda::default_instance());
  Con_::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::type::Type::default_instance(),
    106, 11, false, false,
    &::generated::proto::type::Con_::default_instance());
  App::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::type::Type::default_instance(),
    107, 11, false, false,
    &::generated::proto::type::App::default_instance());
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_type_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_type_2eproto {
  StaticDescriptorInitializer_type_2eproto() {
    protobuf_AddDesc_type_2eproto();
  }
} static_descriptor_initializer_type_2eproto_;


// ===================================================================

const ::google::protobuf::EnumDescriptor* Type_Cls_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type_Cls_descriptor_;
}
bool Type_Cls_IsValid(int value) {
  switch(value) {
    case 1:
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Type_Cls Type::Unknown;
const Type_Cls Type::Var;
const Type_Cls Type::Tuple;
const Type_Cls Type::Class;
const Type_Cls Type::Module;
const Type_Cls Type::Lambda;
const Type_Cls Type::Con_;
const Type_Cls Type::App;
const Type_Cls Type::Cls_MIN;
const Type_Cls Type::Cls_MAX;
const int Type::Cls_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Type::kClsFieldNumber;
#endif  // !_MSC_VER

Type::Type()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Type::InitAsDefaultInstance() {
}

Type::Type(const Type& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Type::SharedCtor() {
  _cached_size_ = 0;
  cls_ = 1;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Type::~Type() {
  SharedDtor();
}

void Type::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Type::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Type::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Type_descriptor_;
}

const Type& Type::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

Type* Type::default_instance_ = NULL;

Type* Type::New() const {
  return new Type;
}

void Type::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    cls_ = 1;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Type::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type.Cls cls = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::generated::proto::type::Type_Cls_IsValid(value)) {
            set_cls(static_cast< ::generated::proto::type::Type_Cls >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((800u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Type::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type.Cls cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->cls(), output);
  }
  
  // Extension range [100, 536870912)
  _extensions_.SerializeWithCachedSizes(
      100, 536870912, output);
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Type::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type.Cls cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->cls(), target);
  }
  
  // Extension range [100, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      100, 536870912, target);
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Type::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type.Cls cls = 1;
    if (has_cls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->cls());
    }
    
  }
  total_size += _extensions_.ByteSize();
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Type::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Type* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Type*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Type::MergeFrom(const Type& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cls()) {
      set_cls(from.cls());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Type::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Type::CopyFrom(const Type& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Type::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;
  
  
  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Type::Swap(Type* other) {
  if (other != this) {
    std::swap(cls_, other->cls_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Type::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Type_descriptor_;
  metadata.reflection = Type_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Unknown::kIdFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Unknown::kExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Unknown >, 11, false >
  Unknown::ext(kExtFieldNumber, ::generated::proto::type::Unknown::default_instance());
Unknown::Unknown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Unknown::InitAsDefaultInstance() {
}

Unknown::Unknown(const Unknown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Unknown::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Unknown::~Unknown() {
  SharedDtor();
}

void Unknown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Unknown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Unknown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Unknown_descriptor_;
}

const Unknown& Unknown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

Unknown* Unknown::default_instance_ = NULL;

Unknown* Unknown::New() const {
  return new Unknown;
}

void Unknown::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Unknown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Unknown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Unknown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Unknown::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Unknown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Unknown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Unknown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Unknown::MergeFrom(const Unknown& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Unknown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Unknown::CopyFrom(const Unknown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Unknown::IsInitialized() const {
  
  return true;
}

void Unknown::Swap(Unknown* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Unknown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Unknown_descriptor_;
  metadata.reflection = Unknown_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Var::kIdFieldNumber;
const int Var::kNameFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Var::kExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Var >, 11, false >
  Var::ext(kExtFieldNumber, ::generated::proto::type::Var::default_instance());
Var::Var()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Var::InitAsDefaultInstance() {
}

Var::Var(const Var& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Var::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Var::~Var() {
  SharedDtor();
}

void Var::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Var::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Var::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Var_descriptor_;
}

const Var& Var::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

Var* Var::default_instance_ = NULL;

Var* Var::New() const {
  return new Var;
}

void Var::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Var::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Var::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Var::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Var::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Var::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Var* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Var*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Var::MergeFrom(const Var& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Var::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Var::CopyFrom(const Var& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Var::IsInitialized() const {
  
  return true;
}

void Var::Swap(Var* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Var::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Var_descriptor_;
  metadata.reflection = Var_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Tuple::kIdFieldNumber;
const int Tuple::kItemsFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Tuple::kExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Tuple >, 11, false >
  Tuple::ext(kExtFieldNumber, ::generated::proto::type::Tuple::default_instance());
Tuple::Tuple()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Tuple::InitAsDefaultInstance() {
}

Tuple::Tuple(const Tuple& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Tuple::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Tuple::~Tuple() {
  SharedDtor();
}

void Tuple::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Tuple::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tuple::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Tuple_descriptor_;
}

const Tuple& Tuple::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

Tuple* Tuple::default_instance_ = NULL;

Tuple* Tuple::New() const {
  return new Tuple;
}

void Tuple::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Tuple::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_items;
        break;
      }
      
      // repeated .generated.proto.type.Type items = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Tuple::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // repeated .generated.proto.type.Type items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->items(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Tuple::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // repeated .generated.proto.type.Type items = 2;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->items(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Tuple::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  // repeated .generated.proto.type.Type items = 2;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Tuple::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Tuple* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Tuple*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Tuple::MergeFrom(const Tuple& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Tuple::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Tuple::CopyFrom(const Tuple& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Tuple::IsInitialized() const {
  
  for (int i = 0; i < items_size(); i++) {
    if (!this->items(i).IsInitialized()) return false;
  }
  return true;
}

void Tuple::Swap(Tuple* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Tuple::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Tuple_descriptor_;
  metadata.reflection = Tuple_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Class::kIdFieldNumber;
const int Class::kNameFieldNumber;
const int Class::kParamsFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Class::kExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Class >, 11, false >
  Class::ext(kExtFieldNumber, ::generated::proto::type::Class::default_instance());
Class::Class()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Class::InitAsDefaultInstance() {
}

Class::Class(const Class& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Class::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Class::~Class() {
  SharedDtor();
}

void Class::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
  }
}

void Class::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Class::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Class_descriptor_;
}

const Class& Class::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

Class* Class::default_instance_ = NULL;

Class* Class::New() const {
  return new Class;
}

void Class::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
  }
  params_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Class::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_name;
        break;
      }
      
      // optional string name = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_name:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_params;
        break;
      }
      
      // repeated string params = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_params:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_params()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->params(0).data(), this->params(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_params;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Class::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->name(), output);
  }
  
  // repeated string params = 3;
  for (int i = 0; i < this->params_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->params(i).data(), this->params(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      3, this->params(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Class::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional string name = 2;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->name(), target);
  }
  
  // repeated string params = 3;
  for (int i = 0; i < this->params_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->params(i).data(), this->params(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(3, this->params(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Class::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional string name = 2;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }
    
  }
  // repeated string params = 3;
  total_size += 1 * this->params_size();
  for (int i = 0; i < this->params_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->params(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Class::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Class* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Class*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Class::MergeFrom(const Class& from) {
  GOOGLE_CHECK_NE(&from, this);
  params_.MergeFrom(from.params_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_name()) {
      set_name(from.name());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Class::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Class::CopyFrom(const Class& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Class::IsInitialized() const {
  
  return true;
}

void Class::Swap(Class* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(name_, other->name_);
    params_.Swap(&other->params_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Class::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Class_descriptor_;
  metadata.reflection = Class_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Module::kIdFieldNumber;
const int Module::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Module::kExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Module >, 11, false >
  Module::ext(kExtFieldNumber, ::generated::proto::type::Module::default_instance());
Module::Module()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Module::InitAsDefaultInstance() {
}

Module::Module(const Module& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Module::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Module::~Module() {
  SharedDtor();
}

void Module::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Module::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Module_descriptor_;
}

const Module& Module::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

Module* Module::default_instance_ = NULL;

Module* Module::New() const {
  return new Module;
}

void Module::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  path_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }
      
      // repeated string path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path(0).data(), this->path(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_path;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // repeated string path = 2;
  for (int i = 0; i < this->path_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->path(i).data(), this->path(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Module::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // repeated string path = 2;
  for (int i = 0; i < this->path_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path(i).data(), this->path(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->path(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Module::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  // repeated string path = 2;
  total_size += 1 * this->path_size();
  for (int i = 0; i < this->path_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->path(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Module::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Module* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Module*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Module::MergeFrom(const Module& from) {
  GOOGLE_CHECK_NE(&from, this);
  path_.MergeFrom(from.path_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Module::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Module::CopyFrom(const Module& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {
  
  return true;
}

void Module::Swap(Module* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    path_.Swap(&other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Module::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Module_descriptor_;
  metadata.reflection = Module_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Lambda::kIdFieldNumber;
const int Lambda::kInputsFieldNumber;
const int Lambda::kOutputsFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Lambda::kExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Lambda >, 11, false >
  Lambda::ext(kExtFieldNumber, ::generated::proto::type::Lambda::default_instance());
Lambda::Lambda()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Lambda::InitAsDefaultInstance() {
  outputs_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
}

Lambda::Lambda(const Lambda& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Lambda::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  outputs_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Lambda::~Lambda() {
  SharedDtor();
}

void Lambda::SharedDtor() {
  if (this != default_instance_) {
    delete outputs_;
  }
}

void Lambda::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Lambda::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Lambda_descriptor_;
}

const Lambda& Lambda::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

Lambda* Lambda::default_instance_ = NULL;

Lambda* Lambda::New() const {
  return new Lambda;
}

void Lambda::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_outputs()) {
      if (outputs_ != NULL) outputs_->::generated::proto::type::Type::Clear();
    }
  }
  inputs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Lambda::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_inputs;
        break;
      }
      
      // repeated .generated.proto.type.Type inputs = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inputs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_inputs;
        if (input->ExpectTag(26)) goto parse_outputs;
        break;
      }
      
      // optional .generated.proto.type.Type outputs = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_outputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_outputs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Lambda::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // repeated .generated.proto.type.Type inputs = 2;
  for (int i = 0; i < this->inputs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->inputs(i), output);
  }
  
  // optional .generated.proto.type.Type outputs = 3;
  if (has_outputs()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->outputs(), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Lambda::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // repeated .generated.proto.type.Type inputs = 2;
  for (int i = 0; i < this->inputs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->inputs(i), target);
  }
  
  // optional .generated.proto.type.Type outputs = 3;
  if (has_outputs()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->outputs(), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Lambda::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional .generated.proto.type.Type outputs = 3;
    if (has_outputs()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->outputs());
    }
    
  }
  // repeated .generated.proto.type.Type inputs = 2;
  total_size += 1 * this->inputs_size();
  for (int i = 0; i < this->inputs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inputs(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Lambda::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Lambda* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Lambda*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Lambda::MergeFrom(const Lambda& from) {
  GOOGLE_CHECK_NE(&from, this);
  inputs_.MergeFrom(from.inputs_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_outputs()) {
      mutable_outputs()->::generated::proto::type::Type::MergeFrom(from.outputs());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Lambda::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Lambda::CopyFrom(const Lambda& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Lambda::IsInitialized() const {
  
  for (int i = 0; i < inputs_size(); i++) {
    if (!this->inputs(i).IsInitialized()) return false;
  }
  if (has_outputs()) {
    if (!this->outputs().IsInitialized()) return false;
  }
  return true;
}

void Lambda::Swap(Lambda* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    inputs_.Swap(&other->inputs_);
    std::swap(outputs_, other->outputs_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Lambda::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Lambda_descriptor_;
  metadata.reflection = Lambda_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Con_::kIdFieldNumber;
const int Con_::kSegmentsFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Con_::kExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Con_ >, 11, false >
  Con_::ext(kExtFieldNumber, ::generated::proto::type::Con_::default_instance());
Con_::Con_()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Con_::InitAsDefaultInstance() {
}

Con_::Con_(const Con_& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Con_::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Con_::~Con_() {
  SharedDtor();
}

void Con_::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Con_::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Con_::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Con__descriptor_;
}

const Con_& Con_::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

Con_* Con_::default_instance_ = NULL;

Con_* Con_::New() const {
  return new Con_;
}

void Con_::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  segments_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Con_::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_segments;
        break;
      }
      
      // repeated string segments = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_segments:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_segments()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->segments(0).data(), this->segments(0).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_segments;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Con_::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // repeated string segments = 2;
  for (int i = 0; i < this->segments_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->segments(i).data(), this->segments(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->segments(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Con_::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // repeated string segments = 2;
  for (int i = 0; i < this->segments_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->segments(i).data(), this->segments(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(2, this->segments(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Con_::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
  }
  // repeated string segments = 2;
  total_size += 1 * this->segments_size();
  for (int i = 0; i < this->segments_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->segments(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Con_::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Con_* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Con_*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Con_::MergeFrom(const Con_& from) {
  GOOGLE_CHECK_NE(&from, this);
  segments_.MergeFrom(from.segments_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Con_::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Con_::CopyFrom(const Con_& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Con_::IsInitialized() const {
  
  return true;
}

void Con_::Swap(Con_* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    segments_.Swap(&other->segments_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Con_::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Con__descriptor_;
  metadata.reflection = Con__reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int App::kIdFieldNumber;
const int App::kSrcFieldNumber;
const int App::kArgsFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int App::kExtFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::App >, 11, false >
  App::ext(kExtFieldNumber, ::generated::proto::type::App::default_instance());
App::App()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void App::InitAsDefaultInstance() {
  src_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
}

App::App(const App& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void App::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  src_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

App::~App() {
  SharedDtor();
}

void App::SharedDtor() {
  if (this != default_instance_) {
    delete src_;
  }
}

void App::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* App::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return App_descriptor_;
}

const App& App::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_type_2eproto();  return *default_instance_;
}

App* App::default_instance_ = NULL;

App* App::New() const {
  return new App;
}

void App::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
    if (has_src()) {
      if (src_ != NULL) src_->::generated::proto::type::Type::Clear();
    }
  }
  args_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool App::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_src;
        break;
      }
      
      // optional .generated.proto.type.Type src = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_src:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_src()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_args;
        break;
      }
      
      // repeated .generated.proto.type.Type args = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_args:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_args()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_args;
        if (input->ExpectAtEnd()) return true;
        break;
      }
      
      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void App::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }
  
  // optional .generated.proto.type.Type src = 2;
  if (has_src()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->src(), output);
  }
  
  // repeated .generated.proto.type.Type args = 3;
  for (int i = 0; i < this->args_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->args(i), output);
  }
  
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* App::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }
  
  // optional .generated.proto.type.Type src = 2;
  if (has_src()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->src(), target);
  }
  
  // repeated .generated.proto.type.Type args = 3;
  for (int i = 0; i < this->args_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->args(i), target);
  }
  
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int App::ByteSize() const {
  int total_size = 0;
  
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }
    
    // optional .generated.proto.type.Type src = 2;
    if (has_src()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->src());
    }
    
  }
  // repeated .generated.proto.type.Type args = 3;
  total_size += 1 * this->args_size();
  for (int i = 0; i < this->args_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->args(i));
  }
  
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void App::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const App* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const App*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void App::MergeFrom(const App& from) {
  GOOGLE_CHECK_NE(&from, this);
  args_.MergeFrom(from.args_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_src()) {
      mutable_src()->::generated::proto::type::Type::MergeFrom(from.src());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void App::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void App::CopyFrom(const App& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool App::IsInitialized() const {
  
  if (has_src()) {
    if (!this->src().IsInitialized()) return false;
  }
  for (int i = 0; i < args_size(); i++) {
    if (!this->args(i).IsInitialized()) return false;
  }
  return true;
}

void App::Swap(App* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(src_, other->src_);
    args_.Swap(&other->args_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata App::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = App_descriptor_;
  metadata.reflection = App_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace proto
}  // namespace generated

// @@protoc_insertion_point(global_scope)

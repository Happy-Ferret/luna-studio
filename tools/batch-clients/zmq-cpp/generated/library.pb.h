// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: library.proto

#ifndef PROTOBUF_library_2eproto__INCLUDED
#define PROTOBUF_library_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2004002 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_message_reflection.h>
#include "module.pb.h"
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace library {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_library_2eproto();
void protobuf_AssignDesc_library_2eproto();
void protobuf_ShutdownFile_library_2eproto();

class Library;

// ===================================================================

class Library : public ::google::protobuf::Message {
 public:
  Library();
  virtual ~Library();
  
  Library(const Library& from);
  
  inline Library& operator=(const Library& from) {
    CopyFrom(from);
    return *this;
  }
  
  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }
  
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }
  
  static const ::google::protobuf::Descriptor* descriptor();
  static const Library& default_instance();
  
  void Swap(Library* other);
  
  // implements Message ----------------------------------------------
  
  Library* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Library& from);
  void MergeFrom(const Library& from);
  void Clear();
  bool IsInitialized() const;
  
  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  
  ::google::protobuf::Metadata GetMetadata() const;
  
  // nested types ----------------------------------------------------
  
  // accessors -------------------------------------------------------
  
  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);
  
  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  
  // optional string path = 3;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 3;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  
  // optional .generated.proto.module.Module ast = 4;
  inline bool has_ast() const;
  inline void clear_ast();
  static const int kAstFieldNumber = 4;
  inline const ::generated::proto::module::Module& ast() const;
  inline ::generated::proto::module::Module* mutable_ast();
  inline ::generated::proto::module::Module* release_ast();
  
  // @@protoc_insertion_point(class_scope:generated.proto.library.Library)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_ast();
  inline void clear_has_ast();
  
  ::google::protobuf::UnknownFieldSet _unknown_fields_;
  
  ::std::string* name_;
  ::std::string* path_;
  ::generated::proto::module::Module* ast_;
  ::google::protobuf::int32 id_;
  
  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(4 + 31) / 32];
  
  friend void  protobuf_AddDesc_library_2eproto();
  friend void protobuf_AssignDesc_library_2eproto();
  friend void protobuf_ShutdownFile_library_2eproto();
  
  void InitAsDefaultInstance();
  static Library* default_instance_;
};
// ===================================================================


// ===================================================================

// Library

// optional int32 id = 1;
inline bool Library::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Library::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Library::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Library::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Library::id() const {
  return id_;
}
inline void Library::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool Library::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Library::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Library::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Library::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Library::name() const {
  return *name_;
}
inline void Library::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Library::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Library::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Library::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Library::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional string path = 3;
inline bool Library::has_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Library::set_has_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Library::clear_has_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Library::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& Library::path() const {
  return *path_;
}
inline void Library::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void Library::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void Library::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Library::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* Library::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}

// optional .generated.proto.module.Module ast = 4;
inline bool Library::has_ast() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Library::set_has_ast() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Library::clear_has_ast() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Library::clear_ast() {
  if (ast_ != NULL) ast_->::generated::proto::module::Module::Clear();
  clear_has_ast();
}
inline const ::generated::proto::module::Module& Library::ast() const {
  return ast_ != NULL ? *ast_ : *default_instance_->ast_;
}
inline ::generated::proto::module::Module* Library::mutable_ast() {
  set_has_ast();
  if (ast_ == NULL) ast_ = new ::generated::proto::module::Module;
  return ast_;
}
inline ::generated::proto::module::Module* Library::release_ast() {
  clear_has_ast();
  ::generated::proto::module::Module* temp = ast_;
  ast_ = NULL;
  return temp;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace library
}  // namespace proto
}  // namespace generated

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_library_2eproto__INCLUDED

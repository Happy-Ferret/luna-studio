// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: broker-api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "broker-api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace bus {

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_Method_descriptor_ = NULL;
const ::google::protobuf::Descriptor* ID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ID_reflection_ = NULL;
const ::google::protobuf::Descriptor* ID_Create_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ID_Create_reflection_ = NULL;
const ::google::protobuf::Descriptor* ID_Create_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ID_Create_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* ID_Create_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  ID_Create_Result_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_broker_2dapi_2eproto() {
  protobuf_AddDesc_broker_2dapi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "broker-api.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, method_),
  };
  Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request));
  Request_Method_descriptor_ = Request_descriptor_->enum_type(0);
  ID_descriptor_ = file->message_type(1);
  static const int ID_offsets_[1] = {
  };
  ID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ID_descriptor_,
      ID::default_instance_,
      ID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ID));
  ID_Create_descriptor_ = ID_descriptor_->nested_type(0);
  static const int ID_Create_offsets_[1] = {
  };
  ID_Create_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ID_Create_descriptor_,
      ID_Create::default_instance_,
      ID_Create_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID_Create, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID_Create, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ID_Create));
  ID_Create_Args_descriptor_ = ID_Create_descriptor_->nested_type(0);
  static const int ID_Create_Args_offsets_[1] = {
  };
  ID_Create_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ID_Create_Args_descriptor_,
      ID_Create_Args::default_instance_,
      ID_Create_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID_Create_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID_Create_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ID_Create_Args));
  ID_Create_Result_descriptor_ = ID_Create_descriptor_->nested_type(1);
  static const int ID_Create_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID_Create_Result, id_),
  };
  ID_Create_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      ID_Create_Result_descriptor_,
      ID_Create_Result::default_instance_,
      ID_Create_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID_Create_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(ID_Create_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(ID_Create_Result));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_broker_2dapi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ID_descriptor_, &ID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ID_Create_descriptor_, &ID_Create::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ID_Create_Args_descriptor_, &ID_Create_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    ID_Create_Result_descriptor_, &ID_Create_Result::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_broker_2dapi_2eproto() {
  delete Request::default_instance_;
  delete Request_reflection_;
  delete ID::default_instance_;
  delete ID_reflection_;
  delete ID_Create::default_instance_;
  delete ID_Create_reflection_;
  delete ID_Create_Args::default_instance_;
  delete ID_Create_Args_reflection_;
  delete ID_Create_Result::default_instance_;
  delete ID_Create_Result_reflection_;
}

void protobuf_AddDesc_broker_2dapi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::generated::proto::rpc::protobuf_AddDesc_rpc_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020broker-api.proto\022\023generated.proto.bus\032"
    "\trpc.proto\"c\n\007Request\0223\n\006method\030\001 \002(\0162#."
    "generated.proto.bus.Request.Method\"\030\n\006Me"
    "thod\022\016\n\tID_Create\020\351\007*\t\010\350\007\020\200\200\200\200\002\"\322\001\n\002ID\032\313"
    "\001\n\006Create\032W\n\004Args2O\n\003req\022\034.generated.pro"
    "to.bus.Request\030\351\007 \001(\0132#.generated.proto."
    "bus.ID.Create.Args\032h\n\006Result\022\n\n\002id\030\001 \002(\005"
    "2R\n\003rsp\022\035.generated.proto.rpc.Response\030\351"
    "\007 \001(\0132%.generated.proto.bus.ID.Create.Re"
    "sult", 364);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "broker-api.proto", &protobuf_RegisterTypes);
  Request::default_instance_ = new Request();
  ID::default_instance_ = new ID();
  ID_Create::default_instance_ = new ID_Create();
  ID_Create_Args::default_instance_ = new ID_Create_Args();
  ID_Create_Result::default_instance_ = new ID_Create_Result();
  Request::default_instance_->InitAsDefaultInstance();
  ID::default_instance_->InitAsDefaultInstance();
  ID_Create::default_instance_->InitAsDefaultInstance();
  ID_Create_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::bus::Request::default_instance(),
    1001, 11, false, false,
    &::generated::proto::bus::ID_Create_Args::default_instance());
  ID_Create_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::rpc::Response::default_instance(),
    1001, 11, false, false,
    &::generated::proto::bus::ID_Create_Result::default_instance());
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_broker_2dapi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_broker_2dapi_2eproto {
  StaticDescriptorInitializer_broker_2dapi_2eproto() {
    protobuf_AddDesc_broker_2dapi_2eproto();
  }
} static_descriptor_initializer_broker_2dapi_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Request_Method_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_Method_descriptor_;
}
bool Request_Method_IsValid(int value) {
  switch(value) {
    case 1001:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Request_Method Request::ID_Create;
const Request_Method Request::Method_MIN;
const Request_Method Request::Method_MAX;
const int Request::Method_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Request::kMethodFieldNumber;
#endif  // !_MSC_VER

Request::Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request::InitAsDefaultInstance() {
}

Request::Request(const Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  method_ = 1001;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_broker_2dapi_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New() const {
  return new Request;
}

void Request::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    method_ = 1001;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.bus.Request.Method method = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::generated::proto::bus::Request_Method_IsValid(value)) {
            set_method(static_cast< ::generated::proto::bus::Request_Method >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.bus.Request.Method method = 1;
  if (has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.bus.Request.Method method = 1;
  if (has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.bus.Request.Method method = 1;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_method()) {
      set_method(from.method());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Request::Swap(Request* other) {
  if (other != this) {
    std::swap(method_, other->method_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int ID_Create_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::bus::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::bus::ID_Create_Args >, 11, false >
  ID_Create_Args::req(kReqFieldNumber, ::generated::proto::bus::ID_Create_Args::default_instance());
ID_Create_Args::ID_Create_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ID_Create_Args::InitAsDefaultInstance() {
}

ID_Create_Args::ID_Create_Args(const ID_Create_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ID_Create_Args::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ID_Create_Args::~ID_Create_Args() {
  SharedDtor();
}

void ID_Create_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ID_Create_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ID_Create_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ID_Create_Args_descriptor_;
}

const ID_Create_Args& ID_Create_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_broker_2dapi_2eproto();
  return *default_instance_;
}

ID_Create_Args* ID_Create_Args::default_instance_ = NULL;

ID_Create_Args* ID_Create_Args::New() const {
  return new ID_Create_Args;
}

void ID_Create_Args::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ID_Create_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ID_Create_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ID_Create_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ID_Create_Args::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ID_Create_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ID_Create_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ID_Create_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ID_Create_Args::MergeFrom(const ID_Create_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ID_Create_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ID_Create_Args::CopyFrom(const ID_Create_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ID_Create_Args::IsInitialized() const {

  return true;
}

void ID_Create_Args::Swap(ID_Create_Args* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ID_Create_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ID_Create_Args_descriptor_;
  metadata.reflection = ID_Create_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int ID_Create_Result::kIdFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int ID_Create_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::rpc::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::bus::ID_Create_Result >, 11, false >
  ID_Create_Result::rsp(kRspFieldNumber, ::generated::proto::bus::ID_Create_Result::default_instance());
ID_Create_Result::ID_Create_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ID_Create_Result::InitAsDefaultInstance() {
}

ID_Create_Result::ID_Create_Result(const ID_Create_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ID_Create_Result::SharedCtor() {
  _cached_size_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ID_Create_Result::~ID_Create_Result() {
  SharedDtor();
}

void ID_Create_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ID_Create_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ID_Create_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ID_Create_Result_descriptor_;
}

const ID_Create_Result& ID_Create_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_broker_2dapi_2eproto();
  return *default_instance_;
}

ID_Create_Result* ID_Create_Result::default_instance_ = NULL;

ID_Create_Result* ID_Create_Result::New() const {
  return new ID_Create_Result;
}

void ID_Create_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ID_Create_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 id = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void ID_Create_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 id = 1;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ID_Create_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 id = 1;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ID_Create_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 id = 1;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ID_Create_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ID_Create_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ID_Create_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ID_Create_Result::MergeFrom(const ID_Create_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ID_Create_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ID_Create_Result::CopyFrom(const ID_Create_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ID_Create_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void ID_Create_Result::Swap(ID_Create_Result* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ID_Create_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ID_Create_Result_descriptor_;
  metadata.reflection = ID_Create_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

ID_Create::ID_Create()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ID_Create::InitAsDefaultInstance() {
}

ID_Create::ID_Create(const ID_Create& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ID_Create::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ID_Create::~ID_Create() {
  SharedDtor();
}

void ID_Create::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ID_Create::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ID_Create::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ID_Create_descriptor_;
}

const ID_Create& ID_Create::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_broker_2dapi_2eproto();
  return *default_instance_;
}

ID_Create* ID_Create::default_instance_ = NULL;

ID_Create* ID_Create::New() const {
  return new ID_Create;
}

void ID_Create::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ID_Create::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ID_Create::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ID_Create::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ID_Create::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ID_Create::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ID_Create* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ID_Create*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ID_Create::MergeFrom(const ID_Create& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ID_Create::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ID_Create::CopyFrom(const ID_Create& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ID_Create::IsInitialized() const {

  return true;
}

void ID_Create::Swap(ID_Create* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ID_Create::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ID_Create_descriptor_;
  metadata.reflection = ID_Create_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

ID::ID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void ID::InitAsDefaultInstance() {
}

ID::ID(const ID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void ID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

ID::~ID() {
  SharedDtor();
}

void ID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void ID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* ID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return ID_descriptor_;
}

const ID& ID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_broker_2dapi_2eproto();
  return *default_instance_;
}

ID* ID::default_instance_ = NULL;

ID* ID::New() const {
  return new ID;
}

void ID::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool ID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void ID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* ID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int ID::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void ID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const ID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const ID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void ID::MergeFrom(const ID& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void ID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void ID::CopyFrom(const ID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool ID::IsInitialized() const {

  return true;
}

void ID::Swap(ID* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata ID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = ID_descriptor_;
  metadata.reflection = ID_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace bus
}  // namespace proto
}  // namespace generated

// @@protoc_insertion_point(global_scope)

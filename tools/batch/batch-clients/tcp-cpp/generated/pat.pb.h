// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: pat.proto

#ifndef PROTOBUF_pat_2eproto__INCLUDED
#define PROTOBUF_pat_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "lit.pb.h"
#include "type.pb.h"
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace pat {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_pat_2eproto();
void protobuf_AssignDesc_pat_2eproto();
void protobuf_ShutdownFile_pat_2eproto();

class Pat;
class Var;
class Lit;
class Tuple;
class Con_;
class App;
class Typed;
class Wildcard;
class RecWildcard;

enum Pat_Cls {
  Pat_Cls_Var = 1,
  Pat_Cls_Lit = 2,
  Pat_Cls_Tuple = 3,
  Pat_Cls_Con_ = 4,
  Pat_Cls_App = 5,
  Pat_Cls_Typed = 6,
  Pat_Cls_Wildcard = 7,
  Pat_Cls_RecWildcard = 8
};
bool Pat_Cls_IsValid(int value);
const Pat_Cls Pat_Cls_Cls_MIN = Pat_Cls_Var;
const Pat_Cls Pat_Cls_Cls_MAX = Pat_Cls_RecWildcard;
const int Pat_Cls_Cls_ARRAYSIZE = Pat_Cls_Cls_MAX + 1;

const ::google::protobuf::EnumDescriptor* Pat_Cls_descriptor();
inline const ::std::string& Pat_Cls_Name(Pat_Cls value) {
  return ::google::protobuf::internal::NameOfEnum(
    Pat_Cls_descriptor(), value);
}
inline bool Pat_Cls_Parse(
    const ::std::string& name, Pat_Cls* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Pat_Cls>(
    Pat_Cls_descriptor(), name, value);
}
// ===================================================================

class Pat : public ::google::protobuf::Message {
 public:
  Pat();
  virtual ~Pat();

  Pat(const Pat& from);

  inline Pat& operator=(const Pat& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Pat& default_instance();

  void Swap(Pat* other);

  // implements Message ----------------------------------------------

  Pat* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Pat& from);
  void MergeFrom(const Pat& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Pat_Cls Cls;
  static const Cls Var = Pat_Cls_Var;
  static const Cls Lit = Pat_Cls_Lit;
  static const Cls Tuple = Pat_Cls_Tuple;
  static const Cls Con_ = Pat_Cls_Con_;
  static const Cls App = Pat_Cls_App;
  static const Cls Typed = Pat_Cls_Typed;
  static const Cls Wildcard = Pat_Cls_Wildcard;
  static const Cls RecWildcard = Pat_Cls_RecWildcard;
  static inline bool Cls_IsValid(int value) {
    return Pat_Cls_IsValid(value);
  }
  static const Cls Cls_MIN =
    Pat_Cls_Cls_MIN;
  static const Cls Cls_MAX =
    Pat_Cls_Cls_MAX;
  static const int Cls_ARRAYSIZE =
    Pat_Cls_Cls_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Cls_descriptor() {
    return Pat_Cls_descriptor();
  }
  static inline const ::std::string& Cls_Name(Cls value) {
    return Pat_Cls_Name(value);
  }
  static inline bool Cls_Parse(const ::std::string& name,
      Cls* value) {
    return Pat_Cls_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .generated.proto.pat.Pat.Cls cls = 1;
  inline bool has_cls() const;
  inline void clear_cls();
  static const int kClsFieldNumber = 1;
  inline ::generated::proto::pat::Pat_Cls cls() const;
  inline void set_cls(::generated::proto::pat::Pat_Cls value);

  // optional int32 id = 2;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Pat)
  // @@protoc_insertion_point(class_scope:generated.proto.pat.Pat)
 private:
  inline void set_has_cls();
  inline void clear_has_cls();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int cls_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static Pat* default_instance_;
};
// -------------------------------------------------------------------

class Var : public ::google::protobuf::Message {
 public:
  Var();
  virtual ~Var();

  Var(const Var& from);

  inline Var& operator=(const Var& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Var& default_instance();

  void Swap(Var* other);

  // implements Message ----------------------------------------------

  Var* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Var& from);
  void MergeFrom(const Var& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  static const int kExtFieldNumber = 100;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::pat::Pat,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::pat::Var >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.pat.Var)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static Var* default_instance_;
};
// -------------------------------------------------------------------

class Lit : public ::google::protobuf::Message {
 public:
  Lit();
  virtual ~Lit();

  Lit(const Lit& from);

  inline Lit& operator=(const Lit& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lit& default_instance();

  void Swap(Lit* other);

  // implements Message ----------------------------------------------

  Lit* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lit& from);
  void MergeFrom(const Lit& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .generated.proto.lit.Lit value = 2;
  inline bool has_value() const;
  inline void clear_value();
  static const int kValueFieldNumber = 2;
  inline const ::generated::proto::lit::Lit& value() const;
  inline ::generated::proto::lit::Lit* mutable_value();
  inline ::generated::proto::lit::Lit* release_value();
  inline void set_allocated_value(::generated::proto::lit::Lit* value);

  static const int kExtFieldNumber = 101;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::pat::Pat,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::pat::Lit >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.pat.Lit)
 private:
  inline void set_has_value();
  inline void clear_has_value();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::generated::proto::lit::Lit* value_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static Lit* default_instance_;
};
// -------------------------------------------------------------------

class Tuple : public ::google::protobuf::Message {
 public:
  Tuple();
  virtual ~Tuple();

  Tuple(const Tuple& from);

  inline Tuple& operator=(const Tuple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple& default_instance();

  void Swap(Tuple* other);

  // implements Message ----------------------------------------------

  Tuple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple& from);
  void MergeFrom(const Tuple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .generated.proto.pat.Pat items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::generated::proto::pat::Pat& items(int index) const;
  inline ::generated::proto::pat::Pat* mutable_items(int index);
  inline ::generated::proto::pat::Pat* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat >*
      mutable_items();

  static const int kExtFieldNumber = 102;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::pat::Pat,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::pat::Tuple >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.pat.Tuple)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static Tuple* default_instance_;
};
// -------------------------------------------------------------------

class Con_ : public ::google::protobuf::Message {
 public:
  Con_();
  virtual ~Con_();

  Con_(const Con_& from);

  inline Con_& operator=(const Con_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Con_& default_instance();

  void Swap(Con_* other);

  // implements Message ----------------------------------------------

  Con_* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Con_& from);
  void MergeFrom(const Con_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  static const int kExtFieldNumber = 103;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::pat::Pat,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::pat::Con_ >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.pat.Con_)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static Con_* default_instance_;
};
// -------------------------------------------------------------------

class App : public ::google::protobuf::Message {
 public:
  App();
  virtual ~App();

  App(const App& from);

  inline App& operator=(const App& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const App& default_instance();

  void Swap(App* other);

  // implements Message ----------------------------------------------

  App* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const App& from);
  void MergeFrom(const App& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .generated.proto.pat.Pat src = 2;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 2;
  inline const ::generated::proto::pat::Pat& src() const;
  inline ::generated::proto::pat::Pat* mutable_src();
  inline ::generated::proto::pat::Pat* release_src();
  inline void set_allocated_src(::generated::proto::pat::Pat* src);

  // repeated .generated.proto.pat.Pat args = 3;
  inline int args_size() const;
  inline void clear_args();
  static const int kArgsFieldNumber = 3;
  inline const ::generated::proto::pat::Pat& args(int index) const;
  inline ::generated::proto::pat::Pat* mutable_args(int index);
  inline ::generated::proto::pat::Pat* add_args();
  inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat >&
      args() const;
  inline ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat >*
      mutable_args();

  static const int kExtFieldNumber = 104;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::pat::Pat,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::pat::App >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.pat.App)
 private:
  inline void set_has_src();
  inline void clear_has_src();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::generated::proto::pat::Pat* src_;
  ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat > args_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static App* default_instance_;
};
// -------------------------------------------------------------------

class Typed : public ::google::protobuf::Message {
 public:
  Typed();
  virtual ~Typed();

  Typed(const Typed& from);

  inline Typed& operator=(const Typed& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Typed& default_instance();

  void Swap(Typed* other);

  // implements Message ----------------------------------------------

  Typed* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Typed& from);
  void MergeFrom(const Typed& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .generated.proto.pat.Pat pat = 2;
  inline bool has_pat() const;
  inline void clear_pat();
  static const int kPatFieldNumber = 2;
  inline const ::generated::proto::pat::Pat& pat() const;
  inline ::generated::proto::pat::Pat* mutable_pat();
  inline ::generated::proto::pat::Pat* release_pat();
  inline void set_allocated_pat(::generated::proto::pat::Pat* pat);

  // optional .generated.proto.type.Type cls = 3;
  inline bool has_cls() const;
  inline void clear_cls();
  static const int kClsFieldNumber = 3;
  inline const ::generated::proto::type::Type& cls() const;
  inline ::generated::proto::type::Type* mutable_cls();
  inline ::generated::proto::type::Type* release_cls();
  inline void set_allocated_cls(::generated::proto::type::Type* cls);

  static const int kExtFieldNumber = 105;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::pat::Pat,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::pat::Typed >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.pat.Typed)
 private:
  inline void set_has_pat();
  inline void clear_has_pat();
  inline void set_has_cls();
  inline void clear_has_cls();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::generated::proto::pat::Pat* pat_;
  ::generated::proto::type::Type* cls_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static Typed* default_instance_;
};
// -------------------------------------------------------------------

class Wildcard : public ::google::protobuf::Message {
 public:
  Wildcard();
  virtual ~Wildcard();

  Wildcard(const Wildcard& from);

  inline Wildcard& operator=(const Wildcard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Wildcard& default_instance();

  void Swap(Wildcard* other);

  // implements Message ----------------------------------------------

  Wildcard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Wildcard& from);
  void MergeFrom(const Wildcard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  static const int kExtFieldNumber = 106;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::pat::Pat,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::pat::Wildcard >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.pat.Wildcard)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static Wildcard* default_instance_;
};
// -------------------------------------------------------------------

class RecWildcard : public ::google::protobuf::Message {
 public:
  RecWildcard();
  virtual ~RecWildcard();

  RecWildcard(const RecWildcard& from);

  inline RecWildcard& operator=(const RecWildcard& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecWildcard& default_instance();

  void Swap(RecWildcard* other);

  // implements Message ----------------------------------------------

  RecWildcard* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecWildcard& from);
  void MergeFrom(const RecWildcard& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  static const int kExtFieldNumber = 107;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::pat::Pat,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::pat::RecWildcard >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.pat.RecWildcard)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_pat_2eproto();
  friend void protobuf_AssignDesc_pat_2eproto();
  friend void protobuf_ShutdownFile_pat_2eproto();

  void InitAsDefaultInstance();
  static RecWildcard* default_instance_;
};
// ===================================================================


// ===================================================================

// Pat

// required .generated.proto.pat.Pat.Cls cls = 1;
inline bool Pat::has_cls() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Pat::set_has_cls() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Pat::clear_has_cls() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Pat::clear_cls() {
  cls_ = 1;
  clear_has_cls();
}
inline ::generated::proto::pat::Pat_Cls Pat::cls() const {
  return static_cast< ::generated::proto::pat::Pat_Cls >(cls_);
}
inline void Pat::set_cls(::generated::proto::pat::Pat_Cls value) {
  assert(::generated::proto::pat::Pat_Cls_IsValid(value));
  set_has_cls();
  cls_ = value;
}

// optional int32 id = 2;
inline bool Pat::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Pat::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Pat::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Pat::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Pat::id() const {
  return id_;
}
inline void Pat::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Var

// optional string name = 2;
inline bool Var::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Var::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Var::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Var::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Var::name() const {
  return *name_;
}
inline void Var::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Var::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Var::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Var::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Var::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Var::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Lit

// optional .generated.proto.lit.Lit value = 2;
inline bool Lit::has_value() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Lit::set_has_value() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Lit::clear_has_value() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Lit::clear_value() {
  if (value_ != NULL) value_->::generated::proto::lit::Lit::Clear();
  clear_has_value();
}
inline const ::generated::proto::lit::Lit& Lit::value() const {
  return value_ != NULL ? *value_ : *default_instance_->value_;
}
inline ::generated::proto::lit::Lit* Lit::mutable_value() {
  set_has_value();
  if (value_ == NULL) value_ = new ::generated::proto::lit::Lit;
  return value_;
}
inline ::generated::proto::lit::Lit* Lit::release_value() {
  clear_has_value();
  ::generated::proto::lit::Lit* temp = value_;
  value_ = NULL;
  return temp;
}
inline void Lit::set_allocated_value(::generated::proto::lit::Lit* value) {
  delete value_;
  value_ = value;
  if (value) {
    set_has_value();
  } else {
    clear_has_value();
  }
}

// -------------------------------------------------------------------

// Tuple

// repeated .generated.proto.pat.Pat items = 2;
inline int Tuple::items_size() const {
  return items_.size();
}
inline void Tuple::clear_items() {
  items_.Clear();
}
inline const ::generated::proto::pat::Pat& Tuple::items(int index) const {
  return items_.Get(index);
}
inline ::generated::proto::pat::Pat* Tuple::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::generated::proto::pat::Pat* Tuple::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat >&
Tuple::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat >*
Tuple::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// Con_

// optional string name = 2;
inline bool Con_::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Con_::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Con_::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Con_::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Con_::name() const {
  return *name_;
}
inline void Con_::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Con_::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Con_::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Con_::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Con_::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Con_::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// App

// optional .generated.proto.pat.Pat src = 2;
inline bool App::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void App::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void App::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void App::clear_src() {
  if (src_ != NULL) src_->::generated::proto::pat::Pat::Clear();
  clear_has_src();
}
inline const ::generated::proto::pat::Pat& App::src() const {
  return src_ != NULL ? *src_ : *default_instance_->src_;
}
inline ::generated::proto::pat::Pat* App::mutable_src() {
  set_has_src();
  if (src_ == NULL) src_ = new ::generated::proto::pat::Pat;
  return src_;
}
inline ::generated::proto::pat::Pat* App::release_src() {
  clear_has_src();
  ::generated::proto::pat::Pat* temp = src_;
  src_ = NULL;
  return temp;
}
inline void App::set_allocated_src(::generated::proto::pat::Pat* src) {
  delete src_;
  src_ = src;
  if (src) {
    set_has_src();
  } else {
    clear_has_src();
  }
}

// repeated .generated.proto.pat.Pat args = 3;
inline int App::args_size() const {
  return args_.size();
}
inline void App::clear_args() {
  args_.Clear();
}
inline const ::generated::proto::pat::Pat& App::args(int index) const {
  return args_.Get(index);
}
inline ::generated::proto::pat::Pat* App::mutable_args(int index) {
  return args_.Mutable(index);
}
inline ::generated::proto::pat::Pat* App::add_args() {
  return args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat >&
App::args() const {
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::generated::proto::pat::Pat >*
App::mutable_args() {
  return &args_;
}

// -------------------------------------------------------------------

// Typed

// optional .generated.proto.pat.Pat pat = 2;
inline bool Typed::has_pat() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Typed::set_has_pat() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Typed::clear_has_pat() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Typed::clear_pat() {
  if (pat_ != NULL) pat_->::generated::proto::pat::Pat::Clear();
  clear_has_pat();
}
inline const ::generated::proto::pat::Pat& Typed::pat() const {
  return pat_ != NULL ? *pat_ : *default_instance_->pat_;
}
inline ::generated::proto::pat::Pat* Typed::mutable_pat() {
  set_has_pat();
  if (pat_ == NULL) pat_ = new ::generated::proto::pat::Pat;
  return pat_;
}
inline ::generated::proto::pat::Pat* Typed::release_pat() {
  clear_has_pat();
  ::generated::proto::pat::Pat* temp = pat_;
  pat_ = NULL;
  return temp;
}
inline void Typed::set_allocated_pat(::generated::proto::pat::Pat* pat) {
  delete pat_;
  pat_ = pat;
  if (pat) {
    set_has_pat();
  } else {
    clear_has_pat();
  }
}

// optional .generated.proto.type.Type cls = 3;
inline bool Typed::has_cls() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Typed::set_has_cls() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Typed::clear_has_cls() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Typed::clear_cls() {
  if (cls_ != NULL) cls_->::generated::proto::type::Type::Clear();
  clear_has_cls();
}
inline const ::generated::proto::type::Type& Typed::cls() const {
  return cls_ != NULL ? *cls_ : *default_instance_->cls_;
}
inline ::generated::proto::type::Type* Typed::mutable_cls() {
  set_has_cls();
  if (cls_ == NULL) cls_ = new ::generated::proto::type::Type;
  return cls_;
}
inline ::generated::proto::type::Type* Typed::release_cls() {
  clear_has_cls();
  ::generated::proto::type::Type* temp = cls_;
  cls_ = NULL;
  return temp;
}
inline void Typed::set_allocated_cls(::generated::proto::type::Type* cls) {
  delete cls_;
  cls_ = cls;
  if (cls) {
    set_has_cls();
  } else {
    clear_has_cls();
  }
}

// -------------------------------------------------------------------

// Wildcard

// -------------------------------------------------------------------

// RecWildcard


// @@protoc_insertion_point(namespace_scope)

}  // namespace pat
}  // namespace proto
}  // namespace generated

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::generated::proto::pat::Pat_Cls>() {
  return ::generated::proto::pat::Pat_Cls_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_pat_2eproto__INCLUDED

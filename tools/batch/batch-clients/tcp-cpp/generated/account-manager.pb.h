// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: account-manager.proto

#ifndef PROTOBUF_account_2dmanager_2eproto__INCLUDED
#define PROTOBUF_account_2dmanager_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
#include "rpc.pb.h"
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace accountManager {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_account_2dmanager_2eproto();
void protobuf_AssignDesc_account_2dmanager_2eproto();
void protobuf_ShutdownFile_account_2dmanager_2eproto();

class Request;
class User;
class User_Register;
class User_Register_Args;
class User_Register_Result;
class User_Login;
class User_Login_Args;
class User_Login_Result;
class User_Logout;
class User_Logout_Args;
class User_Logout_Result;

enum Request_Method {
  Request_Method_User_Register = 2001,
  Request_Method_User_Login = 2002,
  Request_Method_User_Logout = 2003
};
bool Request_Method_IsValid(int value);
const Request_Method Request_Method_Method_MIN = Request_Method_User_Register;
const Request_Method Request_Method_Method_MAX = Request_Method_User_Logout;
const int Request_Method_Method_ARRAYSIZE = Request_Method_Method_MAX + 1;

const ::google::protobuf::EnumDescriptor* Request_Method_descriptor();
inline const ::std::string& Request_Method_Name(Request_Method value) {
  return ::google::protobuf::internal::NameOfEnum(
    Request_Method_descriptor(), value);
}
inline bool Request_Method_Parse(
    const ::std::string& name, Request_Method* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Request_Method>(
    Request_Method_descriptor(), name, value);
}
// ===================================================================

class Request : public ::google::protobuf::Message {
 public:
  Request();
  virtual ~Request();

  Request(const Request& from);

  inline Request& operator=(const Request& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Request& default_instance();

  void Swap(Request* other);

  // implements Message ----------------------------------------------

  Request* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Request& from);
  void MergeFrom(const Request& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Request_Method Method;
  static const Method User_Register = Request_Method_User_Register;
  static const Method User_Login = Request_Method_User_Login;
  static const Method User_Logout = Request_Method_User_Logout;
  static inline bool Method_IsValid(int value) {
    return Request_Method_IsValid(value);
  }
  static const Method Method_MIN =
    Request_Method_Method_MIN;
  static const Method Method_MAX =
    Request_Method_Method_MAX;
  static const int Method_ARRAYSIZE =
    Request_Method_Method_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Method_descriptor() {
    return Request_Method_descriptor();
  }
  static inline const ::std::string& Method_Name(Method value) {
    return Request_Method_Name(value);
  }
  static inline bool Method_Parse(const ::std::string& name,
      Method* value) {
    return Request_Method_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .generated.proto.accountManager.Request.Method method = 1;
  inline bool has_method() const;
  inline void clear_method();
  static const int kMethodFieldNumber = 1;
  inline ::generated::proto::accountManager::Request_Method method() const;
  inline void set_method(::generated::proto::accountManager::Request_Method value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Request)
  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.Request)
 private:
  inline void set_has_method();
  inline void clear_has_method();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int method_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static Request* default_instance_;
};
// -------------------------------------------------------------------

class User_Register_Args : public ::google::protobuf::Message {
 public:
  User_Register_Args();
  virtual ~User_Register_Args();

  User_Register_Args(const User_Register_Args& from);

  inline User_Register_Args& operator=(const User_Register_Args& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Register_Args& default_instance();

  void Swap(User_Register_Args* other);

  // implements Message ----------------------------------------------

  User_Register_Args* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Register_Args& from);
  void MergeFrom(const User_Register_Args& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userName = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  static const int kReqFieldNumber = 2001;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::accountManager::Request,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::accountManager::User_Register_Args >, 11, false >
    req;
  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Register.Args)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* username_;
  ::std::string* password_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Register_Args* default_instance_;
};
// -------------------------------------------------------------------

class User_Register_Result : public ::google::protobuf::Message {
 public:
  User_Register_Result();
  virtual ~User_Register_Result();

  User_Register_Result(const User_Register_Result& from);

  inline User_Register_Result& operator=(const User_Register_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Register_Result& default_instance();

  void Swap(User_Register_Result* other);

  // implements Message ----------------------------------------------

  User_Register_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Register_Result& from);
  void MergeFrom(const User_Register_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  static const int kRspFieldNumber = 2001;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::rpc::Response,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::accountManager::User_Register_Result >, 11, false >
    rsp;
  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Register.Result)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Register_Result* default_instance_;
};
// -------------------------------------------------------------------

class User_Register : public ::google::protobuf::Message {
 public:
  User_Register();
  virtual ~User_Register();

  User_Register(const User_Register& from);

  inline User_Register& operator=(const User_Register& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Register& default_instance();

  void Swap(User_Register* other);

  // implements Message ----------------------------------------------

  User_Register* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Register& from);
  void MergeFrom(const User_Register& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef User_Register_Args Args;
  typedef User_Register_Result Result;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Register)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Register* default_instance_;
};
// -------------------------------------------------------------------

class User_Login_Args : public ::google::protobuf::Message {
 public:
  User_Login_Args();
  virtual ~User_Login_Args();

  User_Login_Args(const User_Login_Args& from);

  inline User_Login_Args& operator=(const User_Login_Args& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Login_Args& default_instance();

  void Swap(User_Login_Args* other);

  // implements Message ----------------------------------------------

  User_Login_Args* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Login_Args& from);
  void MergeFrom(const User_Login_Args& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userName = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  static const int kReqFieldNumber = 2002;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::accountManager::Request,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::accountManager::User_Login_Args >, 11, false >
    req;
  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Login.Args)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* username_;
  ::std::string* password_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Login_Args* default_instance_;
};
// -------------------------------------------------------------------

class User_Login_Result : public ::google::protobuf::Message {
 public:
  User_Login_Result();
  virtual ~User_Login_Result();

  User_Login_Result(const User_Login_Result& from);

  inline User_Login_Result& operator=(const User_Login_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Login_Result& default_instance();

  void Swap(User_Login_Result* other);

  // implements Message ----------------------------------------------

  User_Login_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Login_Result& from);
  void MergeFrom(const User_Login_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string batchAddress = 1;
  inline bool has_batchaddress() const;
  inline void clear_batchaddress();
  static const int kBatchAddressFieldNumber = 1;
  inline const ::std::string& batchaddress() const;
  inline void set_batchaddress(const ::std::string& value);
  inline void set_batchaddress(const char* value);
  inline void set_batchaddress(const char* value, size_t size);
  inline ::std::string* mutable_batchaddress();
  inline ::std::string* release_batchaddress();
  inline void set_allocated_batchaddress(::std::string* batchaddress);

  static const int kRspFieldNumber = 2002;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::rpc::Response,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::accountManager::User_Login_Result >, 11, false >
    rsp;
  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Login.Result)
 private:
  inline void set_has_batchaddress();
  inline void clear_has_batchaddress();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* batchaddress_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Login_Result* default_instance_;
};
// -------------------------------------------------------------------

class User_Login : public ::google::protobuf::Message {
 public:
  User_Login();
  virtual ~User_Login();

  User_Login(const User_Login& from);

  inline User_Login& operator=(const User_Login& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Login& default_instance();

  void Swap(User_Login* other);

  // implements Message ----------------------------------------------

  User_Login* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Login& from);
  void MergeFrom(const User_Login& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef User_Login_Args Args;
  typedef User_Login_Result Result;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Login)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Login* default_instance_;
};
// -------------------------------------------------------------------

class User_Logout_Args : public ::google::protobuf::Message {
 public:
  User_Logout_Args();
  virtual ~User_Logout_Args();

  User_Logout_Args(const User_Logout_Args& from);

  inline User_Logout_Args& operator=(const User_Logout_Args& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Logout_Args& default_instance();

  void Swap(User_Logout_Args* other);

  // implements Message ----------------------------------------------

  User_Logout_Args* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Logout_Args& from);
  void MergeFrom(const User_Logout_Args& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required string userName = 1;
  inline bool has_username() const;
  inline void clear_username();
  static const int kUserNameFieldNumber = 1;
  inline const ::std::string& username() const;
  inline void set_username(const ::std::string& value);
  inline void set_username(const char* value);
  inline void set_username(const char* value, size_t size);
  inline ::std::string* mutable_username();
  inline ::std::string* release_username();
  inline void set_allocated_username(::std::string* username);

  // required string password = 2;
  inline bool has_password() const;
  inline void clear_password();
  static const int kPasswordFieldNumber = 2;
  inline const ::std::string& password() const;
  inline void set_password(const ::std::string& value);
  inline void set_password(const char* value);
  inline void set_password(const char* value, size_t size);
  inline ::std::string* mutable_password();
  inline ::std::string* release_password();
  inline void set_allocated_password(::std::string* password);

  static const int kReqFieldNumber = 2003;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::accountManager::Request,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::accountManager::User_Logout_Args >, 11, false >
    req;
  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Logout.Args)
 private:
  inline void set_has_username();
  inline void clear_has_username();
  inline void set_has_password();
  inline void clear_has_password();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* username_;
  ::std::string* password_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Logout_Args* default_instance_;
};
// -------------------------------------------------------------------

class User_Logout_Result : public ::google::protobuf::Message {
 public:
  User_Logout_Result();
  virtual ~User_Logout_Result();

  User_Logout_Result(const User_Logout_Result& from);

  inline User_Logout_Result& operator=(const User_Logout_Result& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Logout_Result& default_instance();

  void Swap(User_Logout_Result* other);

  // implements Message ----------------------------------------------

  User_Logout_Result* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Logout_Result& from);
  void MergeFrom(const User_Logout_Result& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  static const int kRspFieldNumber = 2003;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::rpc::Response,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::accountManager::User_Logout_Result >, 11, false >
    rsp;
  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Logout.Result)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Logout_Result* default_instance_;
};
// -------------------------------------------------------------------

class User_Logout : public ::google::protobuf::Message {
 public:
  User_Logout();
  virtual ~User_Logout();

  User_Logout(const User_Logout& from);

  inline User_Logout& operator=(const User_Logout& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User_Logout& default_instance();

  void Swap(User_Logout* other);

  // implements Message ----------------------------------------------

  User_Logout* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User_Logout& from);
  void MergeFrom(const User_Logout& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef User_Logout_Args Args;
  typedef User_Logout_Result Result;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User.Logout)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User_Logout* default_instance_;
};
// -------------------------------------------------------------------

class User : public ::google::protobuf::Message {
 public:
  User();
  virtual ~User();

  User(const User& from);

  inline User& operator=(const User& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const User& default_instance();

  void Swap(User* other);

  // implements Message ----------------------------------------------

  User* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const User& from);
  void MergeFrom(const User& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef User_Register Register;
  typedef User_Login Login;
  typedef User_Logout Logout;

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:generated.proto.accountManager.User)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_account_2dmanager_2eproto();
  friend void protobuf_AssignDesc_account_2dmanager_2eproto();
  friend void protobuf_ShutdownFile_account_2dmanager_2eproto();

  void InitAsDefaultInstance();
  static User* default_instance_;
};
// ===================================================================


// ===================================================================

// Request

// required .generated.proto.accountManager.Request.Method method = 1;
inline bool Request::has_method() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Request::set_has_method() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Request::clear_has_method() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Request::clear_method() {
  method_ = 2001;
  clear_has_method();
}
inline ::generated::proto::accountManager::Request_Method Request::method() const {
  return static_cast< ::generated::proto::accountManager::Request_Method >(method_);
}
inline void Request::set_method(::generated::proto::accountManager::Request_Method value) {
  assert(::generated::proto::accountManager::Request_Method_IsValid(value));
  set_has_method();
  method_ = value;
}

// -------------------------------------------------------------------

// User_Register_Args

// required string userName = 1;
inline bool User_Register_Args::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User_Register_Args::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User_Register_Args::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User_Register_Args::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& User_Register_Args::username() const {
  return *username_;
}
inline void User_Register_Args::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void User_Register_Args::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void User_Register_Args::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* User_Register_Args::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* User_Register_Args::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void User_Register_Args::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string password = 2;
inline bool User_Register_Args::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User_Register_Args::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User_Register_Args::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User_Register_Args::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& User_Register_Args::password() const {
  return *password_;
}
inline void User_Register_Args::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void User_Register_Args::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void User_Register_Args::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* User_Register_Args::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* User_Register_Args::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void User_Register_Args::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// User_Register_Result

// -------------------------------------------------------------------

// User_Register

// -------------------------------------------------------------------

// User_Login_Args

// required string userName = 1;
inline bool User_Login_Args::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User_Login_Args::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User_Login_Args::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User_Login_Args::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& User_Login_Args::username() const {
  return *username_;
}
inline void User_Login_Args::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void User_Login_Args::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void User_Login_Args::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* User_Login_Args::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* User_Login_Args::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void User_Login_Args::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string password = 2;
inline bool User_Login_Args::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User_Login_Args::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User_Login_Args::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User_Login_Args::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& User_Login_Args::password() const {
  return *password_;
}
inline void User_Login_Args::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void User_Login_Args::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void User_Login_Args::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* User_Login_Args::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* User_Login_Args::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void User_Login_Args::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// User_Login_Result

// required string batchAddress = 1;
inline bool User_Login_Result::has_batchaddress() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User_Login_Result::set_has_batchaddress() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User_Login_Result::clear_has_batchaddress() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User_Login_Result::clear_batchaddress() {
  if (batchaddress_ != &::google::protobuf::internal::kEmptyString) {
    batchaddress_->clear();
  }
  clear_has_batchaddress();
}
inline const ::std::string& User_Login_Result::batchaddress() const {
  return *batchaddress_;
}
inline void User_Login_Result::set_batchaddress(const ::std::string& value) {
  set_has_batchaddress();
  if (batchaddress_ == &::google::protobuf::internal::kEmptyString) {
    batchaddress_ = new ::std::string;
  }
  batchaddress_->assign(value);
}
inline void User_Login_Result::set_batchaddress(const char* value) {
  set_has_batchaddress();
  if (batchaddress_ == &::google::protobuf::internal::kEmptyString) {
    batchaddress_ = new ::std::string;
  }
  batchaddress_->assign(value);
}
inline void User_Login_Result::set_batchaddress(const char* value, size_t size) {
  set_has_batchaddress();
  if (batchaddress_ == &::google::protobuf::internal::kEmptyString) {
    batchaddress_ = new ::std::string;
  }
  batchaddress_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* User_Login_Result::mutable_batchaddress() {
  set_has_batchaddress();
  if (batchaddress_ == &::google::protobuf::internal::kEmptyString) {
    batchaddress_ = new ::std::string;
  }
  return batchaddress_;
}
inline ::std::string* User_Login_Result::release_batchaddress() {
  clear_has_batchaddress();
  if (batchaddress_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = batchaddress_;
    batchaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void User_Login_Result::set_allocated_batchaddress(::std::string* batchaddress) {
  if (batchaddress_ != &::google::protobuf::internal::kEmptyString) {
    delete batchaddress_;
  }
  if (batchaddress) {
    set_has_batchaddress();
    batchaddress_ = batchaddress;
  } else {
    clear_has_batchaddress();
    batchaddress_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// User_Login

// -------------------------------------------------------------------

// User_Logout_Args

// required string userName = 1;
inline bool User_Logout_Args::has_username() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void User_Logout_Args::set_has_username() {
  _has_bits_[0] |= 0x00000001u;
}
inline void User_Logout_Args::clear_has_username() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void User_Logout_Args::clear_username() {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    username_->clear();
  }
  clear_has_username();
}
inline const ::std::string& User_Logout_Args::username() const {
  return *username_;
}
inline void User_Logout_Args::set_username(const ::std::string& value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void User_Logout_Args::set_username(const char* value) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(value);
}
inline void User_Logout_Args::set_username(const char* value, size_t size) {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  username_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* User_Logout_Args::mutable_username() {
  set_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    username_ = new ::std::string;
  }
  return username_;
}
inline ::std::string* User_Logout_Args::release_username() {
  clear_has_username();
  if (username_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = username_;
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void User_Logout_Args::set_allocated_username(::std::string* username) {
  if (username_ != &::google::protobuf::internal::kEmptyString) {
    delete username_;
  }
  if (username) {
    set_has_username();
    username_ = username;
  } else {
    clear_has_username();
    username_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// required string password = 2;
inline bool User_Logout_Args::has_password() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void User_Logout_Args::set_has_password() {
  _has_bits_[0] |= 0x00000002u;
}
inline void User_Logout_Args::clear_has_password() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void User_Logout_Args::clear_password() {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    password_->clear();
  }
  clear_has_password();
}
inline const ::std::string& User_Logout_Args::password() const {
  return *password_;
}
inline void User_Logout_Args::set_password(const ::std::string& value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void User_Logout_Args::set_password(const char* value) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(value);
}
inline void User_Logout_Args::set_password(const char* value, size_t size) {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  password_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* User_Logout_Args::mutable_password() {
  set_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    password_ = new ::std::string;
  }
  return password_;
}
inline ::std::string* User_Logout_Args::release_password() {
  clear_has_password();
  if (password_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = password_;
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void User_Logout_Args::set_allocated_password(::std::string* password) {
  if (password_ != &::google::protobuf::internal::kEmptyString) {
    delete password_;
  }
  if (password) {
    set_has_password();
    password_ = password;
  } else {
    clear_has_password();
    password_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// User_Logout_Result

// -------------------------------------------------------------------

// User_Logout

// -------------------------------------------------------------------

// User


// @@protoc_insertion_point(namespace_scope)

}  // namespace accountManager
}  // namespace proto
}  // namespace generated

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::generated::proto::accountManager::Request_Method>() {
  return ::generated::proto::accountManager::Request_Method_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_account_2dmanager_2eproto__INCLUDED

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: module.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "module.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace module {

namespace {

const ::google::protobuf::Descriptor* Module_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Module_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_module_2eproto() {
  protobuf_AddDesc_module_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "module.proto");
  GOOGLE_CHECK(file != NULL);
  Module_descriptor_ = file->message_type(0);
  static const int Module_offsets_[9] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, imports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, classes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, typealiases_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, typedefs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, fields_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, methods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, modules_),
  };
  Module_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Module_descriptor_,
      Module::default_instance_,
      Module_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Module, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Module));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_module_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Module_descriptor_, &Module::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_module_2eproto() {
  delete Module::default_instance_;
  delete Module_reflection_;
}

void protobuf_AddDesc_module_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::generated::proto::expr::protobuf_AddDesc_expr_2eproto();
  ::generated::proto::type::protobuf_AddDesc_type_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\014module.proto\022\026generated.proto.module\032\n"
    "expr.proto\032\ntype.proto\"\205\003\n\006Module\022\016\n\002id\030"
    "\001 \001(\005:\002-1\022(\n\004type\030\002 \001(\0132\032.generated.prot"
    "o.type.Type\022+\n\007imports\030\003 \003(\0132\032.generated"
    ".proto.expr.Expr\022+\n\007classes\030\004 \003(\0132\032.gene"
    "rated.proto.expr.Expr\022/\n\013typeAliases\030\005 \003"
    "(\0132\032.generated.proto.expr.Expr\022,\n\010typeDE"
    "fs\030\006 \003(\0132\032.generated.proto.expr.Expr\022*\n\006"
    "fields\030\007 \003(\0132\032.generated.proto.expr.Expr"
    "\022+\n\007methods\030\010 \003(\0132\032.generated.proto.expr"
    ".Expr\022/\n\007modules\030\t \003(\0132\036.generated.proto"
    ".module.Module", 454);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "module.proto", &protobuf_RegisterTypes);
  Module::default_instance_ = new Module();
  Module::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_module_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_module_2eproto {
  StaticDescriptorInitializer_module_2eproto() {
    protobuf_AddDesc_module_2eproto();
  }
} static_descriptor_initializer_module_2eproto_;

// ===================================================================

#ifndef _MSC_VER
const int Module::kIdFieldNumber;
const int Module::kTypeFieldNumber;
const int Module::kImportsFieldNumber;
const int Module::kClassesFieldNumber;
const int Module::kTypeAliasesFieldNumber;
const int Module::kTypeDEfsFieldNumber;
const int Module::kFieldsFieldNumber;
const int Module::kMethodsFieldNumber;
const int Module::kModulesFieldNumber;
#endif  // !_MSC_VER

Module::Module()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Module::InitAsDefaultInstance() {
  type_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
}

Module::Module(const Module& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Module::SharedCtor() {
  _cached_size_ = 0;
  id_ = -1;
  type_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Module::~Module() {
  SharedDtor();
}

void Module::SharedDtor() {
  if (this != default_instance_) {
    delete type_;
  }
}

void Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Module::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Module_descriptor_;
}

const Module& Module::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_module_2eproto();
  return *default_instance_;
}

Module* Module::default_instance_ = NULL;

Module* Module::New() const {
  return new Module;
}

void Module::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    id_ = -1;
    if (has_type()) {
      if (type_ != NULL) type_->::generated::proto::type::Type::Clear();
    }
  }
  imports_.Clear();
  classes_.Clear();
  typealiases_.Clear();
  typedefs_.Clear();
  fields_.Clear();
  methods_.Clear();
  modules_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 id = 1 [default = -1];
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_type;
        break;
      }

      // optional .generated.proto.type.Type type = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_type:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_imports;
        break;
      }

      // repeated .generated.proto.expr.Expr imports = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imports:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_imports()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_imports;
        if (input->ExpectTag(34)) goto parse_classes;
        break;
      }

      // repeated .generated.proto.expr.Expr classes = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_classes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_classes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_classes;
        if (input->ExpectTag(42)) goto parse_typeAliases;
        break;
      }

      // repeated .generated.proto.expr.Expr typeAliases = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_typeAliases:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_typealiases()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(42)) goto parse_typeAliases;
        if (input->ExpectTag(50)) goto parse_typeDEfs;
        break;
      }

      // repeated .generated.proto.expr.Expr typeDEfs = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_typeDEfs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_typedefs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(50)) goto parse_typeDEfs;
        if (input->ExpectTag(58)) goto parse_fields;
        break;
      }

      // repeated .generated.proto.expr.Expr fields = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fields()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(58)) goto parse_fields;
        if (input->ExpectTag(66)) goto parse_methods;
        break;
      }

      // repeated .generated.proto.expr.Expr methods = 8;
      case 8: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_methods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_methods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(66)) goto parse_methods;
        if (input->ExpectTag(74)) goto parse_modules;
        break;
      }

      // repeated .generated.proto.module.Module modules = 9;
      case 9: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_modules:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_modules()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(74)) goto parse_modules;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 id = 1 [default = -1];
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->id(), output);
  }

  // optional .generated.proto.type.Type type = 2;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->type(), output);
  }

  // repeated .generated.proto.expr.Expr imports = 3;
  for (int i = 0; i < this->imports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->imports(i), output);
  }

  // repeated .generated.proto.expr.Expr classes = 4;
  for (int i = 0; i < this->classes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->classes(i), output);
  }

  // repeated .generated.proto.expr.Expr typeAliases = 5;
  for (int i = 0; i < this->typealiases_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->typealiases(i), output);
  }

  // repeated .generated.proto.expr.Expr typeDEfs = 6;
  for (int i = 0; i < this->typedefs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      6, this->typedefs(i), output);
  }

  // repeated .generated.proto.expr.Expr fields = 7;
  for (int i = 0; i < this->fields_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      7, this->fields(i), output);
  }

  // repeated .generated.proto.expr.Expr methods = 8;
  for (int i = 0; i < this->methods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      8, this->methods(i), output);
  }

  // repeated .generated.proto.module.Module modules = 9;
  for (int i = 0; i < this->modules_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      9, this->modules(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Module::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 id = 1 [default = -1];
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->id(), target);
  }

  // optional .generated.proto.type.Type type = 2;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->type(), target);
  }

  // repeated .generated.proto.expr.Expr imports = 3;
  for (int i = 0; i < this->imports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->imports(i), target);
  }

  // repeated .generated.proto.expr.Expr classes = 4;
  for (int i = 0; i < this->classes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->classes(i), target);
  }

  // repeated .generated.proto.expr.Expr typeAliases = 5;
  for (int i = 0; i < this->typealiases_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->typealiases(i), target);
  }

  // repeated .generated.proto.expr.Expr typeDEfs = 6;
  for (int i = 0; i < this->typedefs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        6, this->typedefs(i), target);
  }

  // repeated .generated.proto.expr.Expr fields = 7;
  for (int i = 0; i < this->fields_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        7, this->fields(i), target);
  }

  // repeated .generated.proto.expr.Expr methods = 8;
  for (int i = 0; i < this->methods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        8, this->methods(i), target);
  }

  // repeated .generated.proto.module.Module modules = 9;
  for (int i = 0; i < this->modules_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        9, this->modules(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Module::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 id = 1 [default = -1];
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

    // optional .generated.proto.type.Type type = 2;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type());
    }

  }
  // repeated .generated.proto.expr.Expr imports = 3;
  total_size += 1 * this->imports_size();
  for (int i = 0; i < this->imports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->imports(i));
  }

  // repeated .generated.proto.expr.Expr classes = 4;
  total_size += 1 * this->classes_size();
  for (int i = 0; i < this->classes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->classes(i));
  }

  // repeated .generated.proto.expr.Expr typeAliases = 5;
  total_size += 1 * this->typealiases_size();
  for (int i = 0; i < this->typealiases_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->typealiases(i));
  }

  // repeated .generated.proto.expr.Expr typeDEfs = 6;
  total_size += 1 * this->typedefs_size();
  for (int i = 0; i < this->typedefs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->typedefs(i));
  }

  // repeated .generated.proto.expr.Expr fields = 7;
  total_size += 1 * this->fields_size();
  for (int i = 0; i < this->fields_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fields(i));
  }

  // repeated .generated.proto.expr.Expr methods = 8;
  total_size += 1 * this->methods_size();
  for (int i = 0; i < this->methods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->methods(i));
  }

  // repeated .generated.proto.module.Module modules = 9;
  total_size += 1 * this->modules_size();
  for (int i = 0; i < this->modules_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->modules(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Module::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Module* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Module*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Module::MergeFrom(const Module& from) {
  GOOGLE_CHECK_NE(&from, this);
  imports_.MergeFrom(from.imports_);
  classes_.MergeFrom(from.classes_);
  typealiases_.MergeFrom(from.typealiases_);
  typedefs_.MergeFrom(from.typedefs_);
  fields_.MergeFrom(from.fields_);
  methods_.MergeFrom(from.methods_);
  modules_.MergeFrom(from.modules_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_id()) {
      set_id(from.id());
    }
    if (from.has_type()) {
      mutable_type()->::generated::proto::type::Type::MergeFrom(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Module::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Module::CopyFrom(const Module& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Module::IsInitialized() const {

  if (has_type()) {
    if (!this->type().IsInitialized()) return false;
  }
  for (int i = 0; i < imports_size(); i++) {
    if (!this->imports(i).IsInitialized()) return false;
  }
  for (int i = 0; i < classes_size(); i++) {
    if (!this->classes(i).IsInitialized()) return false;
  }
  for (int i = 0; i < typealiases_size(); i++) {
    if (!this->typealiases(i).IsInitialized()) return false;
  }
  for (int i = 0; i < typedefs_size(); i++) {
    if (!this->typedefs(i).IsInitialized()) return false;
  }
  for (int i = 0; i < fields_size(); i++) {
    if (!this->fields(i).IsInitialized()) return false;
  }
  for (int i = 0; i < methods_size(); i++) {
    if (!this->methods(i).IsInitialized()) return false;
  }
  for (int i = 0; i < modules_size(); i++) {
    if (!this->modules(i).IsInitialized()) return false;
  }
  return true;
}

void Module::Swap(Module* other) {
  if (other != this) {
    std::swap(id_, other->id_);
    std::swap(type_, other->type_);
    imports_.Swap(&other->imports_);
    classes_.Swap(&other->classes_);
    typealiases_.Swap(&other->typealiases_);
    typedefs_.Swap(&other->typedefs_);
    fields_.Swap(&other->fields_);
    methods_.Swap(&other->methods_);
    modules_.Swap(&other->modules_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Module::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Module_descriptor_;
  metadata.reflection = Module_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace module
}  // namespace proto
}  // namespace generated

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: project-manager.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "project-manager.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace projectManager {

namespace {

const ::google::protobuf::Descriptor* Project_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_List_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_List_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_List_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_List_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_List_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_List_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Lookup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Lookup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Lookup_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Lookup_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Lookup_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Lookup_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Create_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Create_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Create_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Create_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Create_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Create_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Open_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Open_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Open_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Open_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Open_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Open_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Modify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Modify_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Modify_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Modify_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Modify_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Modify_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Close_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Close_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Close_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Close_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Close_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Close_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Store_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Store_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Store_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Store_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Store_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Store_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_List_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_List_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_List_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_List_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_List_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_List_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Lookup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Lookup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Lookup_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Lookup_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Lookup_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Lookup_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Create_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Create_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Create_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Create_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Create_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Create_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Load_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Load_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Load_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Load_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Load_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Load_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Unload_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Unload_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Unload_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Unload_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Unload_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Unload_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Store_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Store_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Store_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Store_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_Store_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_Store_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Get_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Get_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Get_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Get_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Get_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Get_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Add_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Add_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Add_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Add_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Add_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Add_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Cls_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Cls_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Cls_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Cls_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Cls_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Cls_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Imports_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Imports_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Imports_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Imports_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Imports_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Imports_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Fields_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Fields_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Fields_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Fields_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Fields_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Module_Modify_Fields_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Add_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Add_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Add_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Add_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Add_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Add_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cls_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Cls_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cls_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Cls_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cls_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Cls_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cons_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Cons_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cons_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Cons_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cons_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Cons_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Classes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Classes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Classes_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Classes_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Classes_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Classes_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Methods_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Methods_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Methods_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Methods_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Methods_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Data_Modify_Methods_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Add_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Add_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Add_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Add_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Add_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Add_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Name_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Name_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Name_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Name_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Name_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Name_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Path_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Path_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Path_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Path_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Path_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Path_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Inputs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Inputs_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Inputs_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Inputs_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Inputs_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Inputs_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Output_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Output_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Output_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Output_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Output_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Modify_Output_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Get_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Get_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Get_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Get_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Get_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Get_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Lookup_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Lookup_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Lookup_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Lookup_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Lookup_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Lookup_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Add_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Add_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Add_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Add_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Add_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Add_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Modify_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Modify_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Modify_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Modify_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Modify_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Modify_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_ModifyInPlace_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Remove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Remove_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Remove_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Remove_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Remove_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Remove_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Get_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Get_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Get_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Get_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Get_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Get_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Set_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Set_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Set_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Set_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Set_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Set_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Remove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Remove_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Remove_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Remove_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Remove_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Default_Remove_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Properties_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Get_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Properties_Get_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Get_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Properties_Get_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Get_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Properties_Get_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Set_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Properties_Set_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Set_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Properties_Set_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Set_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Node_Properties_Set_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Connect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Connect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Connect_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Connect_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Connect_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Connect_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Disconnect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Disconnect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Disconnect_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Disconnect_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Disconnect_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Function_Graph_Disconnect_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Remove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Remove_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Remove_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Remove_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Remove_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Remove_Update_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Resolve_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Resolve_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Resolve_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Resolve_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Resolve_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Resolve_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Properties_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Get_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Properties_Get_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Get_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Properties_Get_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Get_Status_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Properties_Get_Status_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Set_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Properties_Set_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Set_Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Properties_Set_Request_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Set_Update_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Library_AST_Properties_Set_Update_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_project_2dmanager_2eproto() {
  protobuf_AddDesc_project_2dmanager_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "project-manager.proto");
  GOOGLE_CHECK(file != NULL);
  Project_descriptor_ = file->message_type(0);
  static const int Project_offsets_[1] = {
  };
  Project_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_descriptor_,
      Project::default_instance_,
      Project_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project));
  Project_List_descriptor_ = Project_descriptor_->nested_type(0);
  static const int Project_List_offsets_[1] = {
  };
  Project_List_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_List_descriptor_,
      Project_List::default_instance_,
      Project_List_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_List, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_List, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_List));
  Project_List_Request_descriptor_ = Project_List_descriptor_->nested_type(0);
  static const int Project_List_Request_offsets_[1] = {
  };
  Project_List_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_List_Request_descriptor_,
      Project_List_Request::default_instance_,
      Project_List_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_List_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_List_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_List_Request));
  Project_List_Status_descriptor_ = Project_List_descriptor_->nested_type(1);
  static const int Project_List_Status_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_List_Status, projects_),
  };
  Project_List_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_List_Status_descriptor_,
      Project_List_Status::default_instance_,
      Project_List_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_List_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_List_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_List_Status));
  Project_Lookup_descriptor_ = Project_descriptor_->nested_type(1);
  static const int Project_Lookup_offsets_[1] = {
  };
  Project_Lookup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Lookup_descriptor_,
      Project_Lookup::default_instance_,
      Project_Lookup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Lookup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Lookup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Lookup));
  Project_Lookup_Request_descriptor_ = Project_Lookup_descriptor_->nested_type(0);
  static const int Project_Lookup_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Lookup_Request, projectid_),
  };
  Project_Lookup_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Lookup_Request_descriptor_,
      Project_Lookup_Request::default_instance_,
      Project_Lookup_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Lookup_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Lookup_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Lookup_Request));
  Project_Lookup_Status_descriptor_ = Project_Lookup_descriptor_->nested_type(1);
  static const int Project_Lookup_Status_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Lookup_Status, project_),
  };
  Project_Lookup_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Lookup_Status_descriptor_,
      Project_Lookup_Status::default_instance_,
      Project_Lookup_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Lookup_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Lookup_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Lookup_Status));
  Project_Create_descriptor_ = Project_descriptor_->nested_type(2);
  static const int Project_Create_offsets_[1] = {
  };
  Project_Create_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Create_descriptor_,
      Project_Create::default_instance_,
      Project_Create_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Create));
  Project_Create_Request_descriptor_ = Project_Create_descriptor_->nested_type(0);
  static const int Project_Create_Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create_Request, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create_Request, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create_Request, attributes_),
  };
  Project_Create_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Create_Request_descriptor_,
      Project_Create_Request::default_instance_,
      Project_Create_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Create_Request));
  Project_Create_Update_descriptor_ = Project_Create_descriptor_->nested_type(1);
  static const int Project_Create_Update_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create_Update, project_),
  };
  Project_Create_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Create_Update_descriptor_,
      Project_Create_Update::default_instance_,
      Project_Create_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Create_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Create_Update));
  Project_Open_descriptor_ = Project_descriptor_->nested_type(3);
  static const int Project_Open_offsets_[1] = {
  };
  Project_Open_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Open_descriptor_,
      Project_Open::default_instance_,
      Project_Open_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Open, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Open, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Open));
  Project_Open_Request_descriptor_ = Project_Open_descriptor_->nested_type(0);
  static const int Project_Open_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Open_Request, path_),
  };
  Project_Open_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Open_Request_descriptor_,
      Project_Open_Request::default_instance_,
      Project_Open_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Open_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Open_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Open_Request));
  Project_Open_Update_descriptor_ = Project_Open_descriptor_->nested_type(1);
  static const int Project_Open_Update_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Open_Update, project_),
  };
  Project_Open_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Open_Update_descriptor_,
      Project_Open_Update::default_instance_,
      Project_Open_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Open_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Open_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Open_Update));
  Project_Modify_descriptor_ = Project_descriptor_->nested_type(4);
  static const int Project_Modify_offsets_[1] = {
  };
  Project_Modify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Modify_descriptor_,
      Project_Modify::default_instance_,
      Project_Modify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Modify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Modify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Modify));
  Project_Modify_Request_descriptor_ = Project_Modify_descriptor_->nested_type(0);
  static const int Project_Modify_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Modify_Request, project_),
  };
  Project_Modify_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Modify_Request_descriptor_,
      Project_Modify_Request::default_instance_,
      Project_Modify_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Modify_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Modify_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Modify_Request));
  Project_Modify_Update_descriptor_ = Project_Modify_descriptor_->nested_type(1);
  static const int Project_Modify_Update_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Modify_Update, project_),
  };
  Project_Modify_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Modify_Update_descriptor_,
      Project_Modify_Update::default_instance_,
      Project_Modify_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Modify_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Modify_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Modify_Update));
  Project_Close_descriptor_ = Project_descriptor_->nested_type(5);
  static const int Project_Close_offsets_[1] = {
  };
  Project_Close_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Close_descriptor_,
      Project_Close::default_instance_,
      Project_Close_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Close, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Close, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Close));
  Project_Close_Request_descriptor_ = Project_Close_descriptor_->nested_type(0);
  static const int Project_Close_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Close_Request, projectid_),
  };
  Project_Close_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Close_Request_descriptor_,
      Project_Close_Request::default_instance_,
      Project_Close_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Close_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Close_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Close_Request));
  Project_Close_Update_descriptor_ = Project_Close_descriptor_->nested_type(1);
  static const int Project_Close_Update_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Close_Update, projectid_),
  };
  Project_Close_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Close_Update_descriptor_,
      Project_Close_Update::default_instance_,
      Project_Close_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Close_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Close_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Close_Update));
  Project_Store_descriptor_ = Project_descriptor_->nested_type(6);
  static const int Project_Store_offsets_[1] = {
  };
  Project_Store_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Store_descriptor_,
      Project_Store::default_instance_,
      Project_Store_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Store, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Store, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Store));
  Project_Store_Request_descriptor_ = Project_Store_descriptor_->nested_type(0);
  static const int Project_Store_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Store_Request, projectid_),
  };
  Project_Store_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Store_Request_descriptor_,
      Project_Store_Request::default_instance_,
      Project_Store_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Store_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Store_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Store_Request));
  Project_Store_Status_descriptor_ = Project_Store_descriptor_->nested_type(1);
  static const int Project_Store_Status_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Store_Status, projectid_),
  };
  Project_Store_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Store_Status_descriptor_,
      Project_Store_Status::default_instance_,
      Project_Store_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Store_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Store_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Store_Status));
  Project_Library_descriptor_ = Project_descriptor_->nested_type(7);
  static const int Project_Library_offsets_[1] = {
  };
  Project_Library_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_descriptor_,
      Project_Library::default_instance_,
      Project_Library_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library));
  Project_Library_List_descriptor_ = Project_Library_descriptor_->nested_type(0);
  static const int Project_Library_List_offsets_[1] = {
  };
  Project_Library_List_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_List_descriptor_,
      Project_Library_List::default_instance_,
      Project_Library_List_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_List));
  Project_Library_List_Request_descriptor_ = Project_Library_List_descriptor_->nested_type(0);
  static const int Project_Library_List_Request_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List_Request, projectid_),
  };
  Project_Library_List_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_List_Request_descriptor_,
      Project_Library_List_Request::default_instance_,
      Project_Library_List_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_List_Request));
  Project_Library_List_Status_descriptor_ = Project_Library_List_descriptor_->nested_type(1);
  static const int Project_Library_List_Status_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List_Status, libraries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List_Status, projectid_),
  };
  Project_Library_List_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_List_Status_descriptor_,
      Project_Library_List_Status::default_instance_,
      Project_Library_List_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_List_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_List_Status));
  Project_Library_Lookup_descriptor_ = Project_Library_descriptor_->nested_type(1);
  static const int Project_Library_Lookup_offsets_[1] = {
  };
  Project_Library_Lookup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Lookup_descriptor_,
      Project_Library_Lookup::default_instance_,
      Project_Library_Lookup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Lookup));
  Project_Library_Lookup_Request_descriptor_ = Project_Library_Lookup_descriptor_->nested_type(0);
  static const int Project_Library_Lookup_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup_Request, projectid_),
  };
  Project_Library_Lookup_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Lookup_Request_descriptor_,
      Project_Library_Lookup_Request::default_instance_,
      Project_Library_Lookup_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Lookup_Request));
  Project_Library_Lookup_Status_descriptor_ = Project_Library_Lookup_descriptor_->nested_type(1);
  static const int Project_Library_Lookup_Status_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup_Status, library_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup_Status, projectid_),
  };
  Project_Library_Lookup_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Lookup_Status_descriptor_,
      Project_Library_Lookup_Status::default_instance_,
      Project_Library_Lookup_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Lookup_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Lookup_Status));
  Project_Library_Create_descriptor_ = Project_Library_descriptor_->nested_type(2);
  static const int Project_Library_Create_offsets_[1] = {
  };
  Project_Library_Create_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Create_descriptor_,
      Project_Library_Create::default_instance_,
      Project_Library_Create_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Create));
  Project_Library_Create_Request_descriptor_ = Project_Library_Create_descriptor_->nested_type(0);
  static const int Project_Library_Create_Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Request, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Request, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Request, projectid_),
  };
  Project_Library_Create_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Create_Request_descriptor_,
      Project_Library_Create_Request::default_instance_,
      Project_Library_Create_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Create_Request));
  Project_Library_Create_Update_descriptor_ = Project_Library_Create_descriptor_->nested_type(1);
  static const int Project_Library_Create_Update_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Update, library_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Update, projectid_),
  };
  Project_Library_Create_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Create_Update_descriptor_,
      Project_Library_Create_Update::default_instance_,
      Project_Library_Create_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Create_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Create_Update));
  Project_Library_Load_descriptor_ = Project_Library_descriptor_->nested_type(3);
  static const int Project_Library_Load_offsets_[1] = {
  };
  Project_Library_Load_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Load_descriptor_,
      Project_Library_Load::default_instance_,
      Project_Library_Load_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Load));
  Project_Library_Load_Request_descriptor_ = Project_Library_Load_descriptor_->nested_type(0);
  static const int Project_Library_Load_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load_Request, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load_Request, projectid_),
  };
  Project_Library_Load_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Load_Request_descriptor_,
      Project_Library_Load_Request::default_instance_,
      Project_Library_Load_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Load_Request));
  Project_Library_Load_Update_descriptor_ = Project_Library_Load_descriptor_->nested_type(1);
  static const int Project_Library_Load_Update_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load_Update, library_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load_Update, projectid_),
  };
  Project_Library_Load_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Load_Update_descriptor_,
      Project_Library_Load_Update::default_instance_,
      Project_Library_Load_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Load_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Load_Update));
  Project_Library_Unload_descriptor_ = Project_Library_descriptor_->nested_type(4);
  static const int Project_Library_Unload_offsets_[1] = {
  };
  Project_Library_Unload_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Unload_descriptor_,
      Project_Library_Unload::default_instance_,
      Project_Library_Unload_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Unload));
  Project_Library_Unload_Request_descriptor_ = Project_Library_Unload_descriptor_->nested_type(0);
  static const int Project_Library_Unload_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload_Request, projectid_),
  };
  Project_Library_Unload_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Unload_Request_descriptor_,
      Project_Library_Unload_Request::default_instance_,
      Project_Library_Unload_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Unload_Request));
  Project_Library_Unload_Update_descriptor_ = Project_Library_Unload_descriptor_->nested_type(1);
  static const int Project_Library_Unload_Update_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload_Update, projectid_),
  };
  Project_Library_Unload_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Unload_Update_descriptor_,
      Project_Library_Unload_Update::default_instance_,
      Project_Library_Unload_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Unload_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Unload_Update));
  Project_Library_Store_descriptor_ = Project_Library_descriptor_->nested_type(5);
  static const int Project_Library_Store_offsets_[1] = {
  };
  Project_Library_Store_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Store_descriptor_,
      Project_Library_Store::default_instance_,
      Project_Library_Store_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Store));
  Project_Library_Store_Request_descriptor_ = Project_Library_Store_descriptor_->nested_type(0);
  static const int Project_Library_Store_Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store_Request, projectid_),
  };
  Project_Library_Store_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Store_Request_descriptor_,
      Project_Library_Store_Request::default_instance_,
      Project_Library_Store_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Store_Request));
  Project_Library_Store_Status_descriptor_ = Project_Library_Store_descriptor_->nested_type(1);
  static const int Project_Library_Store_Status_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store_Status, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store_Status, projectid_),
  };
  Project_Library_Store_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_Store_Status_descriptor_,
      Project_Library_Store_Status::default_instance_,
      Project_Library_Store_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_Store_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_Store_Status));
  Project_Library_AST_descriptor_ = Project_Library_descriptor_->nested_type(6);
  static const int Project_Library_AST_offsets_[1] = {
  };
  Project_Library_AST_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_descriptor_,
      Project_Library_AST::default_instance_,
      Project_Library_AST_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST));
  Project_Library_AST_Get_descriptor_ = Project_Library_AST_descriptor_->nested_type(0);
  static const int Project_Library_AST_Get_offsets_[1] = {
  };
  Project_Library_AST_Get_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Get_descriptor_,
      Project_Library_AST_Get::default_instance_,
      Project_Library_AST_Get_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Get));
  Project_Library_AST_Get_Request_descriptor_ = Project_Library_AST_Get_descriptor_->nested_type(0);
  static const int Project_Library_AST_Get_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Request, maxdepth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Request, projectid_),
  };
  Project_Library_AST_Get_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Get_Request_descriptor_,
      Project_Library_AST_Get_Request::default_instance_,
      Project_Library_AST_Get_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Get_Request));
  Project_Library_AST_Get_Status_descriptor_ = Project_Library_AST_Get_descriptor_->nested_type(1);
  static const int Project_Library_AST_Get_Status_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Status, focus_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Status, maxdepth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Status, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Status, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Status, projectid_),
  };
  Project_Library_AST_Get_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Get_Status_descriptor_,
      Project_Library_AST_Get_Status::default_instance_,
      Project_Library_AST_Get_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Get_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Get_Status));
  Project_Library_AST_Module_descriptor_ = Project_Library_AST_descriptor_->nested_type(1);
  static const int Project_Library_AST_Module_offsets_[1] = {
  };
  Project_Library_AST_Module_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_descriptor_,
      Project_Library_AST_Module::default_instance_,
      Project_Library_AST_Module_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module));
  Project_Library_AST_Module_Add_descriptor_ = Project_Library_AST_Module_descriptor_->nested_type(0);
  static const int Project_Library_AST_Module_Add_offsets_[1] = {
  };
  Project_Library_AST_Module_Add_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Add_descriptor_,
      Project_Library_AST_Module_Add::default_instance_,
      Project_Library_AST_Module_Add_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Add));
  Project_Library_AST_Module_Add_Request_descriptor_ = Project_Library_AST_Module_Add_descriptor_->nested_type(0);
  static const int Project_Library_AST_Module_Add_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Request, module_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Request, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Request, projectid_),
  };
  Project_Library_AST_Module_Add_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Add_Request_descriptor_,
      Project_Library_AST_Module_Add_Request::default_instance_,
      Project_Library_AST_Module_Add_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Add_Request));
  Project_Library_AST_Module_Add_Update_descriptor_ = Project_Library_AST_Module_Add_descriptor_->nested_type(1);
  static const int Project_Library_AST_Module_Add_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Update, module_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Update, projectid_),
  };
  Project_Library_AST_Module_Add_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Add_Update_descriptor_,
      Project_Library_AST_Module_Add_Update::default_instance_,
      Project_Library_AST_Module_Add_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Add_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Add_Update));
  Project_Library_AST_Module_Modify_descriptor_ = Project_Library_AST_Module_descriptor_->nested_type(1);
  static const int Project_Library_AST_Module_Modify_offsets_[1] = {
  };
  Project_Library_AST_Module_Modify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_descriptor_,
      Project_Library_AST_Module_Modify::default_instance_,
      Project_Library_AST_Module_Modify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify));
  Project_Library_AST_Module_Modify_Cls_descriptor_ = Project_Library_AST_Module_Modify_descriptor_->nested_type(0);
  static const int Project_Library_AST_Module_Modify_Cls_offsets_[1] = {
  };
  Project_Library_AST_Module_Modify_Cls_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Cls_descriptor_,
      Project_Library_AST_Module_Modify_Cls::default_instance_,
      Project_Library_AST_Module_Modify_Cls_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Cls));
  Project_Library_AST_Module_Modify_Cls_Request_descriptor_ = Project_Library_AST_Module_Modify_Cls_descriptor_->nested_type(0);
  static const int Project_Library_AST_Module_Modify_Cls_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Request, cls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Request, projectid_),
  };
  Project_Library_AST_Module_Modify_Cls_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Cls_Request_descriptor_,
      Project_Library_AST_Module_Modify_Cls_Request::default_instance_,
      Project_Library_AST_Module_Modify_Cls_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Cls_Request));
  Project_Library_AST_Module_Modify_Cls_Update_descriptor_ = Project_Library_AST_Module_Modify_Cls_descriptor_->nested_type(1);
  static const int Project_Library_AST_Module_Modify_Cls_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Update, cls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Update, projectid_),
  };
  Project_Library_AST_Module_Modify_Cls_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Cls_Update_descriptor_,
      Project_Library_AST_Module_Modify_Cls_Update::default_instance_,
      Project_Library_AST_Module_Modify_Cls_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Cls_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Cls_Update));
  Project_Library_AST_Module_Modify_Imports_descriptor_ = Project_Library_AST_Module_Modify_descriptor_->nested_type(1);
  static const int Project_Library_AST_Module_Modify_Imports_offsets_[1] = {
  };
  Project_Library_AST_Module_Modify_Imports_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Imports_descriptor_,
      Project_Library_AST_Module_Modify_Imports::default_instance_,
      Project_Library_AST_Module_Modify_Imports_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Imports));
  Project_Library_AST_Module_Modify_Imports_Request_descriptor_ = Project_Library_AST_Module_Modify_Imports_descriptor_->nested_type(0);
  static const int Project_Library_AST_Module_Modify_Imports_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Request, imports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Request, projectid_),
  };
  Project_Library_AST_Module_Modify_Imports_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Imports_Request_descriptor_,
      Project_Library_AST_Module_Modify_Imports_Request::default_instance_,
      Project_Library_AST_Module_Modify_Imports_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Imports_Request));
  Project_Library_AST_Module_Modify_Imports_Update_descriptor_ = Project_Library_AST_Module_Modify_Imports_descriptor_->nested_type(1);
  static const int Project_Library_AST_Module_Modify_Imports_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Update, imports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Update, projectid_),
  };
  Project_Library_AST_Module_Modify_Imports_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Imports_Update_descriptor_,
      Project_Library_AST_Module_Modify_Imports_Update::default_instance_,
      Project_Library_AST_Module_Modify_Imports_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Imports_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Imports_Update));
  Project_Library_AST_Module_Modify_Fields_descriptor_ = Project_Library_AST_Module_Modify_descriptor_->nested_type(2);
  static const int Project_Library_AST_Module_Modify_Fields_offsets_[1] = {
  };
  Project_Library_AST_Module_Modify_Fields_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Fields_descriptor_,
      Project_Library_AST_Module_Modify_Fields::default_instance_,
      Project_Library_AST_Module_Modify_Fields_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Fields));
  Project_Library_AST_Module_Modify_Fields_Request_descriptor_ = Project_Library_AST_Module_Modify_Fields_descriptor_->nested_type(0);
  static const int Project_Library_AST_Module_Modify_Fields_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Request, fields_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Request, projectid_),
  };
  Project_Library_AST_Module_Modify_Fields_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Fields_Request_descriptor_,
      Project_Library_AST_Module_Modify_Fields_Request::default_instance_,
      Project_Library_AST_Module_Modify_Fields_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Fields_Request));
  Project_Library_AST_Module_Modify_Fields_Update_descriptor_ = Project_Library_AST_Module_Modify_Fields_descriptor_->nested_type(1);
  static const int Project_Library_AST_Module_Modify_Fields_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Update, fields_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Update, projectid_),
  };
  Project_Library_AST_Module_Modify_Fields_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Module_Modify_Fields_Update_descriptor_,
      Project_Library_AST_Module_Modify_Fields_Update::default_instance_,
      Project_Library_AST_Module_Modify_Fields_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Module_Modify_Fields_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Module_Modify_Fields_Update));
  Project_Library_AST_Data_descriptor_ = Project_Library_AST_descriptor_->nested_type(2);
  static const int Project_Library_AST_Data_offsets_[1] = {
  };
  Project_Library_AST_Data_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_descriptor_,
      Project_Library_AST_Data::default_instance_,
      Project_Library_AST_Data_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data));
  Project_Library_AST_Data_Add_descriptor_ = Project_Library_AST_Data_descriptor_->nested_type(0);
  static const int Project_Library_AST_Data_Add_offsets_[1] = {
  };
  Project_Library_AST_Data_Add_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Add_descriptor_,
      Project_Library_AST_Data_Add::default_instance_,
      Project_Library_AST_Data_Add_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Add));
  Project_Library_AST_Data_Add_Request_descriptor_ = Project_Library_AST_Data_Add_descriptor_->nested_type(0);
  static const int Project_Library_AST_Data_Add_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Request, data__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Request, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Request, projectid_),
  };
  Project_Library_AST_Data_Add_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Add_Request_descriptor_,
      Project_Library_AST_Data_Add_Request::default_instance_,
      Project_Library_AST_Data_Add_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Add_Request));
  Project_Library_AST_Data_Add_Update_descriptor_ = Project_Library_AST_Data_Add_descriptor_->nested_type(1);
  static const int Project_Library_AST_Data_Add_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Update, data__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Update, projectid_),
  };
  Project_Library_AST_Data_Add_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Add_Update_descriptor_,
      Project_Library_AST_Data_Add_Update::default_instance_,
      Project_Library_AST_Data_Add_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Add_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Add_Update));
  Project_Library_AST_Data_Modify_descriptor_ = Project_Library_AST_Data_descriptor_->nested_type(1);
  static const int Project_Library_AST_Data_Modify_offsets_[1] = {
  };
  Project_Library_AST_Data_Modify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_descriptor_,
      Project_Library_AST_Data_Modify::default_instance_,
      Project_Library_AST_Data_Modify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify));
  Project_Library_AST_Data_Modify_Cls_descriptor_ = Project_Library_AST_Data_Modify_descriptor_->nested_type(0);
  static const int Project_Library_AST_Data_Modify_Cls_offsets_[1] = {
  };
  Project_Library_AST_Data_Modify_Cls_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Cls_descriptor_,
      Project_Library_AST_Data_Modify_Cls::default_instance_,
      Project_Library_AST_Data_Modify_Cls_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Cls));
  Project_Library_AST_Data_Modify_Cls_Request_descriptor_ = Project_Library_AST_Data_Modify_Cls_descriptor_->nested_type(0);
  static const int Project_Library_AST_Data_Modify_Cls_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Request, cls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Request, projectid_),
  };
  Project_Library_AST_Data_Modify_Cls_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Cls_Request_descriptor_,
      Project_Library_AST_Data_Modify_Cls_Request::default_instance_,
      Project_Library_AST_Data_Modify_Cls_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Cls_Request));
  Project_Library_AST_Data_Modify_Cls_Update_descriptor_ = Project_Library_AST_Data_Modify_Cls_descriptor_->nested_type(1);
  static const int Project_Library_AST_Data_Modify_Cls_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Update, cls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Update, projectid_),
  };
  Project_Library_AST_Data_Modify_Cls_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Cls_Update_descriptor_,
      Project_Library_AST_Data_Modify_Cls_Update::default_instance_,
      Project_Library_AST_Data_Modify_Cls_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cls_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Cls_Update));
  Project_Library_AST_Data_Modify_Cons_descriptor_ = Project_Library_AST_Data_Modify_descriptor_->nested_type(1);
  static const int Project_Library_AST_Data_Modify_Cons_offsets_[1] = {
  };
  Project_Library_AST_Data_Modify_Cons_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Cons_descriptor_,
      Project_Library_AST_Data_Modify_Cons::default_instance_,
      Project_Library_AST_Data_Modify_Cons_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Cons));
  Project_Library_AST_Data_Modify_Cons_Request_descriptor_ = Project_Library_AST_Data_Modify_Cons_descriptor_->nested_type(0);
  static const int Project_Library_AST_Data_Modify_Cons_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Request, cons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Request, projectid_),
  };
  Project_Library_AST_Data_Modify_Cons_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Cons_Request_descriptor_,
      Project_Library_AST_Data_Modify_Cons_Request::default_instance_,
      Project_Library_AST_Data_Modify_Cons_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Cons_Request));
  Project_Library_AST_Data_Modify_Cons_Update_descriptor_ = Project_Library_AST_Data_Modify_Cons_descriptor_->nested_type(1);
  static const int Project_Library_AST_Data_Modify_Cons_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Update, cons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Update, projectid_),
  };
  Project_Library_AST_Data_Modify_Cons_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Cons_Update_descriptor_,
      Project_Library_AST_Data_Modify_Cons_Update::default_instance_,
      Project_Library_AST_Data_Modify_Cons_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Cons_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Cons_Update));
  Project_Library_AST_Data_Modify_Classes_descriptor_ = Project_Library_AST_Data_Modify_descriptor_->nested_type(2);
  static const int Project_Library_AST_Data_Modify_Classes_offsets_[1] = {
  };
  Project_Library_AST_Data_Modify_Classes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Classes_descriptor_,
      Project_Library_AST_Data_Modify_Classes::default_instance_,
      Project_Library_AST_Data_Modify_Classes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Classes));
  Project_Library_AST_Data_Modify_Classes_Request_descriptor_ = Project_Library_AST_Data_Modify_Classes_descriptor_->nested_type(0);
  static const int Project_Library_AST_Data_Modify_Classes_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Request, classes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Request, projectid_),
  };
  Project_Library_AST_Data_Modify_Classes_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Classes_Request_descriptor_,
      Project_Library_AST_Data_Modify_Classes_Request::default_instance_,
      Project_Library_AST_Data_Modify_Classes_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Classes_Request));
  Project_Library_AST_Data_Modify_Classes_Update_descriptor_ = Project_Library_AST_Data_Modify_Classes_descriptor_->nested_type(1);
  static const int Project_Library_AST_Data_Modify_Classes_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Update, classes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Update, projectid_),
  };
  Project_Library_AST_Data_Modify_Classes_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Classes_Update_descriptor_,
      Project_Library_AST_Data_Modify_Classes_Update::default_instance_,
      Project_Library_AST_Data_Modify_Classes_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Classes_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Classes_Update));
  Project_Library_AST_Data_Modify_Methods_descriptor_ = Project_Library_AST_Data_Modify_descriptor_->nested_type(3);
  static const int Project_Library_AST_Data_Modify_Methods_offsets_[1] = {
  };
  Project_Library_AST_Data_Modify_Methods_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Methods_descriptor_,
      Project_Library_AST_Data_Modify_Methods::default_instance_,
      Project_Library_AST_Data_Modify_Methods_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Methods));
  Project_Library_AST_Data_Modify_Methods_Request_descriptor_ = Project_Library_AST_Data_Modify_Methods_descriptor_->nested_type(0);
  static const int Project_Library_AST_Data_Modify_Methods_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Request, methods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Request, projectid_),
  };
  Project_Library_AST_Data_Modify_Methods_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Methods_Request_descriptor_,
      Project_Library_AST_Data_Modify_Methods_Request::default_instance_,
      Project_Library_AST_Data_Modify_Methods_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Methods_Request));
  Project_Library_AST_Data_Modify_Methods_Update_descriptor_ = Project_Library_AST_Data_Modify_Methods_descriptor_->nested_type(1);
  static const int Project_Library_AST_Data_Modify_Methods_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Update, methods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Update, projectid_),
  };
  Project_Library_AST_Data_Modify_Methods_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Data_Modify_Methods_Update_descriptor_,
      Project_Library_AST_Data_Modify_Methods_Update::default_instance_,
      Project_Library_AST_Data_Modify_Methods_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Data_Modify_Methods_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Data_Modify_Methods_Update));
  Project_Library_AST_Function_descriptor_ = Project_Library_AST_descriptor_->nested_type(3);
  static const int Project_Library_AST_Function_offsets_[1] = {
  };
  Project_Library_AST_Function_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_descriptor_,
      Project_Library_AST_Function::default_instance_,
      Project_Library_AST_Function_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function));
  Project_Library_AST_Function_Add_descriptor_ = Project_Library_AST_Function_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Add_offsets_[1] = {
  };
  Project_Library_AST_Function_Add_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Add_descriptor_,
      Project_Library_AST_Function_Add::default_instance_,
      Project_Library_AST_Function_Add_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Add));
  Project_Library_AST_Function_Add_Request_descriptor_ = Project_Library_AST_Function_Add_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Add_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Request, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Request, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Request, projectid_),
  };
  Project_Library_AST_Function_Add_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Add_Request_descriptor_,
      Project_Library_AST_Function_Add_Request::default_instance_,
      Project_Library_AST_Function_Add_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Add_Request));
  Project_Library_AST_Function_Add_Update_descriptor_ = Project_Library_AST_Function_Add_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Add_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Update, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Update, projectid_),
  };
  Project_Library_AST_Function_Add_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Add_Update_descriptor_,
      Project_Library_AST_Function_Add_Update::default_instance_,
      Project_Library_AST_Function_Add_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Add_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Add_Update));
  Project_Library_AST_Function_Modify_descriptor_ = Project_Library_AST_Function_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Modify_offsets_[1] = {
  };
  Project_Library_AST_Function_Modify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_descriptor_,
      Project_Library_AST_Function_Modify::default_instance_,
      Project_Library_AST_Function_Modify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify));
  Project_Library_AST_Function_Modify_Name_descriptor_ = Project_Library_AST_Function_Modify_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Modify_Name_offsets_[1] = {
  };
  Project_Library_AST_Function_Modify_Name_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Name_descriptor_,
      Project_Library_AST_Function_Modify_Name::default_instance_,
      Project_Library_AST_Function_Modify_Name_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Name));
  Project_Library_AST_Function_Modify_Name_Request_descriptor_ = Project_Library_AST_Function_Modify_Name_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Modify_Name_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Request, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Request, projectid_),
  };
  Project_Library_AST_Function_Modify_Name_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Name_Request_descriptor_,
      Project_Library_AST_Function_Modify_Name_Request::default_instance_,
      Project_Library_AST_Function_Modify_Name_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Name_Request));
  Project_Library_AST_Function_Modify_Name_Update_descriptor_ = Project_Library_AST_Function_Modify_Name_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Modify_Name_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Update, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Update, projectid_),
  };
  Project_Library_AST_Function_Modify_Name_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Name_Update_descriptor_,
      Project_Library_AST_Function_Modify_Name_Update::default_instance_,
      Project_Library_AST_Function_Modify_Name_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Name_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Name_Update));
  Project_Library_AST_Function_Modify_Path_descriptor_ = Project_Library_AST_Function_Modify_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Modify_Path_offsets_[1] = {
  };
  Project_Library_AST_Function_Modify_Path_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Path_descriptor_,
      Project_Library_AST_Function_Modify_Path::default_instance_,
      Project_Library_AST_Function_Modify_Path_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Path));
  Project_Library_AST_Function_Modify_Path_Request_descriptor_ = Project_Library_AST_Function_Modify_Path_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Modify_Path_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Request, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Request, projectid_),
  };
  Project_Library_AST_Function_Modify_Path_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Path_Request_descriptor_,
      Project_Library_AST_Function_Modify_Path_Request::default_instance_,
      Project_Library_AST_Function_Modify_Path_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Path_Request));
  Project_Library_AST_Function_Modify_Path_Update_descriptor_ = Project_Library_AST_Function_Modify_Path_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Modify_Path_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Update, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Update, projectid_),
  };
  Project_Library_AST_Function_Modify_Path_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Path_Update_descriptor_,
      Project_Library_AST_Function_Modify_Path_Update::default_instance_,
      Project_Library_AST_Function_Modify_Path_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Path_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Path_Update));
  Project_Library_AST_Function_Modify_Inputs_descriptor_ = Project_Library_AST_Function_Modify_descriptor_->nested_type(2);
  static const int Project_Library_AST_Function_Modify_Inputs_offsets_[1] = {
  };
  Project_Library_AST_Function_Modify_Inputs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Inputs_descriptor_,
      Project_Library_AST_Function_Modify_Inputs::default_instance_,
      Project_Library_AST_Function_Modify_Inputs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Inputs));
  Project_Library_AST_Function_Modify_Inputs_Request_descriptor_ = Project_Library_AST_Function_Modify_Inputs_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Modify_Inputs_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Request, inputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Request, projectid_),
  };
  Project_Library_AST_Function_Modify_Inputs_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Inputs_Request_descriptor_,
      Project_Library_AST_Function_Modify_Inputs_Request::default_instance_,
      Project_Library_AST_Function_Modify_Inputs_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Inputs_Request));
  Project_Library_AST_Function_Modify_Inputs_Update_descriptor_ = Project_Library_AST_Function_Modify_Inputs_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Modify_Inputs_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Update, inputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Update, projectid_),
  };
  Project_Library_AST_Function_Modify_Inputs_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Inputs_Update_descriptor_,
      Project_Library_AST_Function_Modify_Inputs_Update::default_instance_,
      Project_Library_AST_Function_Modify_Inputs_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Inputs_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Inputs_Update));
  Project_Library_AST_Function_Modify_Output_descriptor_ = Project_Library_AST_Function_Modify_descriptor_->nested_type(3);
  static const int Project_Library_AST_Function_Modify_Output_offsets_[1] = {
  };
  Project_Library_AST_Function_Modify_Output_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Output_descriptor_,
      Project_Library_AST_Function_Modify_Output::default_instance_,
      Project_Library_AST_Function_Modify_Output_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Output));
  Project_Library_AST_Function_Modify_Output_Request_descriptor_ = Project_Library_AST_Function_Modify_Output_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Modify_Output_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Request, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Request, projectid_),
  };
  Project_Library_AST_Function_Modify_Output_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Output_Request_descriptor_,
      Project_Library_AST_Function_Modify_Output_Request::default_instance_,
      Project_Library_AST_Function_Modify_Output_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Output_Request));
  Project_Library_AST_Function_Modify_Output_Update_descriptor_ = Project_Library_AST_Function_Modify_Output_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Modify_Output_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Update, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Update, projectid_),
  };
  Project_Library_AST_Function_Modify_Output_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Modify_Output_Update_descriptor_,
      Project_Library_AST_Function_Modify_Output_Update::default_instance_,
      Project_Library_AST_Function_Modify_Output_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Modify_Output_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Modify_Output_Update));
  Project_Library_AST_Function_Graph_descriptor_ = Project_Library_AST_Function_descriptor_->nested_type(2);
  static const int Project_Library_AST_Function_Graph_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_descriptor_,
      Project_Library_AST_Function_Graph::default_instance_,
      Project_Library_AST_Function_Graph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph));
  Project_Library_AST_Function_Graph_Get_descriptor_ = Project_Library_AST_Function_Graph_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Get_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Get_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Get_descriptor_,
      Project_Library_AST_Function_Graph_Get::default_instance_,
      Project_Library_AST_Function_Graph_Get_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Get));
  Project_Library_AST_Function_Graph_Get_Request_descriptor_ = Project_Library_AST_Function_Graph_Get_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Get_Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Get_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Get_Request_descriptor_,
      Project_Library_AST_Function_Graph_Get_Request::default_instance_,
      Project_Library_AST_Function_Graph_Get_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Get_Request));
  Project_Library_AST_Function_Graph_Get_Status_descriptor_ = Project_Library_AST_Function_Graph_Get_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Get_Status_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Status, graph_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Status, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Status, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Status, projectid_),
  };
  Project_Library_AST_Function_Graph_Get_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Get_Status_descriptor_,
      Project_Library_AST_Function_Graph_Get_Status::default_instance_,
      Project_Library_AST_Function_Graph_Get_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Get_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Get_Status));
  Project_Library_AST_Function_Graph_Lookup_descriptor_ = Project_Library_AST_Function_Graph_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Lookup_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Lookup_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Lookup_descriptor_,
      Project_Library_AST_Function_Graph_Lookup::default_instance_,
      Project_Library_AST_Function_Graph_Lookup_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Lookup));
  Project_Library_AST_Function_Graph_Lookup_Request_descriptor_ = Project_Library_AST_Function_Graph_Lookup_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Lookup_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Lookup_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Lookup_Request_descriptor_,
      Project_Library_AST_Function_Graph_Lookup_Request::default_instance_,
      Project_Library_AST_Function_Graph_Lookup_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Lookup_Request));
  Project_Library_AST_Function_Graph_Lookup_Status_descriptor_ = Project_Library_AST_Function_Graph_Lookup_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Lookup_Status_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Status, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Status, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Status, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Status, projectid_),
  };
  Project_Library_AST_Function_Graph_Lookup_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Lookup_Status_descriptor_,
      Project_Library_AST_Function_Graph_Lookup_Status::default_instance_,
      Project_Library_AST_Function_Graph_Lookup_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Lookup_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Lookup_Status));
  Project_Library_AST_Function_Graph_Node_descriptor_ = Project_Library_AST_Function_Graph_descriptor_->nested_type(2);
  static const int Project_Library_AST_Function_Graph_Node_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_descriptor_,
      Project_Library_AST_Function_Graph_Node::default_instance_,
      Project_Library_AST_Function_Graph_Node_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node));
  Project_Library_AST_Function_Graph_Node_Add_descriptor_ = Project_Library_AST_Function_Graph_Node_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Add_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Add_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Add_descriptor_,
      Project_Library_AST_Function_Graph_Node_Add::default_instance_,
      Project_Library_AST_Function_Graph_Node_Add_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Add));
  Project_Library_AST_Function_Graph_Node_Add_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_Add_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Add_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Request, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Add_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Add_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_Add_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_Add_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Add_Request));
  Project_Library_AST_Function_Graph_Node_Add_Update_descriptor_ = Project_Library_AST_Function_Graph_Node_Add_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Add_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Update, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Add_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Add_Update_descriptor_,
      Project_Library_AST_Function_Graph_Node_Add_Update::default_instance_,
      Project_Library_AST_Function_Graph_Node_Add_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Add_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Add_Update));
  Project_Library_AST_Function_Graph_Node_Modify_descriptor_ = Project_Library_AST_Function_Graph_Node_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Modify_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Modify_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Modify_descriptor_,
      Project_Library_AST_Function_Graph_Node_Modify::default_instance_,
      Project_Library_AST_Function_Graph_Node_Modify_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Modify));
  Project_Library_AST_Function_Graph_Node_Modify_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_Modify_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Modify_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Request, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Modify_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Modify_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_Modify_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_Modify_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Modify_Request));
  Project_Library_AST_Function_Graph_Node_Modify_Update_descriptor_ = Project_Library_AST_Function_Graph_Node_Modify_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Modify_Update_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Update, oldnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Update, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Modify_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Modify_Update_descriptor_,
      Project_Library_AST_Function_Graph_Node_Modify_Update::default_instance_,
      Project_Library_AST_Function_Graph_Node_Modify_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Modify_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Modify_Update));
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_descriptor_ = Project_Library_AST_Function_Graph_Node_descriptor_->nested_type(2);
  static const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_ModifyInPlace_descriptor_,
      Project_Library_AST_Function_Graph_Node_ModifyInPlace::default_instance_,
      Project_Library_AST_Function_Graph_Node_ModifyInPlace_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_ModifyInPlace));
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_ModifyInPlace_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request));
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_descriptor_ = Project_Library_AST_Function_Graph_Node_ModifyInPlace_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_descriptor_,
      Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::default_instance_,
      Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update));
  Project_Library_AST_Function_Graph_Node_Remove_descriptor_ = Project_Library_AST_Function_Graph_Node_descriptor_->nested_type(3);
  static const int Project_Library_AST_Function_Graph_Node_Remove_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Remove_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Remove_descriptor_,
      Project_Library_AST_Function_Graph_Node_Remove::default_instance_,
      Project_Library_AST_Function_Graph_Node_Remove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Remove));
  Project_Library_AST_Function_Graph_Node_Remove_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_Remove_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Remove_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Remove_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Remove_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_Remove_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_Remove_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Remove_Request));
  Project_Library_AST_Function_Graph_Node_Remove_Update_descriptor_ = Project_Library_AST_Function_Graph_Node_Remove_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Remove_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Update, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Remove_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Remove_Update_descriptor_,
      Project_Library_AST_Function_Graph_Node_Remove_Update::default_instance_,
      Project_Library_AST_Function_Graph_Node_Remove_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Remove_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Remove_Update));
  Project_Library_AST_Function_Graph_Node_Default_descriptor_ = Project_Library_AST_Function_Graph_Node_descriptor_->nested_type(4);
  static const int Project_Library_AST_Function_Graph_Node_Default_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Default_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default));
  Project_Library_AST_Function_Graph_Node_Default_Get_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Default_Get_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Default_Get_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Get_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Get::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Get_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Get));
  Project_Library_AST_Function_Graph_Node_Default_Get_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_Get_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Default_Get_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Default_Get_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Get_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Get_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Get_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Get_Request));
  Project_Library_AST_Function_Graph_Node_Default_Get_Status_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_Get_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Default_Get_Status_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Status, defaultsmap_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Status, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Status, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Status, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Status, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Default_Get_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Get_Status_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Get_Status::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Get_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Get_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Get_Status));
  Project_Library_AST_Function_Graph_Node_Default_Set_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Default_Set_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Default_Set_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Set_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Set::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Set_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Set));
  Project_Library_AST_Function_Graph_Node_Default_Set_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_Set_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Default_Set_Request_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Request, inport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Request, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Default_Set_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Set_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Set_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Set_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Set_Request));
  Project_Library_AST_Function_Graph_Node_Default_Set_Update_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_Set_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Default_Set_Update_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Update, inport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Update, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Update, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Default_Set_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Set_Update_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Set_Update::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Set_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Set_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Set_Update));
  Project_Library_AST_Function_Graph_Node_Default_Remove_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_descriptor_->nested_type(2);
  static const int Project_Library_AST_Function_Graph_Node_Default_Remove_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Default_Remove_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Remove_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Remove::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Remove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Remove));
  Project_Library_AST_Function_Graph_Node_Default_Remove_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_Remove_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Default_Remove_Request_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Request, inport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Default_Remove_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Remove_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Remove_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Remove_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Remove_Request));
  Project_Library_AST_Function_Graph_Node_Default_Remove_Update_descriptor_ = Project_Library_AST_Function_Graph_Node_Default_Remove_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Default_Remove_Update_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Update, inport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Update, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Default_Remove_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Default_Remove_Update_descriptor_,
      Project_Library_AST_Function_Graph_Node_Default_Remove_Update::default_instance_,
      Project_Library_AST_Function_Graph_Node_Default_Remove_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Default_Remove_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Default_Remove_Update));
  Project_Library_AST_Function_Graph_Node_Properties_descriptor_ = Project_Library_AST_Function_Graph_Node_descriptor_->nested_type(5);
  static const int Project_Library_AST_Function_Graph_Node_Properties_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Properties_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Properties_descriptor_,
      Project_Library_AST_Function_Graph_Node_Properties::default_instance_,
      Project_Library_AST_Function_Graph_Node_Properties_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Properties));
  Project_Library_AST_Function_Graph_Node_Properties_Get_descriptor_ = Project_Library_AST_Function_Graph_Node_Properties_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Properties_Get_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Properties_Get_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Properties_Get_descriptor_,
      Project_Library_AST_Function_Graph_Node_Properties_Get::default_instance_,
      Project_Library_AST_Function_Graph_Node_Properties_Get_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Properties_Get));
  Project_Library_AST_Function_Graph_Node_Properties_Get_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_Properties_Get_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Properties_Get_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Properties_Get_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Properties_Get_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_Properties_Get_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_Properties_Get_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Properties_Get_Request));
  Project_Library_AST_Function_Graph_Node_Properties_Get_Status_descriptor_ = Project_Library_AST_Function_Graph_Node_Properties_Get_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Properties_Get_Status_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Status, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Status, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Status, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Status, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Status, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Properties_Get_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Properties_Get_Status_descriptor_,
      Project_Library_AST_Function_Graph_Node_Properties_Get_Status::default_instance_,
      Project_Library_AST_Function_Graph_Node_Properties_Get_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Get_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Properties_Get_Status));
  Project_Library_AST_Function_Graph_Node_Properties_Set_descriptor_ = Project_Library_AST_Function_Graph_Node_Properties_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Properties_Set_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Node_Properties_Set_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Properties_Set_descriptor_,
      Project_Library_AST_Function_Graph_Node_Properties_Set::default_instance_,
      Project_Library_AST_Function_Graph_Node_Properties_Set_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Properties_Set));
  Project_Library_AST_Function_Graph_Node_Properties_Set_Request_descriptor_ = Project_Library_AST_Function_Graph_Node_Properties_Set_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Node_Properties_Set_Request_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Request, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Properties_Set_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Properties_Set_Request_descriptor_,
      Project_Library_AST_Function_Graph_Node_Properties_Set_Request::default_instance_,
      Project_Library_AST_Function_Graph_Node_Properties_Set_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Properties_Set_Request));
  Project_Library_AST_Function_Graph_Node_Properties_Set_Update_descriptor_ = Project_Library_AST_Function_Graph_Node_Properties_Set_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Node_Properties_Set_Update_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Update, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Update, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Node_Properties_Set_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Node_Properties_Set_Update_descriptor_,
      Project_Library_AST_Function_Graph_Node_Properties_Set_Update::default_instance_,
      Project_Library_AST_Function_Graph_Node_Properties_Set_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Node_Properties_Set_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Node_Properties_Set_Update));
  Project_Library_AST_Function_Graph_Connect_descriptor_ = Project_Library_AST_Function_Graph_descriptor_->nested_type(3);
  static const int Project_Library_AST_Function_Graph_Connect_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Connect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Connect_descriptor_,
      Project_Library_AST_Function_Graph_Connect::default_instance_,
      Project_Library_AST_Function_Graph_Connect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Connect));
  Project_Library_AST_Function_Graph_Connect_Request_descriptor_ = Project_Library_AST_Function_Graph_Connect_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Connect_Request_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, srcnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, srcport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, dstnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, dstport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Connect_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Connect_Request_descriptor_,
      Project_Library_AST_Function_Graph_Connect_Request::default_instance_,
      Project_Library_AST_Function_Graph_Connect_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Connect_Request));
  Project_Library_AST_Function_Graph_Connect_Update_descriptor_ = Project_Library_AST_Function_Graph_Connect_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Connect_Update_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, srcnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, srcport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, dstnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, dstport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Connect_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Connect_Update_descriptor_,
      Project_Library_AST_Function_Graph_Connect_Update::default_instance_,
      Project_Library_AST_Function_Graph_Connect_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Connect_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Connect_Update));
  Project_Library_AST_Function_Graph_Disconnect_descriptor_ = Project_Library_AST_Function_Graph_descriptor_->nested_type(4);
  static const int Project_Library_AST_Function_Graph_Disconnect_offsets_[1] = {
  };
  Project_Library_AST_Function_Graph_Disconnect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Disconnect_descriptor_,
      Project_Library_AST_Function_Graph_Disconnect::default_instance_,
      Project_Library_AST_Function_Graph_Disconnect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Disconnect));
  Project_Library_AST_Function_Graph_Disconnect_Request_descriptor_ = Project_Library_AST_Function_Graph_Disconnect_descriptor_->nested_type(0);
  static const int Project_Library_AST_Function_Graph_Disconnect_Request_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, srcnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, srcport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, dstnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, dstport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, projectid_),
  };
  Project_Library_AST_Function_Graph_Disconnect_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Disconnect_Request_descriptor_,
      Project_Library_AST_Function_Graph_Disconnect_Request::default_instance_,
      Project_Library_AST_Function_Graph_Disconnect_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Disconnect_Request));
  Project_Library_AST_Function_Graph_Disconnect_Update_descriptor_ = Project_Library_AST_Function_Graph_Disconnect_descriptor_->nested_type(1);
  static const int Project_Library_AST_Function_Graph_Disconnect_Update_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, srcnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, srcport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, dstnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, dstport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, projectid_),
  };
  Project_Library_AST_Function_Graph_Disconnect_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Function_Graph_Disconnect_Update_descriptor_,
      Project_Library_AST_Function_Graph_Disconnect_Update::default_instance_,
      Project_Library_AST_Function_Graph_Disconnect_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Function_Graph_Disconnect_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Function_Graph_Disconnect_Update));
  Project_Library_AST_Remove_descriptor_ = Project_Library_AST_descriptor_->nested_type(4);
  static const int Project_Library_AST_Remove_offsets_[1] = {
  };
  Project_Library_AST_Remove_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Remove_descriptor_,
      Project_Library_AST_Remove::default_instance_,
      Project_Library_AST_Remove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Remove));
  Project_Library_AST_Remove_Request_descriptor_ = Project_Library_AST_Remove_descriptor_->nested_type(0);
  static const int Project_Library_AST_Remove_Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Request, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Request, projectid_),
  };
  Project_Library_AST_Remove_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Remove_Request_descriptor_,
      Project_Library_AST_Remove_Request::default_instance_,
      Project_Library_AST_Remove_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Remove_Request));
  Project_Library_AST_Remove_Update_descriptor_ = Project_Library_AST_Remove_descriptor_->nested_type(1);
  static const int Project_Library_AST_Remove_Update_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Update, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Update, projectid_),
  };
  Project_Library_AST_Remove_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Remove_Update_descriptor_,
      Project_Library_AST_Remove_Update::default_instance_,
      Project_Library_AST_Remove_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Remove_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Remove_Update));
  Project_Library_AST_Resolve_descriptor_ = Project_Library_AST_descriptor_->nested_type(5);
  static const int Project_Library_AST_Resolve_offsets_[1] = {
  };
  Project_Library_AST_Resolve_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Resolve_descriptor_,
      Project_Library_AST_Resolve::default_instance_,
      Project_Library_AST_Resolve_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Resolve));
  Project_Library_AST_Resolve_Request_descriptor_ = Project_Library_AST_Resolve_descriptor_->nested_type(0);
  static const int Project_Library_AST_Resolve_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Request, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Request, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Request, projectid_),
  };
  Project_Library_AST_Resolve_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Resolve_Request_descriptor_,
      Project_Library_AST_Resolve_Request::default_instance_,
      Project_Library_AST_Resolve_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Resolve_Request));
  Project_Library_AST_Resolve_Status_descriptor_ = Project_Library_AST_Resolve_descriptor_->nested_type(1);
  static const int Project_Library_AST_Resolve_Status_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Status, astptr_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Status, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Status, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Status, projectid_),
  };
  Project_Library_AST_Resolve_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Resolve_Status_descriptor_,
      Project_Library_AST_Resolve_Status::default_instance_,
      Project_Library_AST_Resolve_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Resolve_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Resolve_Status));
  Project_Library_AST_Properties_descriptor_ = Project_Library_AST_descriptor_->nested_type(6);
  static const int Project_Library_AST_Properties_offsets_[1] = {
  };
  Project_Library_AST_Properties_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Properties_descriptor_,
      Project_Library_AST_Properties::default_instance_,
      Project_Library_AST_Properties_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Properties));
  Project_Library_AST_Properties_Get_descriptor_ = Project_Library_AST_Properties_descriptor_->nested_type(0);
  static const int Project_Library_AST_Properties_Get_offsets_[1] = {
  };
  Project_Library_AST_Properties_Get_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Properties_Get_descriptor_,
      Project_Library_AST_Properties_Get::default_instance_,
      Project_Library_AST_Properties_Get_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Properties_Get));
  Project_Library_AST_Properties_Get_Request_descriptor_ = Project_Library_AST_Properties_Get_descriptor_->nested_type(0);
  static const int Project_Library_AST_Properties_Get_Request_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Request, projectid_),
  };
  Project_Library_AST_Properties_Get_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Properties_Get_Request_descriptor_,
      Project_Library_AST_Properties_Get_Request::default_instance_,
      Project_Library_AST_Properties_Get_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Properties_Get_Request));
  Project_Library_AST_Properties_Get_Status_descriptor_ = Project_Library_AST_Properties_Get_descriptor_->nested_type(1);
  static const int Project_Library_AST_Properties_Get_Status_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Status, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Status, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Status, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Status, projectid_),
  };
  Project_Library_AST_Properties_Get_Status_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Properties_Get_Status_descriptor_,
      Project_Library_AST_Properties_Get_Status::default_instance_,
      Project_Library_AST_Properties_Get_Status_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Status, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Get_Status, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Properties_Get_Status));
  Project_Library_AST_Properties_Set_descriptor_ = Project_Library_AST_Properties_descriptor_->nested_type(1);
  static const int Project_Library_AST_Properties_Set_offsets_[1] = {
  };
  Project_Library_AST_Properties_Set_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Properties_Set_descriptor_,
      Project_Library_AST_Properties_Set::default_instance_,
      Project_Library_AST_Properties_Set_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Properties_Set));
  Project_Library_AST_Properties_Set_Request_descriptor_ = Project_Library_AST_Properties_Set_descriptor_->nested_type(0);
  static const int Project_Library_AST_Properties_Set_Request_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Request, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Request, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Request, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Request, projectid_),
  };
  Project_Library_AST_Properties_Set_Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Properties_Set_Request_descriptor_,
      Project_Library_AST_Properties_Set_Request::default_instance_,
      Project_Library_AST_Properties_Set_Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Request, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Properties_Set_Request));
  Project_Library_AST_Properties_Set_Update_descriptor_ = Project_Library_AST_Properties_Set_descriptor_->nested_type(1);
  static const int Project_Library_AST_Properties_Set_Update_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Update, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Update, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Update, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Update, projectid_),
  };
  Project_Library_AST_Properties_Set_Update_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Library_AST_Properties_Set_Update_descriptor_,
      Project_Library_AST_Properties_Set_Update::default_instance_,
      Project_Library_AST_Properties_Set_Update_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Update, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Library_AST_Properties_Set_Update, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Library_AST_Properties_Set_Update));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_project_2dmanager_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_descriptor_, &Project::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_List_descriptor_, &Project_List::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_List_Request_descriptor_, &Project_List_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_List_Status_descriptor_, &Project_List_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Lookup_descriptor_, &Project_Lookup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Lookup_Request_descriptor_, &Project_Lookup_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Lookup_Status_descriptor_, &Project_Lookup_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Create_descriptor_, &Project_Create::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Create_Request_descriptor_, &Project_Create_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Create_Update_descriptor_, &Project_Create_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Open_descriptor_, &Project_Open::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Open_Request_descriptor_, &Project_Open_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Open_Update_descriptor_, &Project_Open_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Modify_descriptor_, &Project_Modify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Modify_Request_descriptor_, &Project_Modify_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Modify_Update_descriptor_, &Project_Modify_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Close_descriptor_, &Project_Close::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Close_Request_descriptor_, &Project_Close_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Close_Update_descriptor_, &Project_Close_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Store_descriptor_, &Project_Store::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Store_Request_descriptor_, &Project_Store_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Store_Status_descriptor_, &Project_Store_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_descriptor_, &Project_Library::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_List_descriptor_, &Project_Library_List::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_List_Request_descriptor_, &Project_Library_List_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_List_Status_descriptor_, &Project_Library_List_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Lookup_descriptor_, &Project_Library_Lookup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Lookup_Request_descriptor_, &Project_Library_Lookup_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Lookup_Status_descriptor_, &Project_Library_Lookup_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Create_descriptor_, &Project_Library_Create::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Create_Request_descriptor_, &Project_Library_Create_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Create_Update_descriptor_, &Project_Library_Create_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Load_descriptor_, &Project_Library_Load::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Load_Request_descriptor_, &Project_Library_Load_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Load_Update_descriptor_, &Project_Library_Load_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Unload_descriptor_, &Project_Library_Unload::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Unload_Request_descriptor_, &Project_Library_Unload_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Unload_Update_descriptor_, &Project_Library_Unload_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Store_descriptor_, &Project_Library_Store::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Store_Request_descriptor_, &Project_Library_Store_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_Store_Status_descriptor_, &Project_Library_Store_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_descriptor_, &Project_Library_AST::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Get_descriptor_, &Project_Library_AST_Get::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Get_Request_descriptor_, &Project_Library_AST_Get_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Get_Status_descriptor_, &Project_Library_AST_Get_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_descriptor_, &Project_Library_AST_Module::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Add_descriptor_, &Project_Library_AST_Module_Add::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Add_Request_descriptor_, &Project_Library_AST_Module_Add_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Add_Update_descriptor_, &Project_Library_AST_Module_Add_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_descriptor_, &Project_Library_AST_Module_Modify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Cls_descriptor_, &Project_Library_AST_Module_Modify_Cls::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Cls_Request_descriptor_, &Project_Library_AST_Module_Modify_Cls_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Cls_Update_descriptor_, &Project_Library_AST_Module_Modify_Cls_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Imports_descriptor_, &Project_Library_AST_Module_Modify_Imports::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Imports_Request_descriptor_, &Project_Library_AST_Module_Modify_Imports_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Imports_Update_descriptor_, &Project_Library_AST_Module_Modify_Imports_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Fields_descriptor_, &Project_Library_AST_Module_Modify_Fields::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Fields_Request_descriptor_, &Project_Library_AST_Module_Modify_Fields_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Module_Modify_Fields_Update_descriptor_, &Project_Library_AST_Module_Modify_Fields_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_descriptor_, &Project_Library_AST_Data::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Add_descriptor_, &Project_Library_AST_Data_Add::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Add_Request_descriptor_, &Project_Library_AST_Data_Add_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Add_Update_descriptor_, &Project_Library_AST_Data_Add_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_descriptor_, &Project_Library_AST_Data_Modify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Cls_descriptor_, &Project_Library_AST_Data_Modify_Cls::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Cls_Request_descriptor_, &Project_Library_AST_Data_Modify_Cls_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Cls_Update_descriptor_, &Project_Library_AST_Data_Modify_Cls_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Cons_descriptor_, &Project_Library_AST_Data_Modify_Cons::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Cons_Request_descriptor_, &Project_Library_AST_Data_Modify_Cons_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Cons_Update_descriptor_, &Project_Library_AST_Data_Modify_Cons_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Classes_descriptor_, &Project_Library_AST_Data_Modify_Classes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Classes_Request_descriptor_, &Project_Library_AST_Data_Modify_Classes_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Classes_Update_descriptor_, &Project_Library_AST_Data_Modify_Classes_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Methods_descriptor_, &Project_Library_AST_Data_Modify_Methods::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Methods_Request_descriptor_, &Project_Library_AST_Data_Modify_Methods_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Data_Modify_Methods_Update_descriptor_, &Project_Library_AST_Data_Modify_Methods_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_descriptor_, &Project_Library_AST_Function::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Add_descriptor_, &Project_Library_AST_Function_Add::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Add_Request_descriptor_, &Project_Library_AST_Function_Add_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Add_Update_descriptor_, &Project_Library_AST_Function_Add_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_descriptor_, &Project_Library_AST_Function_Modify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Name_descriptor_, &Project_Library_AST_Function_Modify_Name::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Name_Request_descriptor_, &Project_Library_AST_Function_Modify_Name_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Name_Update_descriptor_, &Project_Library_AST_Function_Modify_Name_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Path_descriptor_, &Project_Library_AST_Function_Modify_Path::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Path_Request_descriptor_, &Project_Library_AST_Function_Modify_Path_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Path_Update_descriptor_, &Project_Library_AST_Function_Modify_Path_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Inputs_descriptor_, &Project_Library_AST_Function_Modify_Inputs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Inputs_Request_descriptor_, &Project_Library_AST_Function_Modify_Inputs_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Inputs_Update_descriptor_, &Project_Library_AST_Function_Modify_Inputs_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Output_descriptor_, &Project_Library_AST_Function_Modify_Output::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Output_Request_descriptor_, &Project_Library_AST_Function_Modify_Output_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Modify_Output_Update_descriptor_, &Project_Library_AST_Function_Modify_Output_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_descriptor_, &Project_Library_AST_Function_Graph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Get_descriptor_, &Project_Library_AST_Function_Graph_Get::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Get_Request_descriptor_, &Project_Library_AST_Function_Graph_Get_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Get_Status_descriptor_, &Project_Library_AST_Function_Graph_Get_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Lookup_descriptor_, &Project_Library_AST_Function_Graph_Lookup::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Lookup_Request_descriptor_, &Project_Library_AST_Function_Graph_Lookup_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Lookup_Status_descriptor_, &Project_Library_AST_Function_Graph_Lookup_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_descriptor_, &Project_Library_AST_Function_Graph_Node::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Add_descriptor_, &Project_Library_AST_Function_Graph_Node_Add::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Add_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_Add_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Add_Update_descriptor_, &Project_Library_AST_Function_Graph_Node_Add_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Modify_descriptor_, &Project_Library_AST_Function_Graph_Node_Modify::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Modify_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_Modify_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Modify_Update_descriptor_, &Project_Library_AST_Function_Graph_Node_Modify_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_ModifyInPlace_descriptor_, &Project_Library_AST_Function_Graph_Node_ModifyInPlace::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_descriptor_, &Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Remove_descriptor_, &Project_Library_AST_Function_Graph_Node_Remove::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Remove_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_Remove_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Remove_Update_descriptor_, &Project_Library_AST_Function_Graph_Node_Remove_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_descriptor_, &Project_Library_AST_Function_Graph_Node_Default::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Get_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Get::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Get_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Get_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Get_Status_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Get_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Set_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Set::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Set_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Set_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Set_Update_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Set_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Remove_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Remove::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Remove_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Remove_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Default_Remove_Update_descriptor_, &Project_Library_AST_Function_Graph_Node_Default_Remove_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Properties_descriptor_, &Project_Library_AST_Function_Graph_Node_Properties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Properties_Get_descriptor_, &Project_Library_AST_Function_Graph_Node_Properties_Get::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Properties_Get_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_Properties_Get_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Properties_Get_Status_descriptor_, &Project_Library_AST_Function_Graph_Node_Properties_Get_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Properties_Set_descriptor_, &Project_Library_AST_Function_Graph_Node_Properties_Set::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Properties_Set_Request_descriptor_, &Project_Library_AST_Function_Graph_Node_Properties_Set_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Node_Properties_Set_Update_descriptor_, &Project_Library_AST_Function_Graph_Node_Properties_Set_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Connect_descriptor_, &Project_Library_AST_Function_Graph_Connect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Connect_Request_descriptor_, &Project_Library_AST_Function_Graph_Connect_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Connect_Update_descriptor_, &Project_Library_AST_Function_Graph_Connect_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Disconnect_descriptor_, &Project_Library_AST_Function_Graph_Disconnect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Disconnect_Request_descriptor_, &Project_Library_AST_Function_Graph_Disconnect_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Function_Graph_Disconnect_Update_descriptor_, &Project_Library_AST_Function_Graph_Disconnect_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Remove_descriptor_, &Project_Library_AST_Remove::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Remove_Request_descriptor_, &Project_Library_AST_Remove_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Remove_Update_descriptor_, &Project_Library_AST_Remove_Update::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Resolve_descriptor_, &Project_Library_AST_Resolve::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Resolve_Request_descriptor_, &Project_Library_AST_Resolve_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Resolve_Status_descriptor_, &Project_Library_AST_Resolve_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Properties_descriptor_, &Project_Library_AST_Properties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Properties_Get_descriptor_, &Project_Library_AST_Properties_Get::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Properties_Get_Request_descriptor_, &Project_Library_AST_Properties_Get_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Properties_Get_Status_descriptor_, &Project_Library_AST_Properties_Get_Status::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Properties_Set_descriptor_, &Project_Library_AST_Properties_Set::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Properties_Set_Request_descriptor_, &Project_Library_AST_Properties_Set_Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Library_AST_Properties_Set_Update_descriptor_, &Project_Library_AST_Properties_Set_Update::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_project_2dmanager_2eproto() {
  delete Project::default_instance_;
  delete Project_reflection_;
  delete Project_List::default_instance_;
  delete Project_List_reflection_;
  delete Project_List_Request::default_instance_;
  delete Project_List_Request_reflection_;
  delete Project_List_Status::default_instance_;
  delete Project_List_Status_reflection_;
  delete Project_Lookup::default_instance_;
  delete Project_Lookup_reflection_;
  delete Project_Lookup_Request::default_instance_;
  delete Project_Lookup_Request_reflection_;
  delete Project_Lookup_Status::default_instance_;
  delete Project_Lookup_Status_reflection_;
  delete Project_Create::default_instance_;
  delete Project_Create_reflection_;
  delete Project_Create_Request::default_instance_;
  delete Project_Create_Request_reflection_;
  delete Project_Create_Update::default_instance_;
  delete Project_Create_Update_reflection_;
  delete Project_Open::default_instance_;
  delete Project_Open_reflection_;
  delete Project_Open_Request::default_instance_;
  delete Project_Open_Request_reflection_;
  delete Project_Open_Update::default_instance_;
  delete Project_Open_Update_reflection_;
  delete Project_Modify::default_instance_;
  delete Project_Modify_reflection_;
  delete Project_Modify_Request::default_instance_;
  delete Project_Modify_Request_reflection_;
  delete Project_Modify_Update::default_instance_;
  delete Project_Modify_Update_reflection_;
  delete Project_Close::default_instance_;
  delete Project_Close_reflection_;
  delete Project_Close_Request::default_instance_;
  delete Project_Close_Request_reflection_;
  delete Project_Close_Update::default_instance_;
  delete Project_Close_Update_reflection_;
  delete Project_Store::default_instance_;
  delete Project_Store_reflection_;
  delete Project_Store_Request::default_instance_;
  delete Project_Store_Request_reflection_;
  delete Project_Store_Status::default_instance_;
  delete Project_Store_Status_reflection_;
  delete Project_Library::default_instance_;
  delete Project_Library_reflection_;
  delete Project_Library_List::default_instance_;
  delete Project_Library_List_reflection_;
  delete Project_Library_List_Request::default_instance_;
  delete Project_Library_List_Request_reflection_;
  delete Project_Library_List_Status::default_instance_;
  delete Project_Library_List_Status_reflection_;
  delete Project_Library_Lookup::default_instance_;
  delete Project_Library_Lookup_reflection_;
  delete Project_Library_Lookup_Request::default_instance_;
  delete Project_Library_Lookup_Request_reflection_;
  delete Project_Library_Lookup_Status::default_instance_;
  delete Project_Library_Lookup_Status_reflection_;
  delete Project_Library_Create::default_instance_;
  delete Project_Library_Create_reflection_;
  delete Project_Library_Create_Request::default_instance_;
  delete Project_Library_Create_Request_reflection_;
  delete Project_Library_Create_Update::default_instance_;
  delete Project_Library_Create_Update_reflection_;
  delete Project_Library_Load::default_instance_;
  delete Project_Library_Load_reflection_;
  delete Project_Library_Load_Request::default_instance_;
  delete Project_Library_Load_Request_reflection_;
  delete Project_Library_Load_Update::default_instance_;
  delete Project_Library_Load_Update_reflection_;
  delete Project_Library_Unload::default_instance_;
  delete Project_Library_Unload_reflection_;
  delete Project_Library_Unload_Request::default_instance_;
  delete Project_Library_Unload_Request_reflection_;
  delete Project_Library_Unload_Update::default_instance_;
  delete Project_Library_Unload_Update_reflection_;
  delete Project_Library_Store::default_instance_;
  delete Project_Library_Store_reflection_;
  delete Project_Library_Store_Request::default_instance_;
  delete Project_Library_Store_Request_reflection_;
  delete Project_Library_Store_Status::default_instance_;
  delete Project_Library_Store_Status_reflection_;
  delete Project_Library_AST::default_instance_;
  delete Project_Library_AST_reflection_;
  delete Project_Library_AST_Get::default_instance_;
  delete Project_Library_AST_Get_reflection_;
  delete Project_Library_AST_Get_Request::default_instance_;
  delete Project_Library_AST_Get_Request_reflection_;
  delete Project_Library_AST_Get_Status::default_instance_;
  delete Project_Library_AST_Get_Status_reflection_;
  delete Project_Library_AST_Module::default_instance_;
  delete Project_Library_AST_Module_reflection_;
  delete Project_Library_AST_Module_Add::default_instance_;
  delete Project_Library_AST_Module_Add_reflection_;
  delete Project_Library_AST_Module_Add_Request::default_instance_;
  delete Project_Library_AST_Module_Add_Request_reflection_;
  delete Project_Library_AST_Module_Add_Update::default_instance_;
  delete Project_Library_AST_Module_Add_Update_reflection_;
  delete Project_Library_AST_Module_Modify::default_instance_;
  delete Project_Library_AST_Module_Modify_reflection_;
  delete Project_Library_AST_Module_Modify_Cls::default_instance_;
  delete Project_Library_AST_Module_Modify_Cls_reflection_;
  delete Project_Library_AST_Module_Modify_Cls_Request::default_instance_;
  delete Project_Library_AST_Module_Modify_Cls_Request_reflection_;
  delete Project_Library_AST_Module_Modify_Cls_Update::default_instance_;
  delete Project_Library_AST_Module_Modify_Cls_Update_reflection_;
  delete Project_Library_AST_Module_Modify_Imports::default_instance_;
  delete Project_Library_AST_Module_Modify_Imports_reflection_;
  delete Project_Library_AST_Module_Modify_Imports_Request::default_instance_;
  delete Project_Library_AST_Module_Modify_Imports_Request_reflection_;
  delete Project_Library_AST_Module_Modify_Imports_Update::default_instance_;
  delete Project_Library_AST_Module_Modify_Imports_Update_reflection_;
  delete Project_Library_AST_Module_Modify_Fields::default_instance_;
  delete Project_Library_AST_Module_Modify_Fields_reflection_;
  delete Project_Library_AST_Module_Modify_Fields_Request::default_instance_;
  delete Project_Library_AST_Module_Modify_Fields_Request_reflection_;
  delete Project_Library_AST_Module_Modify_Fields_Update::default_instance_;
  delete Project_Library_AST_Module_Modify_Fields_Update_reflection_;
  delete Project_Library_AST_Data::default_instance_;
  delete Project_Library_AST_Data_reflection_;
  delete Project_Library_AST_Data_Add::default_instance_;
  delete Project_Library_AST_Data_Add_reflection_;
  delete Project_Library_AST_Data_Add_Request::default_instance_;
  delete Project_Library_AST_Data_Add_Request_reflection_;
  delete Project_Library_AST_Data_Add_Update::default_instance_;
  delete Project_Library_AST_Data_Add_Update_reflection_;
  delete Project_Library_AST_Data_Modify::default_instance_;
  delete Project_Library_AST_Data_Modify_reflection_;
  delete Project_Library_AST_Data_Modify_Cls::default_instance_;
  delete Project_Library_AST_Data_Modify_Cls_reflection_;
  delete Project_Library_AST_Data_Modify_Cls_Request::default_instance_;
  delete Project_Library_AST_Data_Modify_Cls_Request_reflection_;
  delete Project_Library_AST_Data_Modify_Cls_Update::default_instance_;
  delete Project_Library_AST_Data_Modify_Cls_Update_reflection_;
  delete Project_Library_AST_Data_Modify_Cons::default_instance_;
  delete Project_Library_AST_Data_Modify_Cons_reflection_;
  delete Project_Library_AST_Data_Modify_Cons_Request::default_instance_;
  delete Project_Library_AST_Data_Modify_Cons_Request_reflection_;
  delete Project_Library_AST_Data_Modify_Cons_Update::default_instance_;
  delete Project_Library_AST_Data_Modify_Cons_Update_reflection_;
  delete Project_Library_AST_Data_Modify_Classes::default_instance_;
  delete Project_Library_AST_Data_Modify_Classes_reflection_;
  delete Project_Library_AST_Data_Modify_Classes_Request::default_instance_;
  delete Project_Library_AST_Data_Modify_Classes_Request_reflection_;
  delete Project_Library_AST_Data_Modify_Classes_Update::default_instance_;
  delete Project_Library_AST_Data_Modify_Classes_Update_reflection_;
  delete Project_Library_AST_Data_Modify_Methods::default_instance_;
  delete Project_Library_AST_Data_Modify_Methods_reflection_;
  delete Project_Library_AST_Data_Modify_Methods_Request::default_instance_;
  delete Project_Library_AST_Data_Modify_Methods_Request_reflection_;
  delete Project_Library_AST_Data_Modify_Methods_Update::default_instance_;
  delete Project_Library_AST_Data_Modify_Methods_Update_reflection_;
  delete Project_Library_AST_Function::default_instance_;
  delete Project_Library_AST_Function_reflection_;
  delete Project_Library_AST_Function_Add::default_instance_;
  delete Project_Library_AST_Function_Add_reflection_;
  delete Project_Library_AST_Function_Add_Request::default_instance_;
  delete Project_Library_AST_Function_Add_Request_reflection_;
  delete Project_Library_AST_Function_Add_Update::default_instance_;
  delete Project_Library_AST_Function_Add_Update_reflection_;
  delete Project_Library_AST_Function_Modify::default_instance_;
  delete Project_Library_AST_Function_Modify_reflection_;
  delete Project_Library_AST_Function_Modify_Name::default_instance_;
  delete Project_Library_AST_Function_Modify_Name_reflection_;
  delete Project_Library_AST_Function_Modify_Name_Request::default_instance_;
  delete Project_Library_AST_Function_Modify_Name_Request_reflection_;
  delete Project_Library_AST_Function_Modify_Name_Update::default_instance_;
  delete Project_Library_AST_Function_Modify_Name_Update_reflection_;
  delete Project_Library_AST_Function_Modify_Path::default_instance_;
  delete Project_Library_AST_Function_Modify_Path_reflection_;
  delete Project_Library_AST_Function_Modify_Path_Request::default_instance_;
  delete Project_Library_AST_Function_Modify_Path_Request_reflection_;
  delete Project_Library_AST_Function_Modify_Path_Update::default_instance_;
  delete Project_Library_AST_Function_Modify_Path_Update_reflection_;
  delete Project_Library_AST_Function_Modify_Inputs::default_instance_;
  delete Project_Library_AST_Function_Modify_Inputs_reflection_;
  delete Project_Library_AST_Function_Modify_Inputs_Request::default_instance_;
  delete Project_Library_AST_Function_Modify_Inputs_Request_reflection_;
  delete Project_Library_AST_Function_Modify_Inputs_Update::default_instance_;
  delete Project_Library_AST_Function_Modify_Inputs_Update_reflection_;
  delete Project_Library_AST_Function_Modify_Output::default_instance_;
  delete Project_Library_AST_Function_Modify_Output_reflection_;
  delete Project_Library_AST_Function_Modify_Output_Request::default_instance_;
  delete Project_Library_AST_Function_Modify_Output_Request_reflection_;
  delete Project_Library_AST_Function_Modify_Output_Update::default_instance_;
  delete Project_Library_AST_Function_Modify_Output_Update_reflection_;
  delete Project_Library_AST_Function_Graph::default_instance_;
  delete Project_Library_AST_Function_Graph_reflection_;
  delete Project_Library_AST_Function_Graph_Get::default_instance_;
  delete Project_Library_AST_Function_Graph_Get_reflection_;
  delete Project_Library_AST_Function_Graph_Get_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Get_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Get_Status::default_instance_;
  delete Project_Library_AST_Function_Graph_Get_Status_reflection_;
  delete Project_Library_AST_Function_Graph_Lookup::default_instance_;
  delete Project_Library_AST_Function_Graph_Lookup_reflection_;
  delete Project_Library_AST_Function_Graph_Lookup_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Lookup_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Lookup_Status::default_instance_;
  delete Project_Library_AST_Function_Graph_Lookup_Status_reflection_;
  delete Project_Library_AST_Function_Graph_Node::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Add::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Add_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Add_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Add_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Add_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Add_Update_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Modify::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Modify_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Modify_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Modify_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Modify_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Modify_Update_reflection_;
  delete Project_Library_AST_Function_Graph_Node_ModifyInPlace::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_ModifyInPlace_reflection_;
  delete Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Remove::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Remove_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Remove_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Remove_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Remove_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Remove_Update_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Get::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Get_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Get_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Get_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Get_Status::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Get_Status_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Set::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Set_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Set_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Set_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Set_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Set_Update_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Remove::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Remove_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Remove_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Remove_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Default_Remove_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Default_Remove_Update_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Properties::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Properties_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Get::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Get_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Get_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Get_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Get_Status::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Get_Status_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Set::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Set_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Set_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Set_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Set_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Node_Properties_Set_Update_reflection_;
  delete Project_Library_AST_Function_Graph_Connect::default_instance_;
  delete Project_Library_AST_Function_Graph_Connect_reflection_;
  delete Project_Library_AST_Function_Graph_Connect_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Connect_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Connect_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Connect_Update_reflection_;
  delete Project_Library_AST_Function_Graph_Disconnect::default_instance_;
  delete Project_Library_AST_Function_Graph_Disconnect_reflection_;
  delete Project_Library_AST_Function_Graph_Disconnect_Request::default_instance_;
  delete Project_Library_AST_Function_Graph_Disconnect_Request_reflection_;
  delete Project_Library_AST_Function_Graph_Disconnect_Update::default_instance_;
  delete Project_Library_AST_Function_Graph_Disconnect_Update_reflection_;
  delete Project_Library_AST_Remove::default_instance_;
  delete Project_Library_AST_Remove_reflection_;
  delete Project_Library_AST_Remove_Request::default_instance_;
  delete Project_Library_AST_Remove_Request_reflection_;
  delete Project_Library_AST_Remove_Update::default_instance_;
  delete Project_Library_AST_Remove_Update_reflection_;
  delete Project_Library_AST_Resolve::default_instance_;
  delete Project_Library_AST_Resolve_reflection_;
  delete Project_Library_AST_Resolve_Request::default_instance_;
  delete Project_Library_AST_Resolve_Request_reflection_;
  delete Project_Library_AST_Resolve_Status::default_instance_;
  delete Project_Library_AST_Resolve_Status_reflection_;
  delete Project_Library_AST_Properties::default_instance_;
  delete Project_Library_AST_Properties_reflection_;
  delete Project_Library_AST_Properties_Get::default_instance_;
  delete Project_Library_AST_Properties_Get_reflection_;
  delete Project_Library_AST_Properties_Get_Request::default_instance_;
  delete Project_Library_AST_Properties_Get_Request_reflection_;
  delete Project_Library_AST_Properties_Get_Status::default_instance_;
  delete Project_Library_AST_Properties_Get_Status_reflection_;
  delete Project_Library_AST_Properties_Set::default_instance_;
  delete Project_Library_AST_Properties_Set_reflection_;
  delete Project_Library_AST_Properties_Set_Request::default_instance_;
  delete Project_Library_AST_Properties_Set_Request_reflection_;
  delete Project_Library_AST_Properties_Set_Update::default_instance_;
  delete Project_Library_AST_Properties_Set_Update_reflection_;
}

void protobuf_AddDesc_project_2dmanager_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::generated::proto::attributes::protobuf_AddDesc_attributes_2eproto();
  ::generated::proto::crumb::protobuf_AddDesc_crumb_2eproto();
  ::generated::proto::expr::protobuf_AddDesc_expr_2eproto();
  ::generated::proto::focus::protobuf_AddDesc_focus_2eproto();
  ::generated::proto::graph::protobuf_AddDesc_graph_2eproto();
  ::generated::proto::graphview::protobuf_AddDesc_graphview_2eproto();
  ::generated::proto::library::protobuf_AddDesc_library_2eproto();
  ::generated::proto::module::protobuf_AddDesc_module_2eproto();
  ::generated::proto::nodedefault::protobuf_AddDesc_nodedefault_2eproto();
  ::generated::proto::project::protobuf_AddDesc_project_2eproto();
  ::generated::proto::type::protobuf_AddDesc_type_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\025project-manager.proto\022\036generated.proto"
    ".projectManager\032\020attributes.proto\032\013crumb"
    ".proto\032\nexpr.proto\032\013focus.proto\032\013graph.p"
    "roto\032\017graphview.proto\032\rlibrary.proto\032\014mo"
    "dule.proto\032\021nodedefault.proto\032\rproject.p"
    "roto\032\ntype.proto\"\326S\n\007Project\032O\n\004List\032\t\n\007"
    "Request\032<\n\006Status\0222\n\010projects\030\001 \003(\0132 .ge"
    "nerated.proto.project.Project\032c\n\006Lookup\032"
    "\034\n\007Request\022\021\n\tprojectID\030\001 \002(\005\032;\n\006Status\022"
    "1\n\007project\030\001 \002(\0132 .generated.proto.proje"
    "ct.Project\032\250\001\n\006Create\032a\n\007Request\022\014\n\004name"
    "\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\022:\n\nattributes\030\003 \002(\013"
    "2&.generated.proto.attributes.Attributes"
    "\032;\n\006Update\0221\n\007project\030\001 \002(\0132 .generated."
    "proto.project.Project\032\\\n\004Open\032\027\n\007Request"
    "\022\014\n\004path\030\001 \002(\t\032;\n\006Update\0221\n\007project\030\001 \002("
    "\0132 .generated.proto.project.Project\032\203\001\n\006"
    "Modify\032<\n\007Request\0221\n\007project\030\001 \002(\0132 .gen"
    "erated.proto.project.Project\032;\n\006Update\0221"
    "\n\007project\030\001 \002(\0132 .generated.proto.projec"
    "t.Project\032B\n\005Close\032\034\n\007Request\022\021\n\tproject"
    "ID\030\001 \002(\005\032\033\n\006Update\022\021\n\tprojectID\030\001 \002(\005\032B\n"
    "\005Store\032\034\n\007Request\022\021\n\tprojectID\030\001 \002(\005\032\033\n\006"
    "Status\022\021\n\tprojectID\030\001 \002(\005\032\375M\n\007Library\032v\n"
    "\004List\032\034\n\007Request\022\021\n\tprojectID\030\001 \002(\005\032P\n\006S"
    "tatus\0223\n\tlibraries\030\001 \003(\0132 .generated.pro"
    "to.library.Library\022\021\n\tprojectID\030\002 \002(\005\032\211\001"
    "\n\006Lookup\032/\n\007Request\022\021\n\tlibraryID\030\001 \002(\005\022\021"
    "\n\tprojectID\030\002 \002(\005\032N\n\006Status\0221\n\007library\030\001"
    " \002(\0132 .generated.proto.library.Library\022\021"
    "\n\tprojectID\030\002 \002(\005\032\222\001\n\006Create\0328\n\007Request\022"
    "\014\n\004name\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\022\021\n\tprojectID"
    "\030\003 \002(\005\032N\n\006Update\0221\n\007library\030\001 \002(\0132 .gene"
    "rated.proto.library.Library\022\021\n\tprojectID"
    "\030\002 \002(\005\032\202\001\n\004Load\032*\n\007Request\022\014\n\004path\030\001 \002(\t"
    "\022\021\n\tprojectID\030\002 \002(\005\032N\n\006Update\0221\n\007library"
    "\030\001 \002(\0132 .generated.proto.library.Library"
    "\022\021\n\tprojectID\030\002 \002(\005\032i\n\006Unload\032/\n\007Request"
    "\022\021\n\tlibraryID\030\001 \002(\005\022\021\n\tprojectID\030\002 \002(\005\032."
    "\n\006Update\022\021\n\tlibraryID\030\001 \002(\005\022\021\n\tprojectID"
    "\030\002 \002(\005\032h\n\005Store\032/\n\007Request\022\021\n\tlibraryID\030"
    "\001 \002(\005\022\021\n\tprojectID\030\002 \002(\005\032.\n\006Status\022\021\n\tli"
    "braryID\030\001 \002(\005\022\021\n\tprojectID\030\002 \002(\005\032\376G\n\003AST"
    "\032\230\002\n\003Get\032q\n\007Request\022\020\n\010maxDepth\030\001 \001(\005\022.\n"
    "\002bc\030\002 \002(\0132\".generated.proto.crumb.Breadc"
    "rumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 "
    "\002(\005\032\235\001\n\006Status\022+\n\005focus\030\001 \002(\0132\034.generate"
    "d.proto.focus.Focus\022\020\n\010maxDepth\030\002 \001(\005\022.\n"
    "\002bc\030\003 \002(\0132\".generated.proto.crumb.Breadc"
    "rumbs\022\021\n\tlibraryID\030\004 \002(\005\022\021\n\tprojectID\030\005 "
    "\002(\005\032\260\t\n\006Module\032\256\002\n\003Add\032\225\001\n\007Request\022.\n\006mo"
    "dule\030\001 \002(\0132\036.generated.proto.module.Modu"
    "le\0224\n\010parentbc\030\002 \002(\0132\".generated.proto.c"
    "rumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tp"
    "rojectID\030\004 \002(\005\032\216\001\n\006Update\022.\n\006module\030\001 \002("
    "\0132\036.generated.proto.module.Module\022.\n\002bc\030"
    "\002 \002(\0132\".generated.proto.crumb.Breadcrumb"
    "s\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032"
    "\364\006\n\006Modify\032\232\002\n\003Cls\032\210\001\n\007Request\022\'\n\003cls\030\001 "
    "\002(\0132\032.generated.proto.type.Type\022.\n\002bc\030\002 "
    "\002(\0132\".generated.proto.crumb.Breadcrumbs\022"
    "\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\207\001"
    "\n\006Update\022\'\n\003cls\030\001 \002(\0132\032.generated.proto."
    "type.Type\022.\n\002bc\030\002 \002(\0132\".generated.proto."
    "crumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\t"
    "projectID\030\004 \002(\005\032\246\002\n\007Imports\032\214\001\n\007Request\022"
    "+\n\007imports\030\001 \003(\0132\032.generated.proto.expr."
    "Expr\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb"
    ".Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tproje"
    "ctID\030\004 \002(\005\032\213\001\n\006Update\022+\n\007imports\030\001 \003(\0132\032"
    ".generated.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\""
    ".generated.proto.crumb.Breadcrumbs\022\021\n\tli"
    "braryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\243\002\n\006Fie"
    "lds\032\213\001\n\007Request\022*\n\006fields\030\001 \003(\0132\032.genera"
    "ted.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\".genera"
    "ted.proto.crumb.Breadcrumbs\022\021\n\tlibraryID"
    "\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\212\001\n\006Update\022*\n\006"
    "fields\030\001 \003(\0132\032.generated.proto.expr.Expr"
    "\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb.Bre"
    "adcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID"
    "\030\004 \002(\005\032\307\013\n\004Data\032\244\002\n\003Add\032\220\001\n\007Request\022)\n\005d"
    "ata_\030\001 \002(\0132\032.generated.proto.expr.Expr\0224"
    "\n\010parentbc\030\002 \002(\0132\".generated.proto.crumb"
    ".Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tproje"
    "ctID\030\004 \002(\005\032\211\001\n\006Update\022)\n\005data_\030\001 \002(\0132\032.g"
    "enerated.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\".g"
    "enerated.proto.crumb.Breadcrumbs\022\021\n\tlibr"
    "aryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\227\t\n\006Modif"
    "y\032\232\002\n\003Cls\032\210\001\n\007Request\022\'\n\003cls\030\001 \002(\0132\032.gen"
    "erated.proto.type.Type\022.\n\002bc\030\002 \002(\0132\".gen"
    "erated.proto.crumb.Breadcrumbs\022\021\n\tlibrar"
    "yID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\207\001\n\006Update\022"
    "\'\n\003cls\030\001 \002(\0132\032.generated.proto.type.Type"
    "\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb.Bre"
    "adcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID"
    "\030\004 \002(\005\032\235\002\n\004Cons\032\211\001\n\007Request\022(\n\004cons\030\001 \003("
    "\0132\032.generated.proto.expr.Expr\022.\n\002bc\030\002 \002("
    "\0132\".generated.proto.crumb.Breadcrumbs\022\021\n"
    "\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\210\001\n\006"
    "Update\022(\n\004cons\030\001 \003(\0132\032.generated.proto.e"
    "xpr.Expr\022.\n\002bc\030\002 \002(\0132\".generated.proto.c"
    "rumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tp"
    "rojectID\030\004 \002(\005\032\246\002\n\007Classes\032\214\001\n\007Request\022+"
    "\n\007classes\030\001 \003(\0132\032.generated.proto.expr.E"
    "xpr\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb."
    "Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojec"
    "tID\030\004 \002(\005\032\213\001\n\006Update\022+\n\007classes\030\001 \003(\0132\032."
    "generated.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\"."
    "generated.proto.crumb.Breadcrumbs\022\021\n\tlib"
    "raryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\246\002\n\007Meth"
    "ods\032\214\001\n\007Request\022+\n\007methods\030\001 \003(\0132\032.gener"
    "ated.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\".gener"
    "ated.proto.crumb.Breadcrumbs\022\021\n\tlibraryI"
    "D\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\213\001\n\006Update\022+\n"
    "\007methods\030\001 \003(\0132\032.generated.proto.expr.Ex"
    "pr\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb.B"
    "readcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tproject"
    "ID\030\004 \002(\005\032\246)\n\010Function\032\252\002\n\003Add\032\223\001\n\007Reques"
    "t\022,\n\010function\030\001 \002(\0132\032.generated.proto.ex"
    "pr.Expr\0224\n\010parentbc\030\002 \002(\0132\".generated.pr"
    "oto.crumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005"
    "\022\021\n\tprojectID\030\004 \002(\005\032\214\001\n\006Update\022,\n\010functi"
    "on\030\001 \002(\0132\032.generated.proto.expr.Expr\022.\n\002"
    "bc\030\002 \002(\0132\".generated.proto.crumb.Breadcr"
    "umbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002"
    "(\005\032\240\010\n\006Modify\032\343\001\n\004Name\032m\n\007Request\022\014\n\004nam"
    "e\030\001 \002(\t\022.\n\002bc\030\002 \002(\0132\".generated.proto.cr"
    "umb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tpr"
    "ojectID\030\004 \002(\005\032l\n\006Update\022\014\n\004name\030\001 \002(\t\022.\n"
    "\002bc\030\002 \002(\0132\".generated.proto.crumb.Breadc"
    "rumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 "
    "\002(\005\032\343\001\n\004Path\032m\n\007Request\022\014\n\004path\030\001 \003(\t\022.\n"
    "\002bc\030\002 \002(\0132\".generated.proto.crumb.Breadc"
    "rumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 "
    "\002(\005\032l\n\006Update\022\014\n\004path\030\001 \003(\t\022.\n\002bc\030\002 \002(\0132"
    "\".generated.proto.crumb.Breadcrumbs\022\021\n\tl"
    "ibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\243\002\n\006In"
    "puts\032\213\001\n\007Request\022*\n\006inputs\030\001 \003(\0132\032.gener"
    "ated.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\".gener"
    "ated.proto.crumb.Breadcrumbs\022\021\n\tlibraryI"
    "D\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\212\001\n\006Update\022*\n"
    "\006inputs\030\001 \003(\0132\032.generated.proto.expr.Exp"
    "r\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb.Br"
    "eadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectI"
    "D\030\004 \002(\005\032\243\002\n\006Output\032\213\001\n\007Request\022*\n\006output"
    "\030\001 \002(\0132\032.generated.proto.type.Type\022.\n\002bc"
    "\030\002 \002(\0132\".generated.proto.crumb.Breadcrum"
    "bs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005"
    "\032\212\001\n\006Update\022*\n\006output\030\001 \002(\0132\032.generated."
    "proto.type.Type\022.\n\002bc\030\002 \002(\0132\".generated."
    "proto.crumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002"
    "(\005\022\021\n\tprojectID\030\004 \002(\005\032\311\036\n\005Graph\032\374\001\n\003Get\032"
    "_\n\007Request\022.\n\002bc\030\001 \002(\0132\".generated.proto"
    ".crumb.Breadcrumbs\022\021\n\tlibraryID\030\002 \002(\005\022\021\n"
    "\tprojectID\030\003 \002(\005\032\223\001\n\006Status\0223\n\005graph\030\001 \002"
    "(\0132$.generated.proto.graphview.GraphView"
    "\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb.Bre"
    "adcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID"
    "\030\004 \002(\005\032\205\002\n\006Lookup\032o\n\007Request\022\016\n\006nodeID\030\001"
    " \002(\005\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb"
    ".Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tproje"
    "ctID\030\004 \002(\005\032\211\001\n\006Status\022)\n\004node\030\001 \002(\0132\033.ge"
    "nerated.proto.graph.Node\022.\n\002bc\030\002 \002(\0132\".g"
    "enerated.proto.crumb.Breadcrumbs\022\021\n\tlibr"
    "aryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\367\024\n\004Node\032"
    "\236\002\n\003Add\032\212\001\n\007Request\022)\n\004node\030\001 \002(\0132\033.gene"
    "rated.proto.graph.Node\022.\n\002bc\030\002 \002(\0132\".gen"
    "erated.proto.crumb.Breadcrumbs\022\021\n\tlibrar"
    "yID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\211\001\n\006Update\022"
    ")\n\004node\030\001 \002(\0132\033.generated.proto.graph.No"
    "de\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb.B"
    "readcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tproject"
    "ID\030\004 \002(\005\032\264\002\n\006Modify\032\212\001\n\007Request\022)\n\004node\030"
    "\001 \002(\0132\033.generated.proto.graph.Node\022.\n\002bc"
    "\030\002 \002(\0132\".generated.proto.crumb.Breadcrum"
    "bs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005"
    "\032\234\001\n\006Update\022\021\n\toldNodeID\030\001 \002(\005\022)\n\004node\030\002"
    " \002(\0132\033.generated.proto.graph.Node\022.\n\002bc\030"
    "\003 \002(\0132\".generated.proto.crumb.Breadcrumb"
    "s\022\021\n\tlibraryID\030\004 \002(\005\022\021\n\tprojectID\030\005 \002(\005\032"
    "\250\002\n\rModifyInPlace\032\212\001\n\007Request\022)\n\004node\030\001 "
    "\002(\0132\033.generated.proto.graph.Node\022.\n\002bc\030\002"
    " \002(\0132\".generated.proto.crumb.Breadcrumbs"
    "\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\211"
    "\001\n\006Update\022)\n\004node\030\001 \002(\0132\033.generated.prot"
    "o.graph.Node\022.\n\002bc\030\002 \002(\0132\".generated.pro"
    "to.crumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022"
    "\021\n\tprojectID\030\004 \002(\005\032\351\001\n\006Remove\032o\n\007Request"
    "\022\016\n\006nodeID\030\001 \002(\005\022.\n\002bc\030\002 \002(\0132\".generated"
    ".proto.crumb.Breadcrumbs\022\021\n\tlibraryID\030\003 "
    "\002(\005\022\021\n\tprojectID\030\004 \002(\005\032n\n\006Update\022\016\n\006node"
    "ID\030\001 \002(\005\022.\n\002bc\030\002 \002(\0132\".generated.proto.c"
    "rumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tp"
    "rojectID\030\004 \002(\005\032\347\006\n\007Default\032\246\002\n\003Get\032o\n\007Re"
    "quest\022\016\n\006nodeID\030\001 \002(\005\022.\n\002bc\030\002 \002(\0132\".gene"
    "rated.proto.crumb.Breadcrumbs\022\021\n\tlibrary"
    "ID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\255\001\n\006Status\022="
    "\n\013defaultsMap\030\001 \002(\0132(.generated.proto.no"
    "dedefault.DefaultsMap\022\016\n\006nodeID\030\002 \002(\005\022.\n"
    "\002bc\030\003 \002(\0132\".generated.proto.crumb.Breadc"
    "rumbs\022\021\n\tlibraryID\030\004 \002(\005\022\021\n\tprojectID\030\005 "
    "\002(\005\032\246\002\n\003Set\032\216\001\n\007Request\022\016\n\006inPort\030\001 \003(\005\022"
    "\r\n\005value\030\002 \002(\t\022\016\n\006nodeID\030\003 \002(\005\022.\n\002bc\030\004 \002"
    "(\0132\".generated.proto.crumb.Breadcrumbs\022\021"
    "\n\tlibraryID\030\005 \002(\005\022\021\n\tprojectID\030\006 \002(\005\032\215\001\n"
    "\006Update\022\016\n\006inPort\030\001 \003(\005\022\r\n\005value\030\002 \002(\t\022\016"
    "\n\006nodeID\030\003 \002(\005\022.\n\002bc\030\004 \002(\0132\".generated.p"
    "roto.crumb.Breadcrumbs\022\021\n\tlibraryID\030\005 \002("
    "\005\022\021\n\tprojectID\030\006 \002(\005\032\211\002\n\006Remove\032\177\n\007Reque"
    "st\022\016\n\006inPort\030\001 \003(\005\022\016\n\006nodeID\030\002 \002(\005\022.\n\002bc"
    "\030\003 \002(\0132\".generated.proto.crumb.Breadcrum"
    "bs\022\021\n\tlibraryID\030\004 \002(\005\022\021\n\tprojectID\030\005 \002(\005"
    "\032~\n\006Update\022\016\n\006inPort\030\001 \003(\005\022\016\n\006nodeID\030\002 \002"
    "(\005\022.\n\002bc\030\003 \002(\0132\".generated.proto.crumb.B"
    "readcrumbs\022\021\n\tlibraryID\030\004 \002(\005\022\021\n\tproject"
    "ID\030\005 \002(\005\032\225\005\n\nProperties\032\243\002\n\003Get\032o\n\007Reque"
    "st\022\016\n\006nodeID\030\001 \002(\005\022.\n\002bc\030\002 \002(\0132\".generat"
    "ed.proto.crumb.Breadcrumbs\022\021\n\tlibraryID\030"
    "\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\252\001\n\006Status\022:\n\np"
    "roperties\030\001 \002(\0132&.generated.proto.attrib"
    "utes.Properties\022\016\n\006nodeID\030\002 \002(\005\022.\n\002bc\030\003 "
    "\002(\0132\".generated.proto.crumb.Breadcrumbs\022"
    "\021\n\tlibraryID\030\004 \002(\005\022\021\n\tprojectID\030\005 \002(\005\032\340\002"
    "\n\003Set\032\253\001\n\007Request\022:\n\nproperties\030\001 \002(\0132&."
    "generated.proto.attributes.Properties\022\016\n"
    "\006nodeID\030\002 \002(\005\022.\n\002bc\030\003 \002(\0132\".generated.pr"
    "oto.crumb.Breadcrumbs\022\021\n\tlibraryID\030\004 \002(\005"
    "\022\021\n\tprojectID\030\005 \002(\005\032\252\001\n\006Update\022:\n\nproper"
    "ties\030\001 \002(\0132&.generated.proto.attributes."
    "Properties\022\016\n\006nodeID\030\002 \002(\005\022.\n\002bc\030\003 \002(\0132\""
    ".generated.proto.crumb.Breadcrumbs\022\021\n\tli"
    "braryID\030\004 \002(\005\022\021\n\tprojectID\030\005 \002(\005\032\334\002\n\007Con"
    "nect\032\247\001\n\007Request\022\021\n\tsrcNodeID\030\001 \002(\005\022\017\n\007s"
    "rcPort\030\002 \003(\005\022\021\n\tdstNodeID\030\003 \002(\005\022\017\n\007dstPo"
    "rt\030\004 \003(\005\022.\n\002bc\030\005 \002(\0132\".generated.proto.c"
    "rumb.Breadcrumbs\022\021\n\tlibraryID\030\006 \002(\005\022\021\n\tp"
    "rojectID\030\007 \002(\005\032\246\001\n\006Update\022\021\n\tsrcNodeID\030\001"
    " \002(\005\022\017\n\007srcPort\030\002 \003(\005\022\021\n\tdstNodeID\030\003 \002(\005"
    "\022\017\n\007dstPort\030\004 \003(\005\022.\n\002bc\030\005 \002(\0132\".generate"
    "d.proto.crumb.Breadcrumbs\022\021\n\tlibraryID\030\006"
    " \002(\005\022\021\n\tprojectID\030\007 \002(\005\032\337\002\n\nDisconnect\032\247"
    "\001\n\007Request\022\021\n\tsrcNodeID\030\001 \002(\005\022\017\n\007srcPort"
    "\030\002 \003(\005\022\021\n\tdstNodeID\030\003 \002(\005\022\017\n\007dstPort\030\004 \003"
    "(\005\022.\n\002bc\030\005 \002(\0132\".generated.proto.crumb.B"
    "readcrumbs\022\021\n\tlibraryID\030\006 \002(\005\022\021\n\tproject"
    "ID\030\007 \002(\005\032\246\001\n\006Update\022\021\n\tsrcNodeID\030\001 \002(\005\022\017"
    "\n\007srcPort\030\002 \003(\005\022\021\n\tdstNodeID\030\003 \002(\005\022\017\n\007ds"
    "tPort\030\004 \003(\005\022.\n\002bc\030\005 \002(\0132\".generated.prot"
    "o.crumb.Breadcrumbs\022\021\n\tlibraryID\030\006 \002(\005\022\021"
    "\n\tprojectID\030\007 \002(\005\032\311\001\n\006Remove\032_\n\007Request\022"
    ".\n\002bc\030\001 \002(\0132\".generated.proto.crumb.Brea"
    "dcrumbs\022\021\n\tlibraryID\030\002 \002(\005\022\021\n\tprojectID\030"
    "\003 \002(\005\032^\n\006Update\022.\n\002bc\030\001 \002(\0132\".generated."
    "proto.crumb.Breadcrumbs\022\021\n\tlibraryID\030\002 \002"
    "(\005\022\021\n\tprojectID\030\003 \002(\005\032\224\002\n\007Resolve\032s\n\007Req"
    "uest\022\014\n\004name\030\001 \002(\t\0224\n\010parentbc\030\002 \002(\0132\".g"
    "enerated.proto.crumb.Breadcrumbs\022\021\n\tlibr"
    "aryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\223\001\n\006Statu"
    "s\022-\n\006astptr\030\001 \003(\0132\035.generated.proto.crum"
    "b.ASTPtr\0224\n\010parentbc\030\002 \002(\0132\".generated.p"
    "roto.crumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002("
    "\005\022\021\n\tprojectID\030\004 \002(\005\032\322\003\n\nProperties\032\302\001\n\003"
    "Get\032\?\n\007Request\022\016\n\006nodeID\030\001 \002(\005\022\021\n\tlibrar"
    "yID\030\002 \002(\005\022\021\n\tprojectID\030\003 \002(\005\032z\n\006Status\022:"
    "\n\nproperties\030\001 \002(\0132&.generated.proto.att"
    "ributes.Properties\022\016\n\006nodeID\030\002 \002(\005\022\021\n\tli"
    "braryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\005\032\376\001\n\003Set"
    "\032{\n\007Request\022:\n\nproperties\030\001 \002(\0132&.genera"
    "ted.proto.attributes.Properties\022\016\n\006nodeI"
    "D\030\002 \002(\005\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030"
    "\004 \002(\005\032z\n\006Update\022:\n\nproperties\030\001 \002(\0132&.ge"
    "nerated.proto.attributes.Properties\022\016\n\006n"
    "odeID\030\002 \002(\005\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojec"
    "tID\030\004 \002(\005", 10929);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "project-manager.proto", &protobuf_RegisterTypes);
  Project::default_instance_ = new Project();
  Project_List::default_instance_ = new Project_List();
  Project_List_Request::default_instance_ = new Project_List_Request();
  Project_List_Status::default_instance_ = new Project_List_Status();
  Project_Lookup::default_instance_ = new Project_Lookup();
  Project_Lookup_Request::default_instance_ = new Project_Lookup_Request();
  Project_Lookup_Status::default_instance_ = new Project_Lookup_Status();
  Project_Create::default_instance_ = new Project_Create();
  Project_Create_Request::default_instance_ = new Project_Create_Request();
  Project_Create_Update::default_instance_ = new Project_Create_Update();
  Project_Open::default_instance_ = new Project_Open();
  Project_Open_Request::default_instance_ = new Project_Open_Request();
  Project_Open_Update::default_instance_ = new Project_Open_Update();
  Project_Modify::default_instance_ = new Project_Modify();
  Project_Modify_Request::default_instance_ = new Project_Modify_Request();
  Project_Modify_Update::default_instance_ = new Project_Modify_Update();
  Project_Close::default_instance_ = new Project_Close();
  Project_Close_Request::default_instance_ = new Project_Close_Request();
  Project_Close_Update::default_instance_ = new Project_Close_Update();
  Project_Store::default_instance_ = new Project_Store();
  Project_Store_Request::default_instance_ = new Project_Store_Request();
  Project_Store_Status::default_instance_ = new Project_Store_Status();
  Project_Library::default_instance_ = new Project_Library();
  Project_Library_List::default_instance_ = new Project_Library_List();
  Project_Library_List_Request::default_instance_ = new Project_Library_List_Request();
  Project_Library_List_Status::default_instance_ = new Project_Library_List_Status();
  Project_Library_Lookup::default_instance_ = new Project_Library_Lookup();
  Project_Library_Lookup_Request::default_instance_ = new Project_Library_Lookup_Request();
  Project_Library_Lookup_Status::default_instance_ = new Project_Library_Lookup_Status();
  Project_Library_Create::default_instance_ = new Project_Library_Create();
  Project_Library_Create_Request::default_instance_ = new Project_Library_Create_Request();
  Project_Library_Create_Update::default_instance_ = new Project_Library_Create_Update();
  Project_Library_Load::default_instance_ = new Project_Library_Load();
  Project_Library_Load_Request::default_instance_ = new Project_Library_Load_Request();
  Project_Library_Load_Update::default_instance_ = new Project_Library_Load_Update();
  Project_Library_Unload::default_instance_ = new Project_Library_Unload();
  Project_Library_Unload_Request::default_instance_ = new Project_Library_Unload_Request();
  Project_Library_Unload_Update::default_instance_ = new Project_Library_Unload_Update();
  Project_Library_Store::default_instance_ = new Project_Library_Store();
  Project_Library_Store_Request::default_instance_ = new Project_Library_Store_Request();
  Project_Library_Store_Status::default_instance_ = new Project_Library_Store_Status();
  Project_Library_AST::default_instance_ = new Project_Library_AST();
  Project_Library_AST_Get::default_instance_ = new Project_Library_AST_Get();
  Project_Library_AST_Get_Request::default_instance_ = new Project_Library_AST_Get_Request();
  Project_Library_AST_Get_Status::default_instance_ = new Project_Library_AST_Get_Status();
  Project_Library_AST_Module::default_instance_ = new Project_Library_AST_Module();
  Project_Library_AST_Module_Add::default_instance_ = new Project_Library_AST_Module_Add();
  Project_Library_AST_Module_Add_Request::default_instance_ = new Project_Library_AST_Module_Add_Request();
  Project_Library_AST_Module_Add_Update::default_instance_ = new Project_Library_AST_Module_Add_Update();
  Project_Library_AST_Module_Modify::default_instance_ = new Project_Library_AST_Module_Modify();
  Project_Library_AST_Module_Modify_Cls::default_instance_ = new Project_Library_AST_Module_Modify_Cls();
  Project_Library_AST_Module_Modify_Cls_Request::default_instance_ = new Project_Library_AST_Module_Modify_Cls_Request();
  Project_Library_AST_Module_Modify_Cls_Update::default_instance_ = new Project_Library_AST_Module_Modify_Cls_Update();
  Project_Library_AST_Module_Modify_Imports::default_instance_ = new Project_Library_AST_Module_Modify_Imports();
  Project_Library_AST_Module_Modify_Imports_Request::default_instance_ = new Project_Library_AST_Module_Modify_Imports_Request();
  Project_Library_AST_Module_Modify_Imports_Update::default_instance_ = new Project_Library_AST_Module_Modify_Imports_Update();
  Project_Library_AST_Module_Modify_Fields::default_instance_ = new Project_Library_AST_Module_Modify_Fields();
  Project_Library_AST_Module_Modify_Fields_Request::default_instance_ = new Project_Library_AST_Module_Modify_Fields_Request();
  Project_Library_AST_Module_Modify_Fields_Update::default_instance_ = new Project_Library_AST_Module_Modify_Fields_Update();
  Project_Library_AST_Data::default_instance_ = new Project_Library_AST_Data();
  Project_Library_AST_Data_Add::default_instance_ = new Project_Library_AST_Data_Add();
  Project_Library_AST_Data_Add_Request::default_instance_ = new Project_Library_AST_Data_Add_Request();
  Project_Library_AST_Data_Add_Update::default_instance_ = new Project_Library_AST_Data_Add_Update();
  Project_Library_AST_Data_Modify::default_instance_ = new Project_Library_AST_Data_Modify();
  Project_Library_AST_Data_Modify_Cls::default_instance_ = new Project_Library_AST_Data_Modify_Cls();
  Project_Library_AST_Data_Modify_Cls_Request::default_instance_ = new Project_Library_AST_Data_Modify_Cls_Request();
  Project_Library_AST_Data_Modify_Cls_Update::default_instance_ = new Project_Library_AST_Data_Modify_Cls_Update();
  Project_Library_AST_Data_Modify_Cons::default_instance_ = new Project_Library_AST_Data_Modify_Cons();
  Project_Library_AST_Data_Modify_Cons_Request::default_instance_ = new Project_Library_AST_Data_Modify_Cons_Request();
  Project_Library_AST_Data_Modify_Cons_Update::default_instance_ = new Project_Library_AST_Data_Modify_Cons_Update();
  Project_Library_AST_Data_Modify_Classes::default_instance_ = new Project_Library_AST_Data_Modify_Classes();
  Project_Library_AST_Data_Modify_Classes_Request::default_instance_ = new Project_Library_AST_Data_Modify_Classes_Request();
  Project_Library_AST_Data_Modify_Classes_Update::default_instance_ = new Project_Library_AST_Data_Modify_Classes_Update();
  Project_Library_AST_Data_Modify_Methods::default_instance_ = new Project_Library_AST_Data_Modify_Methods();
  Project_Library_AST_Data_Modify_Methods_Request::default_instance_ = new Project_Library_AST_Data_Modify_Methods_Request();
  Project_Library_AST_Data_Modify_Methods_Update::default_instance_ = new Project_Library_AST_Data_Modify_Methods_Update();
  Project_Library_AST_Function::default_instance_ = new Project_Library_AST_Function();
  Project_Library_AST_Function_Add::default_instance_ = new Project_Library_AST_Function_Add();
  Project_Library_AST_Function_Add_Request::default_instance_ = new Project_Library_AST_Function_Add_Request();
  Project_Library_AST_Function_Add_Update::default_instance_ = new Project_Library_AST_Function_Add_Update();
  Project_Library_AST_Function_Modify::default_instance_ = new Project_Library_AST_Function_Modify();
  Project_Library_AST_Function_Modify_Name::default_instance_ = new Project_Library_AST_Function_Modify_Name();
  Project_Library_AST_Function_Modify_Name_Request::default_instance_ = new Project_Library_AST_Function_Modify_Name_Request();
  Project_Library_AST_Function_Modify_Name_Update::default_instance_ = new Project_Library_AST_Function_Modify_Name_Update();
  Project_Library_AST_Function_Modify_Path::default_instance_ = new Project_Library_AST_Function_Modify_Path();
  Project_Library_AST_Function_Modify_Path_Request::default_instance_ = new Project_Library_AST_Function_Modify_Path_Request();
  Project_Library_AST_Function_Modify_Path_Update::default_instance_ = new Project_Library_AST_Function_Modify_Path_Update();
  Project_Library_AST_Function_Modify_Inputs::default_instance_ = new Project_Library_AST_Function_Modify_Inputs();
  Project_Library_AST_Function_Modify_Inputs_Request::default_instance_ = new Project_Library_AST_Function_Modify_Inputs_Request();
  Project_Library_AST_Function_Modify_Inputs_Update::default_instance_ = new Project_Library_AST_Function_Modify_Inputs_Update();
  Project_Library_AST_Function_Modify_Output::default_instance_ = new Project_Library_AST_Function_Modify_Output();
  Project_Library_AST_Function_Modify_Output_Request::default_instance_ = new Project_Library_AST_Function_Modify_Output_Request();
  Project_Library_AST_Function_Modify_Output_Update::default_instance_ = new Project_Library_AST_Function_Modify_Output_Update();
  Project_Library_AST_Function_Graph::default_instance_ = new Project_Library_AST_Function_Graph();
  Project_Library_AST_Function_Graph_Get::default_instance_ = new Project_Library_AST_Function_Graph_Get();
  Project_Library_AST_Function_Graph_Get_Request::default_instance_ = new Project_Library_AST_Function_Graph_Get_Request();
  Project_Library_AST_Function_Graph_Get_Status::default_instance_ = new Project_Library_AST_Function_Graph_Get_Status();
  Project_Library_AST_Function_Graph_Lookup::default_instance_ = new Project_Library_AST_Function_Graph_Lookup();
  Project_Library_AST_Function_Graph_Lookup_Request::default_instance_ = new Project_Library_AST_Function_Graph_Lookup_Request();
  Project_Library_AST_Function_Graph_Lookup_Status::default_instance_ = new Project_Library_AST_Function_Graph_Lookup_Status();
  Project_Library_AST_Function_Graph_Node::default_instance_ = new Project_Library_AST_Function_Graph_Node();
  Project_Library_AST_Function_Graph_Node_Add::default_instance_ = new Project_Library_AST_Function_Graph_Node_Add();
  Project_Library_AST_Function_Graph_Node_Add_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_Add_Request();
  Project_Library_AST_Function_Graph_Node_Add_Update::default_instance_ = new Project_Library_AST_Function_Graph_Node_Add_Update();
  Project_Library_AST_Function_Graph_Node_Modify::default_instance_ = new Project_Library_AST_Function_Graph_Node_Modify();
  Project_Library_AST_Function_Graph_Node_Modify_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_Modify_Request();
  Project_Library_AST_Function_Graph_Node_Modify_Update::default_instance_ = new Project_Library_AST_Function_Graph_Node_Modify_Update();
  Project_Library_AST_Function_Graph_Node_ModifyInPlace::default_instance_ = new Project_Library_AST_Function_Graph_Node_ModifyInPlace();
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request();
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::default_instance_ = new Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update();
  Project_Library_AST_Function_Graph_Node_Remove::default_instance_ = new Project_Library_AST_Function_Graph_Node_Remove();
  Project_Library_AST_Function_Graph_Node_Remove_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_Remove_Request();
  Project_Library_AST_Function_Graph_Node_Remove_Update::default_instance_ = new Project_Library_AST_Function_Graph_Node_Remove_Update();
  Project_Library_AST_Function_Graph_Node_Default::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default();
  Project_Library_AST_Function_Graph_Node_Default_Get::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Get();
  Project_Library_AST_Function_Graph_Node_Default_Get_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Get_Request();
  Project_Library_AST_Function_Graph_Node_Default_Get_Status::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Get_Status();
  Project_Library_AST_Function_Graph_Node_Default_Set::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Set();
  Project_Library_AST_Function_Graph_Node_Default_Set_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Set_Request();
  Project_Library_AST_Function_Graph_Node_Default_Set_Update::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Set_Update();
  Project_Library_AST_Function_Graph_Node_Default_Remove::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Remove();
  Project_Library_AST_Function_Graph_Node_Default_Remove_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Remove_Request();
  Project_Library_AST_Function_Graph_Node_Default_Remove_Update::default_instance_ = new Project_Library_AST_Function_Graph_Node_Default_Remove_Update();
  Project_Library_AST_Function_Graph_Node_Properties::default_instance_ = new Project_Library_AST_Function_Graph_Node_Properties();
  Project_Library_AST_Function_Graph_Node_Properties_Get::default_instance_ = new Project_Library_AST_Function_Graph_Node_Properties_Get();
  Project_Library_AST_Function_Graph_Node_Properties_Get_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_Properties_Get_Request();
  Project_Library_AST_Function_Graph_Node_Properties_Get_Status::default_instance_ = new Project_Library_AST_Function_Graph_Node_Properties_Get_Status();
  Project_Library_AST_Function_Graph_Node_Properties_Set::default_instance_ = new Project_Library_AST_Function_Graph_Node_Properties_Set();
  Project_Library_AST_Function_Graph_Node_Properties_Set_Request::default_instance_ = new Project_Library_AST_Function_Graph_Node_Properties_Set_Request();
  Project_Library_AST_Function_Graph_Node_Properties_Set_Update::default_instance_ = new Project_Library_AST_Function_Graph_Node_Properties_Set_Update();
  Project_Library_AST_Function_Graph_Connect::default_instance_ = new Project_Library_AST_Function_Graph_Connect();
  Project_Library_AST_Function_Graph_Connect_Request::default_instance_ = new Project_Library_AST_Function_Graph_Connect_Request();
  Project_Library_AST_Function_Graph_Connect_Update::default_instance_ = new Project_Library_AST_Function_Graph_Connect_Update();
  Project_Library_AST_Function_Graph_Disconnect::default_instance_ = new Project_Library_AST_Function_Graph_Disconnect();
  Project_Library_AST_Function_Graph_Disconnect_Request::default_instance_ = new Project_Library_AST_Function_Graph_Disconnect_Request();
  Project_Library_AST_Function_Graph_Disconnect_Update::default_instance_ = new Project_Library_AST_Function_Graph_Disconnect_Update();
  Project_Library_AST_Remove::default_instance_ = new Project_Library_AST_Remove();
  Project_Library_AST_Remove_Request::default_instance_ = new Project_Library_AST_Remove_Request();
  Project_Library_AST_Remove_Update::default_instance_ = new Project_Library_AST_Remove_Update();
  Project_Library_AST_Resolve::default_instance_ = new Project_Library_AST_Resolve();
  Project_Library_AST_Resolve_Request::default_instance_ = new Project_Library_AST_Resolve_Request();
  Project_Library_AST_Resolve_Status::default_instance_ = new Project_Library_AST_Resolve_Status();
  Project_Library_AST_Properties::default_instance_ = new Project_Library_AST_Properties();
  Project_Library_AST_Properties_Get::default_instance_ = new Project_Library_AST_Properties_Get();
  Project_Library_AST_Properties_Get_Request::default_instance_ = new Project_Library_AST_Properties_Get_Request();
  Project_Library_AST_Properties_Get_Status::default_instance_ = new Project_Library_AST_Properties_Get_Status();
  Project_Library_AST_Properties_Set::default_instance_ = new Project_Library_AST_Properties_Set();
  Project_Library_AST_Properties_Set_Request::default_instance_ = new Project_Library_AST_Properties_Set_Request();
  Project_Library_AST_Properties_Set_Update::default_instance_ = new Project_Library_AST_Properties_Set_Update();
  Project::default_instance_->InitAsDefaultInstance();
  Project_List::default_instance_->InitAsDefaultInstance();
  Project_List_Request::default_instance_->InitAsDefaultInstance();
  Project_List_Status::default_instance_->InitAsDefaultInstance();
  Project_Lookup::default_instance_->InitAsDefaultInstance();
  Project_Lookup_Request::default_instance_->InitAsDefaultInstance();
  Project_Lookup_Status::default_instance_->InitAsDefaultInstance();
  Project_Create::default_instance_->InitAsDefaultInstance();
  Project_Create_Request::default_instance_->InitAsDefaultInstance();
  Project_Create_Update::default_instance_->InitAsDefaultInstance();
  Project_Open::default_instance_->InitAsDefaultInstance();
  Project_Open_Request::default_instance_->InitAsDefaultInstance();
  Project_Open_Update::default_instance_->InitAsDefaultInstance();
  Project_Modify::default_instance_->InitAsDefaultInstance();
  Project_Modify_Request::default_instance_->InitAsDefaultInstance();
  Project_Modify_Update::default_instance_->InitAsDefaultInstance();
  Project_Close::default_instance_->InitAsDefaultInstance();
  Project_Close_Request::default_instance_->InitAsDefaultInstance();
  Project_Close_Update::default_instance_->InitAsDefaultInstance();
  Project_Store::default_instance_->InitAsDefaultInstance();
  Project_Store_Request::default_instance_->InitAsDefaultInstance();
  Project_Store_Status::default_instance_->InitAsDefaultInstance();
  Project_Library::default_instance_->InitAsDefaultInstance();
  Project_Library_List::default_instance_->InitAsDefaultInstance();
  Project_Library_List_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_List_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_Lookup::default_instance_->InitAsDefaultInstance();
  Project_Library_Lookup_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_Lookup_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_Create::default_instance_->InitAsDefaultInstance();
  Project_Library_Create_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_Create_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_Load::default_instance_->InitAsDefaultInstance();
  Project_Library_Load_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_Load_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_Unload::default_instance_->InitAsDefaultInstance();
  Project_Library_Unload_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_Unload_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_Store::default_instance_->InitAsDefaultInstance();
  Project_Library_Store_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_Store_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_AST::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Get::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Get_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Get_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Add::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Add_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Add_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Cls::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Cls_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Cls_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Imports::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Imports_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Imports_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Fields::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Fields_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Module_Modify_Fields_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Add::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Add_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Add_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Cls::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Cls_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Cls_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Cons::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Cons_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Cons_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Classes::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Classes_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Classes_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Methods::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Methods_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Data_Modify_Methods_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Add::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Add_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Add_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Name::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Name_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Name_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Path::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Path_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Path_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Inputs::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Inputs_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Inputs_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Output::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Output_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Modify_Output_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Get::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Get_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Get_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Lookup::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Lookup_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Lookup_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Add::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Add_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Add_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Modify::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Modify_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Modify_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_ModifyInPlace::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Remove::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Remove_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Remove_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Get::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Get_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Get_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Set::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Set_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Set_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Remove::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Remove_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Default_Remove_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Properties::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Properties_Get::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Properties_Get_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Properties_Get_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Properties_Set::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Properties_Set_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Node_Properties_Set_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Connect::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Connect_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Connect_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Disconnect::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Disconnect_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Function_Graph_Disconnect_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Remove::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Remove_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Remove_Update::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Resolve::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Resolve_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Resolve_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Properties::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Properties_Get::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Properties_Get_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Properties_Get_Status::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Properties_Set::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Properties_Set_Request::default_instance_->InitAsDefaultInstance();
  Project_Library_AST_Properties_Set_Update::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_project_2dmanager_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_project_2dmanager_2eproto {
  StaticDescriptorInitializer_project_2dmanager_2eproto() {
    protobuf_AddDesc_project_2dmanager_2eproto();
  }
} static_descriptor_initializer_project_2dmanager_2eproto_;

// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_List_Request::Project_List_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_List_Request::InitAsDefaultInstance() {
}

Project_List_Request::Project_List_Request(const Project_List_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_List_Request::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_List_Request::~Project_List_Request() {
  SharedDtor();
}

void Project_List_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_List_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_List_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_List_Request_descriptor_;
}

const Project_List_Request& Project_List_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_List_Request* Project_List_Request::default_instance_ = NULL;

Project_List_Request* Project_List_Request::New() const {
  return new Project_List_Request;
}

void Project_List_Request::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_List_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_List_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_List_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_List_Request::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_List_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_List_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_List_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_List_Request::MergeFrom(const Project_List_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_List_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_List_Request::CopyFrom(const Project_List_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_List_Request::IsInitialized() const {

  return true;
}

void Project_List_Request::Swap(Project_List_Request* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_List_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_List_Request_descriptor_;
  metadata.reflection = Project_List_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_List_Status::kProjectsFieldNumber;
#endif  // !_MSC_VER

Project_List_Status::Project_List_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_List_Status::InitAsDefaultInstance() {
}

Project_List_Status::Project_List_Status(const Project_List_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_List_Status::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_List_Status::~Project_List_Status() {
  SharedDtor();
}

void Project_List_Status::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_List_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_List_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_List_Status_descriptor_;
}

const Project_List_Status& Project_List_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_List_Status* Project_List_Status::default_instance_ = NULL;

Project_List_Status* Project_List_Status::New() const {
  return new Project_List_Status;
}

void Project_List_Status::Clear() {
  projects_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_List_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.project.Project projects = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_projects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_projects()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_projects;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_List_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.project.Project projects = 1;
  for (int i = 0; i < this->projects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->projects(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_List_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.project.Project projects = 1;
  for (int i = 0; i < this->projects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->projects(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_List_Status::ByteSize() const {
  int total_size = 0;

  // repeated .generated.proto.project.Project projects = 1;
  total_size += 1 * this->projects_size();
  for (int i = 0; i < this->projects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->projects(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_List_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_List_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_List_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_List_Status::MergeFrom(const Project_List_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  projects_.MergeFrom(from.projects_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_List_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_List_Status::CopyFrom(const Project_List_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_List_Status::IsInitialized() const {

  for (int i = 0; i < projects_size(); i++) {
    if (!this->projects(i).IsInitialized()) return false;
  }
  return true;
}

void Project_List_Status::Swap(Project_List_Status* other) {
  if (other != this) {
    projects_.Swap(&other->projects_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_List_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_List_Status_descriptor_;
  metadata.reflection = Project_List_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_List::Project_List()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_List::InitAsDefaultInstance() {
}

Project_List::Project_List(const Project_List& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_List::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_List::~Project_List() {
  SharedDtor();
}

void Project_List::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_List::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_List_descriptor_;
}

const Project_List& Project_List::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_List* Project_List::default_instance_ = NULL;

Project_List* Project_List::New() const {
  return new Project_List;
}

void Project_List::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_List::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_List::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_List::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_List* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_List*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_List::MergeFrom(const Project_List& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_List::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_List::CopyFrom(const Project_List& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_List::IsInitialized() const {

  return true;
}

void Project_List::Swap(Project_List* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_List::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_List_descriptor_;
  metadata.reflection = Project_List_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Lookup_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Lookup_Request::Project_Lookup_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Lookup_Request::InitAsDefaultInstance() {
}

Project_Lookup_Request::Project_Lookup_Request(const Project_Lookup_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Lookup_Request::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Lookup_Request::~Project_Lookup_Request() {
  SharedDtor();
}

void Project_Lookup_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Lookup_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Lookup_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Lookup_Request_descriptor_;
}

const Project_Lookup_Request& Project_Lookup_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Lookup_Request* Project_Lookup_Request::default_instance_ = NULL;

Project_Lookup_Request* Project_Lookup_Request::New() const {
  return new Project_Lookup_Request;
}

void Project_Lookup_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Lookup_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Lookup_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Lookup_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Lookup_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Lookup_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Lookup_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Lookup_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Lookup_Request::MergeFrom(const Project_Lookup_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Lookup_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Lookup_Request::CopyFrom(const Project_Lookup_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Lookup_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_Lookup_Request::Swap(Project_Lookup_Request* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Lookup_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Lookup_Request_descriptor_;
  metadata.reflection = Project_Lookup_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Lookup_Status::kProjectFieldNumber;
#endif  // !_MSC_VER

Project_Lookup_Status::Project_Lookup_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Lookup_Status::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_Lookup_Status::Project_Lookup_Status(const Project_Lookup_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Lookup_Status::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Lookup_Status::~Project_Lookup_Status() {
  SharedDtor();
}

void Project_Lookup_Status::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_Lookup_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Lookup_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Lookup_Status_descriptor_;
}

const Project_Lookup_Status& Project_Lookup_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Lookup_Status* Project_Lookup_Status::default_instance_ = NULL;

Project_Lookup_Status* Project_Lookup_Status::New() const {
  return new Project_Lookup_Status;
}

void Project_Lookup_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Lookup_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Lookup_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Lookup_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Lookup_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Lookup_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Lookup_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Lookup_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Lookup_Status::MergeFrom(const Project_Lookup_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Lookup_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Lookup_Status::CopyFrom(const Project_Lookup_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Lookup_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_Lookup_Status::Swap(Project_Lookup_Status* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Lookup_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Lookup_Status_descriptor_;
  metadata.reflection = Project_Lookup_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Lookup::Project_Lookup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Lookup::InitAsDefaultInstance() {
}

Project_Lookup::Project_Lookup(const Project_Lookup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Lookup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Lookup::~Project_Lookup() {
  SharedDtor();
}

void Project_Lookup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Lookup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Lookup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Lookup_descriptor_;
}

const Project_Lookup& Project_Lookup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Lookup* Project_Lookup::default_instance_ = NULL;

Project_Lookup* Project_Lookup::New() const {
  return new Project_Lookup;
}

void Project_Lookup::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Lookup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Lookup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Lookup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Lookup::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Lookup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Lookup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Lookup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Lookup::MergeFrom(const Project_Lookup& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Lookup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Lookup::CopyFrom(const Project_Lookup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Lookup::IsInitialized() const {

  return true;
}

void Project_Lookup::Swap(Project_Lookup* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Lookup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Lookup_descriptor_;
  metadata.reflection = Project_Lookup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Create_Request::kNameFieldNumber;
const int Project_Create_Request::kPathFieldNumber;
const int Project_Create_Request::kAttributesFieldNumber;
#endif  // !_MSC_VER

Project_Create_Request::Project_Create_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Create_Request::InitAsDefaultInstance() {
  attributes_ = const_cast< ::generated::proto::attributes::Attributes*>(&::generated::proto::attributes::Attributes::default_instance());
}

Project_Create_Request::Project_Create_Request(const Project_Create_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Create_Request::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  attributes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Create_Request::~Project_Create_Request() {
  SharedDtor();
}

void Project_Create_Request::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
    delete attributes_;
  }
}

void Project_Create_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Create_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Create_Request_descriptor_;
}

const Project_Create_Request& Project_Create_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Create_Request* Project_Create_Request::default_instance_ = NULL;

Project_Create_Request* Project_Create_Request::New() const {
  return new Project_Create_Request;
}

void Project_Create_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    if (has_attributes()) {
      if (attributes_ != NULL) attributes_->::generated::proto::attributes::Attributes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Create_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // required string path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_attributes;
        break;
      }

      // required .generated.proto.attributes.Attributes attributes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attributes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Create_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path(), output);
  }

  // required .generated.proto.attributes.Attributes attributes = 3;
  if (has_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attributes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Create_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // required .generated.proto.attributes.Attributes attributes = 3;
  if (has_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attributes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Create_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // required .generated.proto.attributes.Attributes attributes = 3;
    if (has_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Create_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Create_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Create_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Create_Request::MergeFrom(const Project_Create_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_attributes()) {
      mutable_attributes()->::generated::proto::attributes::Attributes::MergeFrom(from.attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Create_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Create_Request::CopyFrom(const Project_Create_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Create_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_attributes()) {
    if (!this->attributes().IsInitialized()) return false;
  }
  return true;
}

void Project_Create_Request::Swap(Project_Create_Request* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(path_, other->path_);
    std::swap(attributes_, other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Create_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Create_Request_descriptor_;
  metadata.reflection = Project_Create_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Create_Update::kProjectFieldNumber;
#endif  // !_MSC_VER

Project_Create_Update::Project_Create_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Create_Update::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_Create_Update::Project_Create_Update(const Project_Create_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Create_Update::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Create_Update::~Project_Create_Update() {
  SharedDtor();
}

void Project_Create_Update::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_Create_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Create_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Create_Update_descriptor_;
}

const Project_Create_Update& Project_Create_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Create_Update* Project_Create_Update::default_instance_ = NULL;

Project_Create_Update* Project_Create_Update::New() const {
  return new Project_Create_Update;
}

void Project_Create_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Create_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Create_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Create_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Create_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Create_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Create_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Create_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Create_Update::MergeFrom(const Project_Create_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Create_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Create_Update::CopyFrom(const Project_Create_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Create_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_Create_Update::Swap(Project_Create_Update* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Create_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Create_Update_descriptor_;
  metadata.reflection = Project_Create_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Create::Project_Create()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Create::InitAsDefaultInstance() {
}

Project_Create::Project_Create(const Project_Create& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Create::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Create::~Project_Create() {
  SharedDtor();
}

void Project_Create::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Create::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Create::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Create_descriptor_;
}

const Project_Create& Project_Create::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Create* Project_Create::default_instance_ = NULL;

Project_Create* Project_Create::New() const {
  return new Project_Create;
}

void Project_Create::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Create::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Create::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Create::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Create::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Create::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Create* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Create*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Create::MergeFrom(const Project_Create& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Create::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Create::CopyFrom(const Project_Create& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Create::IsInitialized() const {

  return true;
}

void Project_Create::Swap(Project_Create* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Create::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Create_descriptor_;
  metadata.reflection = Project_Create_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Open_Request::kPathFieldNumber;
#endif  // !_MSC_VER

Project_Open_Request::Project_Open_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Open_Request::InitAsDefaultInstance() {
}

Project_Open_Request::Project_Open_Request(const Project_Open_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Open_Request::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Open_Request::~Project_Open_Request() {
  SharedDtor();
}

void Project_Open_Request::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Project_Open_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Open_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Open_Request_descriptor_;
}

const Project_Open_Request& Project_Open_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Open_Request* Project_Open_Request::default_instance_ = NULL;

Project_Open_Request* Project_Open_Request::New() const {
  return new Project_Open_Request;
}

void Project_Open_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Open_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Open_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Open_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Open_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Open_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Open_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Open_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Open_Request::MergeFrom(const Project_Open_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Open_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Open_Request::CopyFrom(const Project_Open_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Open_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_Open_Request::Swap(Project_Open_Request* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Open_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Open_Request_descriptor_;
  metadata.reflection = Project_Open_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Open_Update::kProjectFieldNumber;
#endif  // !_MSC_VER

Project_Open_Update::Project_Open_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Open_Update::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_Open_Update::Project_Open_Update(const Project_Open_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Open_Update::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Open_Update::~Project_Open_Update() {
  SharedDtor();
}

void Project_Open_Update::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_Open_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Open_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Open_Update_descriptor_;
}

const Project_Open_Update& Project_Open_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Open_Update* Project_Open_Update::default_instance_ = NULL;

Project_Open_Update* Project_Open_Update::New() const {
  return new Project_Open_Update;
}

void Project_Open_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Open_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Open_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Open_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Open_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Open_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Open_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Open_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Open_Update::MergeFrom(const Project_Open_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Open_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Open_Update::CopyFrom(const Project_Open_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Open_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_Open_Update::Swap(Project_Open_Update* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Open_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Open_Update_descriptor_;
  metadata.reflection = Project_Open_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Open::Project_Open()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Open::InitAsDefaultInstance() {
}

Project_Open::Project_Open(const Project_Open& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Open::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Open::~Project_Open() {
  SharedDtor();
}

void Project_Open::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Open::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Open::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Open_descriptor_;
}

const Project_Open& Project_Open::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Open* Project_Open::default_instance_ = NULL;

Project_Open* Project_Open::New() const {
  return new Project_Open;
}

void Project_Open::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Open::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Open::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Open::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Open::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Open::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Open* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Open*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Open::MergeFrom(const Project_Open& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Open::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Open::CopyFrom(const Project_Open& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Open::IsInitialized() const {

  return true;
}

void Project_Open::Swap(Project_Open* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Open::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Open_descriptor_;
  metadata.reflection = Project_Open_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Modify_Request::kProjectFieldNumber;
#endif  // !_MSC_VER

Project_Modify_Request::Project_Modify_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Modify_Request::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_Modify_Request::Project_Modify_Request(const Project_Modify_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Modify_Request::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Modify_Request::~Project_Modify_Request() {
  SharedDtor();
}

void Project_Modify_Request::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_Modify_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Modify_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Modify_Request_descriptor_;
}

const Project_Modify_Request& Project_Modify_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Modify_Request* Project_Modify_Request::default_instance_ = NULL;

Project_Modify_Request* Project_Modify_Request::New() const {
  return new Project_Modify_Request;
}

void Project_Modify_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Modify_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Modify_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Modify_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Modify_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Modify_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Modify_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Modify_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Modify_Request::MergeFrom(const Project_Modify_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Modify_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Modify_Request::CopyFrom(const Project_Modify_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Modify_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_Modify_Request::Swap(Project_Modify_Request* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Modify_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Modify_Request_descriptor_;
  metadata.reflection = Project_Modify_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Modify_Update::kProjectFieldNumber;
#endif  // !_MSC_VER

Project_Modify_Update::Project_Modify_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Modify_Update::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_Modify_Update::Project_Modify_Update(const Project_Modify_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Modify_Update::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Modify_Update::~Project_Modify_Update() {
  SharedDtor();
}

void Project_Modify_Update::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_Modify_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Modify_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Modify_Update_descriptor_;
}

const Project_Modify_Update& Project_Modify_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Modify_Update* Project_Modify_Update::default_instance_ = NULL;

Project_Modify_Update* Project_Modify_Update::New() const {
  return new Project_Modify_Update;
}

void Project_Modify_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Modify_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Modify_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Modify_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Modify_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Modify_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Modify_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Modify_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Modify_Update::MergeFrom(const Project_Modify_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Modify_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Modify_Update::CopyFrom(const Project_Modify_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Modify_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_Modify_Update::Swap(Project_Modify_Update* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Modify_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Modify_Update_descriptor_;
  metadata.reflection = Project_Modify_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Modify::Project_Modify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Modify::InitAsDefaultInstance() {
}

Project_Modify::Project_Modify(const Project_Modify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Modify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Modify::~Project_Modify() {
  SharedDtor();
}

void Project_Modify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Modify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Modify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Modify_descriptor_;
}

const Project_Modify& Project_Modify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Modify* Project_Modify::default_instance_ = NULL;

Project_Modify* Project_Modify::New() const {
  return new Project_Modify;
}

void Project_Modify::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Modify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Modify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Modify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Modify::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Modify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Modify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Modify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Modify::MergeFrom(const Project_Modify& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Modify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Modify::CopyFrom(const Project_Modify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Modify::IsInitialized() const {

  return true;
}

void Project_Modify::Swap(Project_Modify* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Modify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Modify_descriptor_;
  metadata.reflection = Project_Modify_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Close_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Close_Request::Project_Close_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Close_Request::InitAsDefaultInstance() {
}

Project_Close_Request::Project_Close_Request(const Project_Close_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Close_Request::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Close_Request::~Project_Close_Request() {
  SharedDtor();
}

void Project_Close_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Close_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Close_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Close_Request_descriptor_;
}

const Project_Close_Request& Project_Close_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Close_Request* Project_Close_Request::default_instance_ = NULL;

Project_Close_Request* Project_Close_Request::New() const {
  return new Project_Close_Request;
}

void Project_Close_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Close_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Close_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Close_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Close_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Close_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Close_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Close_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Close_Request::MergeFrom(const Project_Close_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Close_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Close_Request::CopyFrom(const Project_Close_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Close_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_Close_Request::Swap(Project_Close_Request* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Close_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Close_Request_descriptor_;
  metadata.reflection = Project_Close_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Close_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Close_Update::Project_Close_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Close_Update::InitAsDefaultInstance() {
}

Project_Close_Update::Project_Close_Update(const Project_Close_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Close_Update::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Close_Update::~Project_Close_Update() {
  SharedDtor();
}

void Project_Close_Update::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Close_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Close_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Close_Update_descriptor_;
}

const Project_Close_Update& Project_Close_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Close_Update* Project_Close_Update::default_instance_ = NULL;

Project_Close_Update* Project_Close_Update::New() const {
  return new Project_Close_Update;
}

void Project_Close_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Close_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Close_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Close_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Close_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Close_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Close_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Close_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Close_Update::MergeFrom(const Project_Close_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Close_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Close_Update::CopyFrom(const Project_Close_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Close_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_Close_Update::Swap(Project_Close_Update* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Close_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Close_Update_descriptor_;
  metadata.reflection = Project_Close_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Close::Project_Close()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Close::InitAsDefaultInstance() {
}

Project_Close::Project_Close(const Project_Close& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Close::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Close::~Project_Close() {
  SharedDtor();
}

void Project_Close::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Close::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Close::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Close_descriptor_;
}

const Project_Close& Project_Close::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Close* Project_Close::default_instance_ = NULL;

Project_Close* Project_Close::New() const {
  return new Project_Close;
}

void Project_Close::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Close::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Close::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Close::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Close::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Close::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Close* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Close*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Close::MergeFrom(const Project_Close& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Close::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Close::CopyFrom(const Project_Close& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Close::IsInitialized() const {

  return true;
}

void Project_Close::Swap(Project_Close* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Close::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Close_descriptor_;
  metadata.reflection = Project_Close_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Store_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Store_Request::Project_Store_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Store_Request::InitAsDefaultInstance() {
}

Project_Store_Request::Project_Store_Request(const Project_Store_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Store_Request::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Store_Request::~Project_Store_Request() {
  SharedDtor();
}

void Project_Store_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Store_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Store_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Store_Request_descriptor_;
}

const Project_Store_Request& Project_Store_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Store_Request* Project_Store_Request::default_instance_ = NULL;

Project_Store_Request* Project_Store_Request::New() const {
  return new Project_Store_Request;
}

void Project_Store_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Store_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Store_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Store_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Store_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Store_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Store_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Store_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Store_Request::MergeFrom(const Project_Store_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Store_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Store_Request::CopyFrom(const Project_Store_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Store_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_Store_Request::Swap(Project_Store_Request* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Store_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Store_Request_descriptor_;
  metadata.reflection = Project_Store_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Store_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Store_Status::Project_Store_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Store_Status::InitAsDefaultInstance() {
}

Project_Store_Status::Project_Store_Status(const Project_Store_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Store_Status::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Store_Status::~Project_Store_Status() {
  SharedDtor();
}

void Project_Store_Status::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Store_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Store_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Store_Status_descriptor_;
}

const Project_Store_Status& Project_Store_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Store_Status* Project_Store_Status::default_instance_ = NULL;

Project_Store_Status* Project_Store_Status::New() const {
  return new Project_Store_Status;
}

void Project_Store_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Store_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Store_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Store_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Store_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Store_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Store_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Store_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Store_Status::MergeFrom(const Project_Store_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Store_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Store_Status::CopyFrom(const Project_Store_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Store_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_Store_Status::Swap(Project_Store_Status* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Store_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Store_Status_descriptor_;
  metadata.reflection = Project_Store_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Store::Project_Store()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Store::InitAsDefaultInstance() {
}

Project_Store::Project_Store(const Project_Store& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Store::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Store::~Project_Store() {
  SharedDtor();
}

void Project_Store::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Store::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Store::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Store_descriptor_;
}

const Project_Store& Project_Store::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Store* Project_Store::default_instance_ = NULL;

Project_Store* Project_Store::New() const {
  return new Project_Store;
}

void Project_Store::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Store::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Store::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Store::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Store::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Store::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Store* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Store*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Store::MergeFrom(const Project_Store& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Store::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Store::CopyFrom(const Project_Store& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Store::IsInitialized() const {

  return true;
}

void Project_Store::Swap(Project_Store* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Store::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Store_descriptor_;
  metadata.reflection = Project_Store_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_List_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_List_Request::Project_Library_List_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_List_Request::InitAsDefaultInstance() {
}

Project_Library_List_Request::Project_Library_List_Request(const Project_Library_List_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_List_Request::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_List_Request::~Project_Library_List_Request() {
  SharedDtor();
}

void Project_Library_List_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_List_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_List_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_List_Request_descriptor_;
}

const Project_Library_List_Request& Project_Library_List_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_List_Request* Project_Library_List_Request::default_instance_ = NULL;

Project_Library_List_Request* Project_Library_List_Request::New() const {
  return new Project_Library_List_Request;
}

void Project_Library_List_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_List_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_List_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_List_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_List_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_List_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_List_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_List_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_List_Request::MergeFrom(const Project_Library_List_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_List_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_List_Request::CopyFrom(const Project_Library_List_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_List_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_Library_List_Request::Swap(Project_Library_List_Request* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_List_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_List_Request_descriptor_;
  metadata.reflection = Project_Library_List_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_List_Status::kLibrariesFieldNumber;
const int Project_Library_List_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_List_Status::Project_Library_List_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_List_Status::InitAsDefaultInstance() {
}

Project_Library_List_Status::Project_Library_List_Status(const Project_Library_List_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_List_Status::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_List_Status::~Project_Library_List_Status() {
  SharedDtor();
}

void Project_Library_List_Status::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_List_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_List_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_List_Status_descriptor_;
}

const Project_Library_List_Status& Project_Library_List_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_List_Status* Project_Library_List_Status::default_instance_ = NULL;

Project_Library_List_Status* Project_Library_List_Status::New() const {
  return new Project_Library_List_Status;
}

void Project_Library_List_Status::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    projectid_ = 0;
  }
  libraries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_List_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.library.Library libraries = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_libraries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_libraries()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_libraries;
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_List_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.library.Library libraries = 1;
  for (int i = 0; i < this->libraries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->libraries(i), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_List_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.library.Library libraries = 1;
  for (int i = 0; i < this->libraries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->libraries(i), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_List_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.library.Library libraries = 1;
  total_size += 1 * this->libraries_size();
  for (int i = 0; i < this->libraries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->libraries(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_List_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_List_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_List_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_List_Status::MergeFrom(const Project_Library_List_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  libraries_.MergeFrom(from.libraries_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_List_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_List_Status::CopyFrom(const Project_Library_List_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_List_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000002) != 0x00000002) return false;

  for (int i = 0; i < libraries_size(); i++) {
    if (!this->libraries(i).IsInitialized()) return false;
  }
  return true;
}

void Project_Library_List_Status::Swap(Project_Library_List_Status* other) {
  if (other != this) {
    libraries_.Swap(&other->libraries_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_List_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_List_Status_descriptor_;
  metadata.reflection = Project_Library_List_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_List::Project_Library_List()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_List::InitAsDefaultInstance() {
}

Project_Library_List::Project_Library_List(const Project_Library_List& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_List::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_List::~Project_Library_List() {
  SharedDtor();
}

void Project_Library_List::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_List::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_List::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_List_descriptor_;
}

const Project_Library_List& Project_Library_List::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_List* Project_Library_List::default_instance_ = NULL;

Project_Library_List* Project_Library_List::New() const {
  return new Project_Library_List;
}

void Project_Library_List::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_List::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_List::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_List::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_List::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_List::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_List* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_List*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_List::MergeFrom(const Project_Library_List& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_List::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_List::CopyFrom(const Project_Library_List& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_List::IsInitialized() const {

  return true;
}

void Project_Library_List::Swap(Project_Library_List* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_List::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_List_descriptor_;
  metadata.reflection = Project_Library_List_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Lookup_Request::kLibraryIDFieldNumber;
const int Project_Library_Lookup_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Lookup_Request::Project_Library_Lookup_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Lookup_Request::InitAsDefaultInstance() {
}

Project_Library_Lookup_Request::Project_Library_Lookup_Request(const Project_Library_Lookup_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Lookup_Request::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Lookup_Request::~Project_Library_Lookup_Request() {
  SharedDtor();
}

void Project_Library_Lookup_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Lookup_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Lookup_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Lookup_Request_descriptor_;
}

const Project_Library_Lookup_Request& Project_Library_Lookup_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Lookup_Request* Project_Library_Lookup_Request::default_instance_ = NULL;

Project_Library_Lookup_Request* Project_Library_Lookup_Request::New() const {
  return new Project_Library_Lookup_Request;
}

void Project_Library_Lookup_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Lookup_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Lookup_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Lookup_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Lookup_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Lookup_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Lookup_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Lookup_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Lookup_Request::MergeFrom(const Project_Library_Lookup_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Lookup_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Lookup_Request::CopyFrom(const Project_Library_Lookup_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Lookup_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Project_Library_Lookup_Request::Swap(Project_Library_Lookup_Request* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Lookup_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Lookup_Request_descriptor_;
  metadata.reflection = Project_Library_Lookup_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Lookup_Status::kLibraryFieldNumber;
const int Project_Library_Lookup_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Lookup_Status::Project_Library_Lookup_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Lookup_Status::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Project_Library_Lookup_Status::Project_Library_Lookup_Status(const Project_Library_Lookup_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Lookup_Status::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Lookup_Status::~Project_Library_Lookup_Status() {
  SharedDtor();
}

void Project_Library_Lookup_Status::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Project_Library_Lookup_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Lookup_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Lookup_Status_descriptor_;
}

const Project_Library_Lookup_Status& Project_Library_Lookup_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Lookup_Status* Project_Library_Lookup_Status::default_instance_ = NULL;

Project_Library_Lookup_Status* Project_Library_Lookup_Status::New() const {
  return new Project_Library_Lookup_Status;
}

void Project_Library_Lookup_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Lookup_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Lookup_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Lookup_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Lookup_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Lookup_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Lookup_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Lookup_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Lookup_Status::MergeFrom(const Project_Library_Lookup_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Lookup_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Lookup_Status::CopyFrom(const Project_Library_Lookup_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Lookup_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_Lookup_Status::Swap(Project_Library_Lookup_Status* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Lookup_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Lookup_Status_descriptor_;
  metadata.reflection = Project_Library_Lookup_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_Lookup::Project_Library_Lookup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Lookup::InitAsDefaultInstance() {
}

Project_Library_Lookup::Project_Library_Lookup(const Project_Library_Lookup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Lookup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Lookup::~Project_Library_Lookup() {
  SharedDtor();
}

void Project_Library_Lookup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Lookup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Lookup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Lookup_descriptor_;
}

const Project_Library_Lookup& Project_Library_Lookup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Lookup* Project_Library_Lookup::default_instance_ = NULL;

Project_Library_Lookup* Project_Library_Lookup::New() const {
  return new Project_Library_Lookup;
}

void Project_Library_Lookup::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Lookup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_Lookup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Lookup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Lookup::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Lookup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Lookup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Lookup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Lookup::MergeFrom(const Project_Library_Lookup& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Lookup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Lookup::CopyFrom(const Project_Library_Lookup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Lookup::IsInitialized() const {

  return true;
}

void Project_Library_Lookup::Swap(Project_Library_Lookup* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Lookup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Lookup_descriptor_;
  metadata.reflection = Project_Library_Lookup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Create_Request::kNameFieldNumber;
const int Project_Library_Create_Request::kPathFieldNumber;
const int Project_Library_Create_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Create_Request::Project_Library_Create_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Create_Request::InitAsDefaultInstance() {
}

Project_Library_Create_Request::Project_Library_Create_Request(const Project_Library_Create_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Create_Request::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Create_Request::~Project_Library_Create_Request() {
  SharedDtor();
}

void Project_Library_Create_Request::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Project_Library_Create_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Create_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Create_Request_descriptor_;
}

const Project_Library_Create_Request& Project_Library_Create_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Create_Request* Project_Library_Create_Request::default_instance_ = NULL;

Project_Library_Create_Request* Project_Library_Create_Request::New() const {
  return new Project_Library_Create_Request;
}

void Project_Library_Create_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Create_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // required string path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Create_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Create_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Create_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Create_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Create_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Create_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Create_Request::MergeFrom(const Project_Library_Create_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Create_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Create_Request::CopyFrom(const Project_Library_Create_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Create_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Project_Library_Create_Request::Swap(Project_Library_Create_Request* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(path_, other->path_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Create_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Create_Request_descriptor_;
  metadata.reflection = Project_Library_Create_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Create_Update::kLibraryFieldNumber;
const int Project_Library_Create_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Create_Update::Project_Library_Create_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Create_Update::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Project_Library_Create_Update::Project_Library_Create_Update(const Project_Library_Create_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Create_Update::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Create_Update::~Project_Library_Create_Update() {
  SharedDtor();
}

void Project_Library_Create_Update::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Project_Library_Create_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Create_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Create_Update_descriptor_;
}

const Project_Library_Create_Update& Project_Library_Create_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Create_Update* Project_Library_Create_Update::default_instance_ = NULL;

Project_Library_Create_Update* Project_Library_Create_Update::New() const {
  return new Project_Library_Create_Update;
}

void Project_Library_Create_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Create_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Create_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Create_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Create_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Create_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Create_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Create_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Create_Update::MergeFrom(const Project_Library_Create_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Create_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Create_Update::CopyFrom(const Project_Library_Create_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Create_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_Create_Update::Swap(Project_Library_Create_Update* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Create_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Create_Update_descriptor_;
  metadata.reflection = Project_Library_Create_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_Create::Project_Library_Create()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Create::InitAsDefaultInstance() {
}

Project_Library_Create::Project_Library_Create(const Project_Library_Create& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Create::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Create::~Project_Library_Create() {
  SharedDtor();
}

void Project_Library_Create::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Create::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Create::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Create_descriptor_;
}

const Project_Library_Create& Project_Library_Create::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Create* Project_Library_Create::default_instance_ = NULL;

Project_Library_Create* Project_Library_Create::New() const {
  return new Project_Library_Create;
}

void Project_Library_Create::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Create::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_Create::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Create::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Create::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Create::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Create* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Create*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Create::MergeFrom(const Project_Library_Create& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Create::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Create::CopyFrom(const Project_Library_Create& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Create::IsInitialized() const {

  return true;
}

void Project_Library_Create::Swap(Project_Library_Create* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Create::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Create_descriptor_;
  metadata.reflection = Project_Library_Create_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Load_Request::kPathFieldNumber;
const int Project_Library_Load_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Load_Request::Project_Library_Load_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Load_Request::InitAsDefaultInstance() {
}

Project_Library_Load_Request::Project_Library_Load_Request(const Project_Library_Load_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Load_Request::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Load_Request::~Project_Library_Load_Request() {
  SharedDtor();
}

void Project_Library_Load_Request::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Project_Library_Load_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Load_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Load_Request_descriptor_;
}

const Project_Library_Load_Request& Project_Library_Load_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Load_Request* Project_Library_Load_Request::default_instance_ = NULL;

Project_Library_Load_Request* Project_Library_Load_Request::New() const {
  return new Project_Library_Load_Request;
}

void Project_Library_Load_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Load_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Load_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Load_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Load_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Load_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Load_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Load_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Load_Request::MergeFrom(const Project_Library_Load_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Load_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Load_Request::CopyFrom(const Project_Library_Load_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Load_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Project_Library_Load_Request::Swap(Project_Library_Load_Request* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Load_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Load_Request_descriptor_;
  metadata.reflection = Project_Library_Load_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Load_Update::kLibraryFieldNumber;
const int Project_Library_Load_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Load_Update::Project_Library_Load_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Load_Update::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Project_Library_Load_Update::Project_Library_Load_Update(const Project_Library_Load_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Load_Update::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Load_Update::~Project_Library_Load_Update() {
  SharedDtor();
}

void Project_Library_Load_Update::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Project_Library_Load_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Load_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Load_Update_descriptor_;
}

const Project_Library_Load_Update& Project_Library_Load_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Load_Update* Project_Library_Load_Update::default_instance_ = NULL;

Project_Library_Load_Update* Project_Library_Load_Update::New() const {
  return new Project_Library_Load_Update;
}

void Project_Library_Load_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Load_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Load_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Load_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Load_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Load_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Load_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Load_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Load_Update::MergeFrom(const Project_Library_Load_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Load_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Load_Update::CopyFrom(const Project_Library_Load_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Load_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_Load_Update::Swap(Project_Library_Load_Update* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Load_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Load_Update_descriptor_;
  metadata.reflection = Project_Library_Load_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_Load::Project_Library_Load()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Load::InitAsDefaultInstance() {
}

Project_Library_Load::Project_Library_Load(const Project_Library_Load& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Load::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Load::~Project_Library_Load() {
  SharedDtor();
}

void Project_Library_Load::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Load::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Load::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Load_descriptor_;
}

const Project_Library_Load& Project_Library_Load::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Load* Project_Library_Load::default_instance_ = NULL;

Project_Library_Load* Project_Library_Load::New() const {
  return new Project_Library_Load;
}

void Project_Library_Load::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Load::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_Load::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Load::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Load::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Load::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Load* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Load*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Load::MergeFrom(const Project_Library_Load& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Load::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Load::CopyFrom(const Project_Library_Load& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Load::IsInitialized() const {

  return true;
}

void Project_Library_Load::Swap(Project_Library_Load* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Load::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Load_descriptor_;
  metadata.reflection = Project_Library_Load_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Unload_Request::kLibraryIDFieldNumber;
const int Project_Library_Unload_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Unload_Request::Project_Library_Unload_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Unload_Request::InitAsDefaultInstance() {
}

Project_Library_Unload_Request::Project_Library_Unload_Request(const Project_Library_Unload_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Unload_Request::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Unload_Request::~Project_Library_Unload_Request() {
  SharedDtor();
}

void Project_Library_Unload_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Unload_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Unload_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Unload_Request_descriptor_;
}

const Project_Library_Unload_Request& Project_Library_Unload_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Unload_Request* Project_Library_Unload_Request::default_instance_ = NULL;

Project_Library_Unload_Request* Project_Library_Unload_Request::New() const {
  return new Project_Library_Unload_Request;
}

void Project_Library_Unload_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Unload_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Unload_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Unload_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Unload_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Unload_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Unload_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Unload_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Unload_Request::MergeFrom(const Project_Library_Unload_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Unload_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Unload_Request::CopyFrom(const Project_Library_Unload_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Unload_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Project_Library_Unload_Request::Swap(Project_Library_Unload_Request* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Unload_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Unload_Request_descriptor_;
  metadata.reflection = Project_Library_Unload_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Unload_Update::kLibraryIDFieldNumber;
const int Project_Library_Unload_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Unload_Update::Project_Library_Unload_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Unload_Update::InitAsDefaultInstance() {
}

Project_Library_Unload_Update::Project_Library_Unload_Update(const Project_Library_Unload_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Unload_Update::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Unload_Update::~Project_Library_Unload_Update() {
  SharedDtor();
}

void Project_Library_Unload_Update::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Unload_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Unload_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Unload_Update_descriptor_;
}

const Project_Library_Unload_Update& Project_Library_Unload_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Unload_Update* Project_Library_Unload_Update::default_instance_ = NULL;

Project_Library_Unload_Update* Project_Library_Unload_Update::New() const {
  return new Project_Library_Unload_Update;
}

void Project_Library_Unload_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Unload_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Unload_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Unload_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Unload_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Unload_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Unload_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Unload_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Unload_Update::MergeFrom(const Project_Library_Unload_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Unload_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Unload_Update::CopyFrom(const Project_Library_Unload_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Unload_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Project_Library_Unload_Update::Swap(Project_Library_Unload_Update* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Unload_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Unload_Update_descriptor_;
  metadata.reflection = Project_Library_Unload_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_Unload::Project_Library_Unload()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Unload::InitAsDefaultInstance() {
}

Project_Library_Unload::Project_Library_Unload(const Project_Library_Unload& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Unload::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Unload::~Project_Library_Unload() {
  SharedDtor();
}

void Project_Library_Unload::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Unload::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Unload::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Unload_descriptor_;
}

const Project_Library_Unload& Project_Library_Unload::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Unload* Project_Library_Unload::default_instance_ = NULL;

Project_Library_Unload* Project_Library_Unload::New() const {
  return new Project_Library_Unload;
}

void Project_Library_Unload::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Unload::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_Unload::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Unload::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Unload::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Unload::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Unload* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Unload*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Unload::MergeFrom(const Project_Library_Unload& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Unload::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Unload::CopyFrom(const Project_Library_Unload& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Unload::IsInitialized() const {

  return true;
}

void Project_Library_Unload::Swap(Project_Library_Unload* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Unload::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Unload_descriptor_;
  metadata.reflection = Project_Library_Unload_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Store_Request::kLibraryIDFieldNumber;
const int Project_Library_Store_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Store_Request::Project_Library_Store_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Store_Request::InitAsDefaultInstance() {
}

Project_Library_Store_Request::Project_Library_Store_Request(const Project_Library_Store_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Store_Request::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Store_Request::~Project_Library_Store_Request() {
  SharedDtor();
}

void Project_Library_Store_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Store_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Store_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Store_Request_descriptor_;
}

const Project_Library_Store_Request& Project_Library_Store_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Store_Request* Project_Library_Store_Request::default_instance_ = NULL;

Project_Library_Store_Request* Project_Library_Store_Request::New() const {
  return new Project_Library_Store_Request;
}

void Project_Library_Store_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Store_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Store_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Store_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Store_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Store_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Store_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Store_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Store_Request::MergeFrom(const Project_Library_Store_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Store_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Store_Request::CopyFrom(const Project_Library_Store_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Store_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Project_Library_Store_Request::Swap(Project_Library_Store_Request* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Store_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Store_Request_descriptor_;
  metadata.reflection = Project_Library_Store_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_Store_Status::kLibraryIDFieldNumber;
const int Project_Library_Store_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_Store_Status::Project_Library_Store_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Store_Status::InitAsDefaultInstance() {
}

Project_Library_Store_Status::Project_Library_Store_Status(const Project_Library_Store_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Store_Status::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Store_Status::~Project_Library_Store_Status() {
  SharedDtor();
}

void Project_Library_Store_Status::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Store_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Store_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Store_Status_descriptor_;
}

const Project_Library_Store_Status& Project_Library_Store_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Store_Status* Project_Library_Store_Status::default_instance_ = NULL;

Project_Library_Store_Status* Project_Library_Store_Status::New() const {
  return new Project_Library_Store_Status;
}

void Project_Library_Store_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Store_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_Store_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Store_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Store_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Store_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Store_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Store_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Store_Status::MergeFrom(const Project_Library_Store_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Store_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Store_Status::CopyFrom(const Project_Library_Store_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Store_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Project_Library_Store_Status::Swap(Project_Library_Store_Status* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Store_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Store_Status_descriptor_;
  metadata.reflection = Project_Library_Store_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_Store::Project_Library_Store()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_Store::InitAsDefaultInstance() {
}

Project_Library_Store::Project_Library_Store(const Project_Library_Store& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_Store::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_Store::~Project_Library_Store() {
  SharedDtor();
}

void Project_Library_Store::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_Store::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_Store::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_Store_descriptor_;
}

const Project_Library_Store& Project_Library_Store::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_Store* Project_Library_Store::default_instance_ = NULL;

Project_Library_Store* Project_Library_Store::New() const {
  return new Project_Library_Store;
}

void Project_Library_Store::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_Store::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_Store::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_Store::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_Store::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_Store::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_Store* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_Store*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_Store::MergeFrom(const Project_Library_Store& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_Store::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_Store::CopyFrom(const Project_Library_Store& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_Store::IsInitialized() const {

  return true;
}

void Project_Library_Store::Swap(Project_Library_Store* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_Store::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_Store_descriptor_;
  metadata.reflection = Project_Library_Store_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Get_Request::kMaxDepthFieldNumber;
const int Project_Library_AST_Get_Request::kBcFieldNumber;
const int Project_Library_AST_Get_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Get_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Get_Request::Project_Library_AST_Get_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Get_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Get_Request::Project_Library_AST_Get_Request(const Project_Library_AST_Get_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Get_Request::SharedCtor() {
  _cached_size_ = 0;
  maxdepth_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Get_Request::~Project_Library_AST_Get_Request() {
  SharedDtor();
}

void Project_Library_AST_Get_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Get_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Get_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Get_Request_descriptor_;
}

const Project_Library_AST_Get_Request& Project_Library_AST_Get_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Get_Request* Project_Library_AST_Get_Request::default_instance_ = NULL;

Project_Library_AST_Get_Request* Project_Library_AST_Get_Request::New() const {
  return new Project_Library_AST_Get_Request;
}

void Project_Library_AST_Get_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    maxdepth_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Get_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 maxDepth = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxdepth_)));
          set_has_maxdepth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Get_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 maxDepth = 1;
  if (has_maxdepth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->maxdepth(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Get_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 maxDepth = 1;
  if (has_maxdepth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->maxdepth(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Get_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 maxDepth = 1;
    if (has_maxdepth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxdepth());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Get_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Get_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Get_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Get_Request::MergeFrom(const Project_Library_AST_Get_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maxdepth()) {
      set_maxdepth(from.maxdepth());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Get_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Get_Request::CopyFrom(const Project_Library_AST_Get_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Get_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Get_Request::Swap(Project_Library_AST_Get_Request* other) {
  if (other != this) {
    std::swap(maxdepth_, other->maxdepth_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Get_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Get_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Get_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Get_Status::kFocusFieldNumber;
const int Project_Library_AST_Get_Status::kMaxDepthFieldNumber;
const int Project_Library_AST_Get_Status::kBcFieldNumber;
const int Project_Library_AST_Get_Status::kLibraryIDFieldNumber;
const int Project_Library_AST_Get_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Get_Status::Project_Library_AST_Get_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Get_Status::InitAsDefaultInstance() {
  focus_ = const_cast< ::generated::proto::focus::Focus*>(&::generated::proto::focus::Focus::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Get_Status::Project_Library_AST_Get_Status(const Project_Library_AST_Get_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Get_Status::SharedCtor() {
  _cached_size_ = 0;
  focus_ = NULL;
  maxdepth_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Get_Status::~Project_Library_AST_Get_Status() {
  SharedDtor();
}

void Project_Library_AST_Get_Status::SharedDtor() {
  if (this != default_instance_) {
    delete focus_;
    delete bc_;
  }
}

void Project_Library_AST_Get_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Get_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Get_Status_descriptor_;
}

const Project_Library_AST_Get_Status& Project_Library_AST_Get_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Get_Status* Project_Library_AST_Get_Status::default_instance_ = NULL;

Project_Library_AST_Get_Status* Project_Library_AST_Get_Status::New() const {
  return new Project_Library_AST_Get_Status;
}

void Project_Library_AST_Get_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_focus()) {
      if (focus_ != NULL) focus_->::generated::proto::focus::Focus::Clear();
    }
    maxdepth_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Get_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.focus.Focus focus = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_focus()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_maxDepth;
        break;
      }

      // optional int32 maxDepth = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_maxDepth:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxdepth_)));
          set_has_maxdepth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Get_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.focus.Focus focus = 1;
  if (has_focus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->focus(), output);
  }

  // optional int32 maxDepth = 2;
  if (has_maxdepth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->maxdepth(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Get_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.focus.Focus focus = 1;
  if (has_focus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->focus(), target);
  }

  // optional int32 maxDepth = 2;
  if (has_maxdepth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->maxdepth(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Get_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.focus.Focus focus = 1;
    if (has_focus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->focus());
    }

    // optional int32 maxDepth = 2;
    if (has_maxdepth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxdepth());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Get_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Get_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Get_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Get_Status::MergeFrom(const Project_Library_AST_Get_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_focus()) {
      mutable_focus()->::generated::proto::focus::Focus::MergeFrom(from.focus());
    }
    if (from.has_maxdepth()) {
      set_maxdepth(from.maxdepth());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Get_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Get_Status::CopyFrom(const Project_Library_AST_Get_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Get_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001d) != 0x0000001d) return false;

  if (has_focus()) {
    if (!this->focus().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Get_Status::Swap(Project_Library_AST_Get_Status* other) {
  if (other != this) {
    std::swap(focus_, other->focus_);
    std::swap(maxdepth_, other->maxdepth_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Get_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Get_Status_descriptor_;
  metadata.reflection = Project_Library_AST_Get_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Get::Project_Library_AST_Get()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Get::InitAsDefaultInstance() {
}

Project_Library_AST_Get::Project_Library_AST_Get(const Project_Library_AST_Get& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Get::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Get::~Project_Library_AST_Get() {
  SharedDtor();
}

void Project_Library_AST_Get::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Get::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Get::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Get_descriptor_;
}

const Project_Library_AST_Get& Project_Library_AST_Get::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Get* Project_Library_AST_Get::default_instance_ = NULL;

Project_Library_AST_Get* Project_Library_AST_Get::New() const {
  return new Project_Library_AST_Get;
}

void Project_Library_AST_Get::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Get::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Get::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Get::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Get::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Get::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Get* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Get*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Get::MergeFrom(const Project_Library_AST_Get& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Get::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Get::CopyFrom(const Project_Library_AST_Get& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Get::IsInitialized() const {

  return true;
}

void Project_Library_AST_Get::Swap(Project_Library_AST_Get* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Get::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Get_descriptor_;
  metadata.reflection = Project_Library_AST_Get_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Module_Add_Request::kModuleFieldNumber;
const int Project_Library_AST_Module_Add_Request::kParentbcFieldNumber;
const int Project_Library_AST_Module_Add_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Module_Add_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Module_Add_Request::Project_Library_AST_Module_Add_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Add_Request::InitAsDefaultInstance() {
  module_ = const_cast< ::generated::proto::module::Module*>(&::generated::proto::module::Module::default_instance());
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Module_Add_Request::Project_Library_AST_Module_Add_Request(const Project_Library_AST_Module_Add_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Add_Request::SharedCtor() {
  _cached_size_ = 0;
  module_ = NULL;
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Add_Request::~Project_Library_AST_Module_Add_Request() {
  SharedDtor();
}

void Project_Library_AST_Module_Add_Request::SharedDtor() {
  if (this != default_instance_) {
    delete module_;
    delete parentbc_;
  }
}

void Project_Library_AST_Module_Add_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Add_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Add_Request_descriptor_;
}

const Project_Library_AST_Module_Add_Request& Project_Library_AST_Module_Add_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Add_Request* Project_Library_AST_Module_Add_Request::default_instance_ = NULL;

Project_Library_AST_Module_Add_Request* Project_Library_AST_Module_Add_Request::New() const {
  return new Project_Library_AST_Module_Add_Request;
}

void Project_Library_AST_Module_Add_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_module()) {
      if (module_ != NULL) module_->::generated::proto::module::Module::Clear();
    }
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Add_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.module.Module module = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_module()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Add_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.module.Module module = 1;
  if (has_module()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Add_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.module.Module module = 1;
  if (has_module()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->module(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Add_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.module.Module module = 1;
    if (has_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module());
    }

    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Add_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Add_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Add_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Add_Request::MergeFrom(const Project_Library_AST_Module_Add_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_module()) {
      mutable_module()->::generated::proto::module::Module::MergeFrom(from.module());
    }
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Add_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Add_Request::CopyFrom(const Project_Library_AST_Module_Add_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Add_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_module()) {
    if (!this->module().IsInitialized()) return false;
  }
  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Module_Add_Request::Swap(Project_Library_AST_Module_Add_Request* other) {
  if (other != this) {
    std::swap(module_, other->module_);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Add_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Add_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Add_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Module_Add_Update::kModuleFieldNumber;
const int Project_Library_AST_Module_Add_Update::kBcFieldNumber;
const int Project_Library_AST_Module_Add_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Module_Add_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Module_Add_Update::Project_Library_AST_Module_Add_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Add_Update::InitAsDefaultInstance() {
  module_ = const_cast< ::generated::proto::module::Module*>(&::generated::proto::module::Module::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Module_Add_Update::Project_Library_AST_Module_Add_Update(const Project_Library_AST_Module_Add_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Add_Update::SharedCtor() {
  _cached_size_ = 0;
  module_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Add_Update::~Project_Library_AST_Module_Add_Update() {
  SharedDtor();
}

void Project_Library_AST_Module_Add_Update::SharedDtor() {
  if (this != default_instance_) {
    delete module_;
    delete bc_;
  }
}

void Project_Library_AST_Module_Add_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Add_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Add_Update_descriptor_;
}

const Project_Library_AST_Module_Add_Update& Project_Library_AST_Module_Add_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Add_Update* Project_Library_AST_Module_Add_Update::default_instance_ = NULL;

Project_Library_AST_Module_Add_Update* Project_Library_AST_Module_Add_Update::New() const {
  return new Project_Library_AST_Module_Add_Update;
}

void Project_Library_AST_Module_Add_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_module()) {
      if (module_ != NULL) module_->::generated::proto::module::Module::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Add_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.module.Module module = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_module()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Add_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.module.Module module = 1;
  if (has_module()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Add_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.module.Module module = 1;
  if (has_module()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->module(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Add_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.module.Module module = 1;
    if (has_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Add_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Add_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Add_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Add_Update::MergeFrom(const Project_Library_AST_Module_Add_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_module()) {
      mutable_module()->::generated::proto::module::Module::MergeFrom(from.module());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Add_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Add_Update::CopyFrom(const Project_Library_AST_Module_Add_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Add_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_module()) {
    if (!this->module().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Module_Add_Update::Swap(Project_Library_AST_Module_Add_Update* other) {
  if (other != this) {
    std::swap(module_, other->module_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Add_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Add_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Add_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Module_Add::Project_Library_AST_Module_Add()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Add::InitAsDefaultInstance() {
}

Project_Library_AST_Module_Add::Project_Library_AST_Module_Add(const Project_Library_AST_Module_Add& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Add::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Add::~Project_Library_AST_Module_Add() {
  SharedDtor();
}

void Project_Library_AST_Module_Add::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Module_Add::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Add::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Add_descriptor_;
}

const Project_Library_AST_Module_Add& Project_Library_AST_Module_Add::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Add* Project_Library_AST_Module_Add::default_instance_ = NULL;

Project_Library_AST_Module_Add* Project_Library_AST_Module_Add::New() const {
  return new Project_Library_AST_Module_Add;
}

void Project_Library_AST_Module_Add::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Add::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Add::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Add::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Add* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Add*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Add::MergeFrom(const Project_Library_AST_Module_Add& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Add::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Add::CopyFrom(const Project_Library_AST_Module_Add& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Add::IsInitialized() const {

  return true;
}

void Project_Library_AST_Module_Add::Swap(Project_Library_AST_Module_Add* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Add::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Add_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Add_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Module_Modify_Cls_Request::kClsFieldNumber;
const int Project_Library_AST_Module_Modify_Cls_Request::kBcFieldNumber;
const int Project_Library_AST_Module_Modify_Cls_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Module_Modify_Cls_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Cls_Request::Project_Library_AST_Module_Modify_Cls_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Cls_Request::InitAsDefaultInstance() {
  cls_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Module_Modify_Cls_Request::Project_Library_AST_Module_Modify_Cls_Request(const Project_Library_AST_Module_Modify_Cls_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Cls_Request::SharedCtor() {
  _cached_size_ = 0;
  cls_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Cls_Request::~Project_Library_AST_Module_Modify_Cls_Request() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Cls_Request::SharedDtor() {
  if (this != default_instance_) {
    delete cls_;
    delete bc_;
  }
}

void Project_Library_AST_Module_Modify_Cls_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Cls_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Cls_Request_descriptor_;
}

const Project_Library_AST_Module_Modify_Cls_Request& Project_Library_AST_Module_Modify_Cls_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Cls_Request* Project_Library_AST_Module_Modify_Cls_Request::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Cls_Request* Project_Library_AST_Module_Modify_Cls_Request::New() const {
  return new Project_Library_AST_Module_Modify_Cls_Request;
}

void Project_Library_AST_Module_Modify_Cls_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cls()) {
      if (cls_ != NULL) cls_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Cls_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type cls = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cls()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Cls_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cls(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Cls_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cls(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Cls_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type cls = 1;
    if (has_cls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cls());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Cls_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Cls_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Cls_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Cls_Request::MergeFrom(const Project_Library_AST_Module_Modify_Cls_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cls()) {
      mutable_cls()->::generated::proto::type::Type::MergeFrom(from.cls());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Cls_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Cls_Request::CopyFrom(const Project_Library_AST_Module_Modify_Cls_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Cls_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_cls()) {
    if (!this->cls().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Module_Modify_Cls_Request::Swap(Project_Library_AST_Module_Modify_Cls_Request* other) {
  if (other != this) {
    std::swap(cls_, other->cls_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Cls_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Cls_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Cls_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Module_Modify_Cls_Update::kClsFieldNumber;
const int Project_Library_AST_Module_Modify_Cls_Update::kBcFieldNumber;
const int Project_Library_AST_Module_Modify_Cls_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Module_Modify_Cls_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Cls_Update::Project_Library_AST_Module_Modify_Cls_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Cls_Update::InitAsDefaultInstance() {
  cls_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Module_Modify_Cls_Update::Project_Library_AST_Module_Modify_Cls_Update(const Project_Library_AST_Module_Modify_Cls_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Cls_Update::SharedCtor() {
  _cached_size_ = 0;
  cls_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Cls_Update::~Project_Library_AST_Module_Modify_Cls_Update() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Cls_Update::SharedDtor() {
  if (this != default_instance_) {
    delete cls_;
    delete bc_;
  }
}

void Project_Library_AST_Module_Modify_Cls_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Cls_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Cls_Update_descriptor_;
}

const Project_Library_AST_Module_Modify_Cls_Update& Project_Library_AST_Module_Modify_Cls_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Cls_Update* Project_Library_AST_Module_Modify_Cls_Update::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Cls_Update* Project_Library_AST_Module_Modify_Cls_Update::New() const {
  return new Project_Library_AST_Module_Modify_Cls_Update;
}

void Project_Library_AST_Module_Modify_Cls_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cls()) {
      if (cls_ != NULL) cls_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Cls_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type cls = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cls()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Cls_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cls(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Cls_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cls(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Cls_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type cls = 1;
    if (has_cls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cls());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Cls_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Cls_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Cls_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Cls_Update::MergeFrom(const Project_Library_AST_Module_Modify_Cls_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cls()) {
      mutable_cls()->::generated::proto::type::Type::MergeFrom(from.cls());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Cls_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Cls_Update::CopyFrom(const Project_Library_AST_Module_Modify_Cls_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Cls_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_cls()) {
    if (!this->cls().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Module_Modify_Cls_Update::Swap(Project_Library_AST_Module_Modify_Cls_Update* other) {
  if (other != this) {
    std::swap(cls_, other->cls_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Cls_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Cls_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Cls_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Cls::Project_Library_AST_Module_Modify_Cls()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Cls::InitAsDefaultInstance() {
}

Project_Library_AST_Module_Modify_Cls::Project_Library_AST_Module_Modify_Cls(const Project_Library_AST_Module_Modify_Cls& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Cls::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Cls::~Project_Library_AST_Module_Modify_Cls() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Cls::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Module_Modify_Cls::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Cls::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Cls_descriptor_;
}

const Project_Library_AST_Module_Modify_Cls& Project_Library_AST_Module_Modify_Cls::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Cls* Project_Library_AST_Module_Modify_Cls::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Cls* Project_Library_AST_Module_Modify_Cls::New() const {
  return new Project_Library_AST_Module_Modify_Cls;
}

void Project_Library_AST_Module_Modify_Cls::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Cls::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Cls::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Cls::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Cls::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Cls::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Cls* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Cls*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Cls::MergeFrom(const Project_Library_AST_Module_Modify_Cls& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Cls::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Cls::CopyFrom(const Project_Library_AST_Module_Modify_Cls& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Cls::IsInitialized() const {

  return true;
}

void Project_Library_AST_Module_Modify_Cls::Swap(Project_Library_AST_Module_Modify_Cls* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Cls::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Cls_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Cls_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Module_Modify_Imports_Request::kImportsFieldNumber;
const int Project_Library_AST_Module_Modify_Imports_Request::kBcFieldNumber;
const int Project_Library_AST_Module_Modify_Imports_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Module_Modify_Imports_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Imports_Request::Project_Library_AST_Module_Modify_Imports_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Imports_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Module_Modify_Imports_Request::Project_Library_AST_Module_Modify_Imports_Request(const Project_Library_AST_Module_Modify_Imports_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Imports_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Imports_Request::~Project_Library_AST_Module_Modify_Imports_Request() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Imports_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Module_Modify_Imports_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Imports_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Imports_Request_descriptor_;
}

const Project_Library_AST_Module_Modify_Imports_Request& Project_Library_AST_Module_Modify_Imports_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Imports_Request* Project_Library_AST_Module_Modify_Imports_Request::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Imports_Request* Project_Library_AST_Module_Modify_Imports_Request::New() const {
  return new Project_Library_AST_Module_Modify_Imports_Request;
}

void Project_Library_AST_Module_Modify_Imports_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  imports_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Imports_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr imports = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imports:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_imports()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_imports;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Imports_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr imports = 1;
  for (int i = 0; i < this->imports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->imports(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Imports_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr imports = 1;
  for (int i = 0; i < this->imports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->imports(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Imports_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr imports = 1;
  total_size += 1 * this->imports_size();
  for (int i = 0; i < this->imports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->imports(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Imports_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Imports_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Imports_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Imports_Request::MergeFrom(const Project_Library_AST_Module_Modify_Imports_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  imports_.MergeFrom(from.imports_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Imports_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Imports_Request::CopyFrom(const Project_Library_AST_Module_Modify_Imports_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Imports_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < imports_size(); i++) {
    if (!this->imports(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Module_Modify_Imports_Request::Swap(Project_Library_AST_Module_Modify_Imports_Request* other) {
  if (other != this) {
    imports_.Swap(&other->imports_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Imports_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Imports_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Imports_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Module_Modify_Imports_Update::kImportsFieldNumber;
const int Project_Library_AST_Module_Modify_Imports_Update::kBcFieldNumber;
const int Project_Library_AST_Module_Modify_Imports_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Module_Modify_Imports_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Imports_Update::Project_Library_AST_Module_Modify_Imports_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Imports_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Module_Modify_Imports_Update::Project_Library_AST_Module_Modify_Imports_Update(const Project_Library_AST_Module_Modify_Imports_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Imports_Update::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Imports_Update::~Project_Library_AST_Module_Modify_Imports_Update() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Imports_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Module_Modify_Imports_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Imports_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Imports_Update_descriptor_;
}

const Project_Library_AST_Module_Modify_Imports_Update& Project_Library_AST_Module_Modify_Imports_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Imports_Update* Project_Library_AST_Module_Modify_Imports_Update::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Imports_Update* Project_Library_AST_Module_Modify_Imports_Update::New() const {
  return new Project_Library_AST_Module_Modify_Imports_Update;
}

void Project_Library_AST_Module_Modify_Imports_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  imports_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Imports_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr imports = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imports:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_imports()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_imports;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Imports_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr imports = 1;
  for (int i = 0; i < this->imports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->imports(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Imports_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr imports = 1;
  for (int i = 0; i < this->imports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->imports(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Imports_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr imports = 1;
  total_size += 1 * this->imports_size();
  for (int i = 0; i < this->imports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->imports(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Imports_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Imports_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Imports_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Imports_Update::MergeFrom(const Project_Library_AST_Module_Modify_Imports_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  imports_.MergeFrom(from.imports_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Imports_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Imports_Update::CopyFrom(const Project_Library_AST_Module_Modify_Imports_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Imports_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < imports_size(); i++) {
    if (!this->imports(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Module_Modify_Imports_Update::Swap(Project_Library_AST_Module_Modify_Imports_Update* other) {
  if (other != this) {
    imports_.Swap(&other->imports_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Imports_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Imports_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Imports_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Imports::Project_Library_AST_Module_Modify_Imports()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Imports::InitAsDefaultInstance() {
}

Project_Library_AST_Module_Modify_Imports::Project_Library_AST_Module_Modify_Imports(const Project_Library_AST_Module_Modify_Imports& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Imports::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Imports::~Project_Library_AST_Module_Modify_Imports() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Imports::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Module_Modify_Imports::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Imports::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Imports_descriptor_;
}

const Project_Library_AST_Module_Modify_Imports& Project_Library_AST_Module_Modify_Imports::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Imports* Project_Library_AST_Module_Modify_Imports::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Imports* Project_Library_AST_Module_Modify_Imports::New() const {
  return new Project_Library_AST_Module_Modify_Imports;
}

void Project_Library_AST_Module_Modify_Imports::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Imports::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Imports::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Imports::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Imports::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Imports::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Imports* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Imports*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Imports::MergeFrom(const Project_Library_AST_Module_Modify_Imports& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Imports::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Imports::CopyFrom(const Project_Library_AST_Module_Modify_Imports& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Imports::IsInitialized() const {

  return true;
}

void Project_Library_AST_Module_Modify_Imports::Swap(Project_Library_AST_Module_Modify_Imports* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Imports::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Imports_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Imports_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Module_Modify_Fields_Request::kFieldsFieldNumber;
const int Project_Library_AST_Module_Modify_Fields_Request::kBcFieldNumber;
const int Project_Library_AST_Module_Modify_Fields_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Module_Modify_Fields_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Fields_Request::Project_Library_AST_Module_Modify_Fields_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Fields_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Module_Modify_Fields_Request::Project_Library_AST_Module_Modify_Fields_Request(const Project_Library_AST_Module_Modify_Fields_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Fields_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Fields_Request::~Project_Library_AST_Module_Modify_Fields_Request() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Fields_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Module_Modify_Fields_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Fields_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Fields_Request_descriptor_;
}

const Project_Library_AST_Module_Modify_Fields_Request& Project_Library_AST_Module_Modify_Fields_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Fields_Request* Project_Library_AST_Module_Modify_Fields_Request::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Fields_Request* Project_Library_AST_Module_Modify_Fields_Request::New() const {
  return new Project_Library_AST_Module_Modify_Fields_Request;
}

void Project_Library_AST_Module_Modify_Fields_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  fields_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Fields_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr fields = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fields()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fields;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Fields_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr fields = 1;
  for (int i = 0; i < this->fields_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fields(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Fields_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr fields = 1;
  for (int i = 0; i < this->fields_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fields(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Fields_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr fields = 1;
  total_size += 1 * this->fields_size();
  for (int i = 0; i < this->fields_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fields(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Fields_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Fields_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Fields_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Fields_Request::MergeFrom(const Project_Library_AST_Module_Modify_Fields_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  fields_.MergeFrom(from.fields_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Fields_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Fields_Request::CopyFrom(const Project_Library_AST_Module_Modify_Fields_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Fields_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < fields_size(); i++) {
    if (!this->fields(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Module_Modify_Fields_Request::Swap(Project_Library_AST_Module_Modify_Fields_Request* other) {
  if (other != this) {
    fields_.Swap(&other->fields_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Fields_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Fields_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Fields_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Module_Modify_Fields_Update::kFieldsFieldNumber;
const int Project_Library_AST_Module_Modify_Fields_Update::kBcFieldNumber;
const int Project_Library_AST_Module_Modify_Fields_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Module_Modify_Fields_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Fields_Update::Project_Library_AST_Module_Modify_Fields_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Fields_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Module_Modify_Fields_Update::Project_Library_AST_Module_Modify_Fields_Update(const Project_Library_AST_Module_Modify_Fields_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Fields_Update::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Fields_Update::~Project_Library_AST_Module_Modify_Fields_Update() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Fields_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Module_Modify_Fields_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Fields_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Fields_Update_descriptor_;
}

const Project_Library_AST_Module_Modify_Fields_Update& Project_Library_AST_Module_Modify_Fields_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Fields_Update* Project_Library_AST_Module_Modify_Fields_Update::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Fields_Update* Project_Library_AST_Module_Modify_Fields_Update::New() const {
  return new Project_Library_AST_Module_Modify_Fields_Update;
}

void Project_Library_AST_Module_Modify_Fields_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  fields_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Fields_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr fields = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fields()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fields;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Fields_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr fields = 1;
  for (int i = 0; i < this->fields_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fields(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Fields_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr fields = 1;
  for (int i = 0; i < this->fields_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fields(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Fields_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr fields = 1;
  total_size += 1 * this->fields_size();
  for (int i = 0; i < this->fields_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fields(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Fields_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Fields_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Fields_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Fields_Update::MergeFrom(const Project_Library_AST_Module_Modify_Fields_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  fields_.MergeFrom(from.fields_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Fields_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Fields_Update::CopyFrom(const Project_Library_AST_Module_Modify_Fields_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Fields_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < fields_size(); i++) {
    if (!this->fields(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Module_Modify_Fields_Update::Swap(Project_Library_AST_Module_Modify_Fields_Update* other) {
  if (other != this) {
    fields_.Swap(&other->fields_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Fields_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Fields_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Fields_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify_Fields::Project_Library_AST_Module_Modify_Fields()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify_Fields::InitAsDefaultInstance() {
}

Project_Library_AST_Module_Modify_Fields::Project_Library_AST_Module_Modify_Fields(const Project_Library_AST_Module_Modify_Fields& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Fields::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify_Fields::~Project_Library_AST_Module_Modify_Fields() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify_Fields::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Module_Modify_Fields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify_Fields::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_Fields_descriptor_;
}

const Project_Library_AST_Module_Modify_Fields& Project_Library_AST_Module_Modify_Fields::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify_Fields* Project_Library_AST_Module_Modify_Fields::default_instance_ = NULL;

Project_Library_AST_Module_Modify_Fields* Project_Library_AST_Module_Modify_Fields::New() const {
  return new Project_Library_AST_Module_Modify_Fields;
}

void Project_Library_AST_Module_Modify_Fields::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify_Fields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify_Fields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify_Fields::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify_Fields::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify_Fields::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify_Fields* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify_Fields*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify_Fields::MergeFrom(const Project_Library_AST_Module_Modify_Fields& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify_Fields::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify_Fields::CopyFrom(const Project_Library_AST_Module_Modify_Fields& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify_Fields::IsInitialized() const {

  return true;
}

void Project_Library_AST_Module_Modify_Fields::Swap(Project_Library_AST_Module_Modify_Fields* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify_Fields::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_Fields_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_Fields_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Module_Modify::Project_Library_AST_Module_Modify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module_Modify::InitAsDefaultInstance() {
}

Project_Library_AST_Module_Modify::Project_Library_AST_Module_Modify(const Project_Library_AST_Module_Modify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module_Modify::~Project_Library_AST_Module_Modify() {
  SharedDtor();
}

void Project_Library_AST_Module_Modify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Module_Modify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module_Modify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_Modify_descriptor_;
}

const Project_Library_AST_Module_Modify& Project_Library_AST_Module_Modify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module_Modify* Project_Library_AST_Module_Modify::default_instance_ = NULL;

Project_Library_AST_Module_Modify* Project_Library_AST_Module_Modify::New() const {
  return new Project_Library_AST_Module_Modify;
}

void Project_Library_AST_Module_Modify::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module_Modify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module_Modify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module_Modify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module_Modify::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module_Modify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module_Modify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module_Modify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module_Modify::MergeFrom(const Project_Library_AST_Module_Modify& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module_Modify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module_Modify::CopyFrom(const Project_Library_AST_Module_Modify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module_Modify::IsInitialized() const {

  return true;
}

void Project_Library_AST_Module_Modify::Swap(Project_Library_AST_Module_Modify* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module_Modify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_Modify_descriptor_;
  metadata.reflection = Project_Library_AST_Module_Modify_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Module::Project_Library_AST_Module()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Module::InitAsDefaultInstance() {
}

Project_Library_AST_Module::Project_Library_AST_Module(const Project_Library_AST_Module& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Module::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Module::~Project_Library_AST_Module() {
  SharedDtor();
}

void Project_Library_AST_Module::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Module::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Module::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Module_descriptor_;
}

const Project_Library_AST_Module& Project_Library_AST_Module::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Module* Project_Library_AST_Module::default_instance_ = NULL;

Project_Library_AST_Module* Project_Library_AST_Module::New() const {
  return new Project_Library_AST_Module;
}

void Project_Library_AST_Module::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Module::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Module::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Module::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Module::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Module::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Module* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Module*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Module::MergeFrom(const Project_Library_AST_Module& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Module::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Module::CopyFrom(const Project_Library_AST_Module& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Module::IsInitialized() const {

  return true;
}

void Project_Library_AST_Module::Swap(Project_Library_AST_Module* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Module::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Module_descriptor_;
  metadata.reflection = Project_Library_AST_Module_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Add_Request::kDataFieldNumber;
const int Project_Library_AST_Data_Add_Request::kParentbcFieldNumber;
const int Project_Library_AST_Data_Add_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Add_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Add_Request::Project_Library_AST_Data_Add_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Add_Request::InitAsDefaultInstance() {
  data__ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Add_Request::Project_Library_AST_Data_Add_Request(const Project_Library_AST_Data_Add_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Add_Request::SharedCtor() {
  _cached_size_ = 0;
  data__ = NULL;
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Add_Request::~Project_Library_AST_Data_Add_Request() {
  SharedDtor();
}

void Project_Library_AST_Data_Add_Request::SharedDtor() {
  if (this != default_instance_) {
    delete data__;
    delete parentbc_;
  }
}

void Project_Library_AST_Data_Add_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Add_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Add_Request_descriptor_;
}

const Project_Library_AST_Data_Add_Request& Project_Library_AST_Data_Add_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Add_Request* Project_Library_AST_Data_Add_Request::default_instance_ = NULL;

Project_Library_AST_Data_Add_Request* Project_Library_AST_Data_Add_Request::New() const {
  return new Project_Library_AST_Data_Add_Request;
}

void Project_Library_AST_Data_Add_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data_()) {
      if (data__ != NULL) data__->::generated::proto::expr::Expr::Clear();
    }
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Add_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr data_ = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data_()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Add_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr data_ = 1;
  if (has_data_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data_(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Add_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr data_ = 1;
  if (has_data_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data_(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Add_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr data_ = 1;
    if (has_data_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data_());
    }

    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Add_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Add_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Add_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Add_Request::MergeFrom(const Project_Library_AST_Data_Add_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data_()) {
      mutable_data_()->::generated::proto::expr::Expr::MergeFrom(from.data_());
    }
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Add_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Add_Request::CopyFrom(const Project_Library_AST_Data_Add_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Add_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_data_()) {
    if (!this->data_().IsInitialized()) return false;
  }
  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Add_Request::Swap(Project_Library_AST_Data_Add_Request* other) {
  if (other != this) {
    std::swap(data__, other->data__);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Add_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Add_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Add_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Add_Update::kDataFieldNumber;
const int Project_Library_AST_Data_Add_Update::kBcFieldNumber;
const int Project_Library_AST_Data_Add_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Add_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Add_Update::Project_Library_AST_Data_Add_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Add_Update::InitAsDefaultInstance() {
  data__ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Add_Update::Project_Library_AST_Data_Add_Update(const Project_Library_AST_Data_Add_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Add_Update::SharedCtor() {
  _cached_size_ = 0;
  data__ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Add_Update::~Project_Library_AST_Data_Add_Update() {
  SharedDtor();
}

void Project_Library_AST_Data_Add_Update::SharedDtor() {
  if (this != default_instance_) {
    delete data__;
    delete bc_;
  }
}

void Project_Library_AST_Data_Add_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Add_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Add_Update_descriptor_;
}

const Project_Library_AST_Data_Add_Update& Project_Library_AST_Data_Add_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Add_Update* Project_Library_AST_Data_Add_Update::default_instance_ = NULL;

Project_Library_AST_Data_Add_Update* Project_Library_AST_Data_Add_Update::New() const {
  return new Project_Library_AST_Data_Add_Update;
}

void Project_Library_AST_Data_Add_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data_()) {
      if (data__ != NULL) data__->::generated::proto::expr::Expr::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Add_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr data_ = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_data_()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Add_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr data_ = 1;
  if (has_data_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->data_(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Add_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr data_ = 1;
  if (has_data_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->data_(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Add_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr data_ = 1;
    if (has_data_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->data_());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Add_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Add_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Add_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Add_Update::MergeFrom(const Project_Library_AST_Data_Add_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data_()) {
      mutable_data_()->::generated::proto::expr::Expr::MergeFrom(from.data_());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Add_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Add_Update::CopyFrom(const Project_Library_AST_Data_Add_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Add_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_data_()) {
    if (!this->data_().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Add_Update::Swap(Project_Library_AST_Data_Add_Update* other) {
  if (other != this) {
    std::swap(data__, other->data__);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Add_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Add_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Add_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Data_Add::Project_Library_AST_Data_Add()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Add::InitAsDefaultInstance() {
}

Project_Library_AST_Data_Add::Project_Library_AST_Data_Add(const Project_Library_AST_Data_Add& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Add::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Add::~Project_Library_AST_Data_Add() {
  SharedDtor();
}

void Project_Library_AST_Data_Add::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Data_Add::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Add::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Add_descriptor_;
}

const Project_Library_AST_Data_Add& Project_Library_AST_Data_Add::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Add* Project_Library_AST_Data_Add::default_instance_ = NULL;

Project_Library_AST_Data_Add* Project_Library_AST_Data_Add::New() const {
  return new Project_Library_AST_Data_Add;
}

void Project_Library_AST_Data_Add::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Add::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Add::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Add::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Add* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Add*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Add::MergeFrom(const Project_Library_AST_Data_Add& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Add::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Add::CopyFrom(const Project_Library_AST_Data_Add& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Add::IsInitialized() const {

  return true;
}

void Project_Library_AST_Data_Add::Swap(Project_Library_AST_Data_Add* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Add::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Add_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Add_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Modify_Cls_Request::kClsFieldNumber;
const int Project_Library_AST_Data_Modify_Cls_Request::kBcFieldNumber;
const int Project_Library_AST_Data_Modify_Cls_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Modify_Cls_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Cls_Request::Project_Library_AST_Data_Modify_Cls_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Cls_Request::InitAsDefaultInstance() {
  cls_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Modify_Cls_Request::Project_Library_AST_Data_Modify_Cls_Request(const Project_Library_AST_Data_Modify_Cls_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cls_Request::SharedCtor() {
  _cached_size_ = 0;
  cls_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Cls_Request::~Project_Library_AST_Data_Modify_Cls_Request() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Cls_Request::SharedDtor() {
  if (this != default_instance_) {
    delete cls_;
    delete bc_;
  }
}

void Project_Library_AST_Data_Modify_Cls_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cls_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Cls_Request_descriptor_;
}

const Project_Library_AST_Data_Modify_Cls_Request& Project_Library_AST_Data_Modify_Cls_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Cls_Request* Project_Library_AST_Data_Modify_Cls_Request::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Cls_Request* Project_Library_AST_Data_Modify_Cls_Request::New() const {
  return new Project_Library_AST_Data_Modify_Cls_Request;
}

void Project_Library_AST_Data_Modify_Cls_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cls()) {
      if (cls_ != NULL) cls_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Cls_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type cls = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cls()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Cls_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cls(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Cls_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cls(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Cls_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type cls = 1;
    if (has_cls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cls());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Cls_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Cls_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Cls_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Cls_Request::MergeFrom(const Project_Library_AST_Data_Modify_Cls_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cls()) {
      mutable_cls()->::generated::proto::type::Type::MergeFrom(from.cls());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Cls_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cls_Request::CopyFrom(const Project_Library_AST_Data_Modify_Cls_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Cls_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_cls()) {
    if (!this->cls().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Modify_Cls_Request::Swap(Project_Library_AST_Data_Modify_Cls_Request* other) {
  if (other != this) {
    std::swap(cls_, other->cls_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Cls_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Cls_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Cls_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Modify_Cls_Update::kClsFieldNumber;
const int Project_Library_AST_Data_Modify_Cls_Update::kBcFieldNumber;
const int Project_Library_AST_Data_Modify_Cls_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Modify_Cls_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Cls_Update::Project_Library_AST_Data_Modify_Cls_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Cls_Update::InitAsDefaultInstance() {
  cls_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Modify_Cls_Update::Project_Library_AST_Data_Modify_Cls_Update(const Project_Library_AST_Data_Modify_Cls_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cls_Update::SharedCtor() {
  _cached_size_ = 0;
  cls_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Cls_Update::~Project_Library_AST_Data_Modify_Cls_Update() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Cls_Update::SharedDtor() {
  if (this != default_instance_) {
    delete cls_;
    delete bc_;
  }
}

void Project_Library_AST_Data_Modify_Cls_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cls_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Cls_Update_descriptor_;
}

const Project_Library_AST_Data_Modify_Cls_Update& Project_Library_AST_Data_Modify_Cls_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Cls_Update* Project_Library_AST_Data_Modify_Cls_Update::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Cls_Update* Project_Library_AST_Data_Modify_Cls_Update::New() const {
  return new Project_Library_AST_Data_Modify_Cls_Update;
}

void Project_Library_AST_Data_Modify_Cls_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cls()) {
      if (cls_ != NULL) cls_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Cls_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type cls = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cls()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Cls_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cls(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Cls_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cls(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Cls_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type cls = 1;
    if (has_cls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cls());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Cls_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Cls_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Cls_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Cls_Update::MergeFrom(const Project_Library_AST_Data_Modify_Cls_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cls()) {
      mutable_cls()->::generated::proto::type::Type::MergeFrom(from.cls());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Cls_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cls_Update::CopyFrom(const Project_Library_AST_Data_Modify_Cls_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Cls_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_cls()) {
    if (!this->cls().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Modify_Cls_Update::Swap(Project_Library_AST_Data_Modify_Cls_Update* other) {
  if (other != this) {
    std::swap(cls_, other->cls_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Cls_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Cls_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Cls_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Cls::Project_Library_AST_Data_Modify_Cls()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Cls::InitAsDefaultInstance() {
}

Project_Library_AST_Data_Modify_Cls::Project_Library_AST_Data_Modify_Cls(const Project_Library_AST_Data_Modify_Cls& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cls::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Cls::~Project_Library_AST_Data_Modify_Cls() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Cls::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Data_Modify_Cls::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cls::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Cls_descriptor_;
}

const Project_Library_AST_Data_Modify_Cls& Project_Library_AST_Data_Modify_Cls::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Cls* Project_Library_AST_Data_Modify_Cls::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Cls* Project_Library_AST_Data_Modify_Cls::New() const {
  return new Project_Library_AST_Data_Modify_Cls;
}

void Project_Library_AST_Data_Modify_Cls::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Cls::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Cls::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Cls::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Cls::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Cls::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Cls* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Cls*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Cls::MergeFrom(const Project_Library_AST_Data_Modify_Cls& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Cls::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cls::CopyFrom(const Project_Library_AST_Data_Modify_Cls& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Cls::IsInitialized() const {

  return true;
}

void Project_Library_AST_Data_Modify_Cls::Swap(Project_Library_AST_Data_Modify_Cls* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Cls::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Cls_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Cls_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Modify_Cons_Request::kConsFieldNumber;
const int Project_Library_AST_Data_Modify_Cons_Request::kBcFieldNumber;
const int Project_Library_AST_Data_Modify_Cons_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Modify_Cons_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Cons_Request::Project_Library_AST_Data_Modify_Cons_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Cons_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Modify_Cons_Request::Project_Library_AST_Data_Modify_Cons_Request(const Project_Library_AST_Data_Modify_Cons_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cons_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Cons_Request::~Project_Library_AST_Data_Modify_Cons_Request() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Cons_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Data_Modify_Cons_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cons_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Cons_Request_descriptor_;
}

const Project_Library_AST_Data_Modify_Cons_Request& Project_Library_AST_Data_Modify_Cons_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Cons_Request* Project_Library_AST_Data_Modify_Cons_Request::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Cons_Request* Project_Library_AST_Data_Modify_Cons_Request::New() const {
  return new Project_Library_AST_Data_Modify_Cons_Request;
}

void Project_Library_AST_Data_Modify_Cons_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  cons_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Cons_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr cons = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_cons;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Cons_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr cons = 1;
  for (int i = 0; i < this->cons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cons(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Cons_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr cons = 1;
  for (int i = 0; i < this->cons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cons(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Cons_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr cons = 1;
  total_size += 1 * this->cons_size();
  for (int i = 0; i < this->cons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cons(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Cons_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Cons_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Cons_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Cons_Request::MergeFrom(const Project_Library_AST_Data_Modify_Cons_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  cons_.MergeFrom(from.cons_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Cons_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cons_Request::CopyFrom(const Project_Library_AST_Data_Modify_Cons_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Cons_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < cons_size(); i++) {
    if (!this->cons(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Modify_Cons_Request::Swap(Project_Library_AST_Data_Modify_Cons_Request* other) {
  if (other != this) {
    cons_.Swap(&other->cons_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Cons_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Cons_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Cons_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Modify_Cons_Update::kConsFieldNumber;
const int Project_Library_AST_Data_Modify_Cons_Update::kBcFieldNumber;
const int Project_Library_AST_Data_Modify_Cons_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Modify_Cons_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Cons_Update::Project_Library_AST_Data_Modify_Cons_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Cons_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Modify_Cons_Update::Project_Library_AST_Data_Modify_Cons_Update(const Project_Library_AST_Data_Modify_Cons_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cons_Update::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Cons_Update::~Project_Library_AST_Data_Modify_Cons_Update() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Cons_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Data_Modify_Cons_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cons_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Cons_Update_descriptor_;
}

const Project_Library_AST_Data_Modify_Cons_Update& Project_Library_AST_Data_Modify_Cons_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Cons_Update* Project_Library_AST_Data_Modify_Cons_Update::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Cons_Update* Project_Library_AST_Data_Modify_Cons_Update::New() const {
  return new Project_Library_AST_Data_Modify_Cons_Update;
}

void Project_Library_AST_Data_Modify_Cons_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  cons_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Cons_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr cons = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_cons;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Cons_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr cons = 1;
  for (int i = 0; i < this->cons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cons(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Cons_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr cons = 1;
  for (int i = 0; i < this->cons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cons(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Cons_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr cons = 1;
  total_size += 1 * this->cons_size();
  for (int i = 0; i < this->cons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cons(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Cons_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Cons_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Cons_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Cons_Update::MergeFrom(const Project_Library_AST_Data_Modify_Cons_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  cons_.MergeFrom(from.cons_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Cons_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cons_Update::CopyFrom(const Project_Library_AST_Data_Modify_Cons_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Cons_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < cons_size(); i++) {
    if (!this->cons(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Modify_Cons_Update::Swap(Project_Library_AST_Data_Modify_Cons_Update* other) {
  if (other != this) {
    cons_.Swap(&other->cons_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Cons_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Cons_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Cons_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Cons::Project_Library_AST_Data_Modify_Cons()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Cons::InitAsDefaultInstance() {
}

Project_Library_AST_Data_Modify_Cons::Project_Library_AST_Data_Modify_Cons(const Project_Library_AST_Data_Modify_Cons& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cons::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Cons::~Project_Library_AST_Data_Modify_Cons() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Cons::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Data_Modify_Cons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Cons::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Cons_descriptor_;
}

const Project_Library_AST_Data_Modify_Cons& Project_Library_AST_Data_Modify_Cons::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Cons* Project_Library_AST_Data_Modify_Cons::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Cons* Project_Library_AST_Data_Modify_Cons::New() const {
  return new Project_Library_AST_Data_Modify_Cons;
}

void Project_Library_AST_Data_Modify_Cons::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Cons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Cons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Cons::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Cons::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Cons::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Cons* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Cons*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Cons::MergeFrom(const Project_Library_AST_Data_Modify_Cons& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Cons::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Cons::CopyFrom(const Project_Library_AST_Data_Modify_Cons& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Cons::IsInitialized() const {

  return true;
}

void Project_Library_AST_Data_Modify_Cons::Swap(Project_Library_AST_Data_Modify_Cons* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Cons::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Cons_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Cons_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Modify_Classes_Request::kClassesFieldNumber;
const int Project_Library_AST_Data_Modify_Classes_Request::kBcFieldNumber;
const int Project_Library_AST_Data_Modify_Classes_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Modify_Classes_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Classes_Request::Project_Library_AST_Data_Modify_Classes_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Classes_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Modify_Classes_Request::Project_Library_AST_Data_Modify_Classes_Request(const Project_Library_AST_Data_Modify_Classes_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Classes_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Classes_Request::~Project_Library_AST_Data_Modify_Classes_Request() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Classes_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Data_Modify_Classes_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Classes_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Classes_Request_descriptor_;
}

const Project_Library_AST_Data_Modify_Classes_Request& Project_Library_AST_Data_Modify_Classes_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Classes_Request* Project_Library_AST_Data_Modify_Classes_Request::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Classes_Request* Project_Library_AST_Data_Modify_Classes_Request::New() const {
  return new Project_Library_AST_Data_Modify_Classes_Request;
}

void Project_Library_AST_Data_Modify_Classes_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  classes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Classes_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr classes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_classes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_classes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_classes;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Classes_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr classes = 1;
  for (int i = 0; i < this->classes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->classes(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Classes_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr classes = 1;
  for (int i = 0; i < this->classes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->classes(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Classes_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr classes = 1;
  total_size += 1 * this->classes_size();
  for (int i = 0; i < this->classes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->classes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Classes_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Classes_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Classes_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Classes_Request::MergeFrom(const Project_Library_AST_Data_Modify_Classes_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  classes_.MergeFrom(from.classes_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Classes_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Classes_Request::CopyFrom(const Project_Library_AST_Data_Modify_Classes_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Classes_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < classes_size(); i++) {
    if (!this->classes(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Modify_Classes_Request::Swap(Project_Library_AST_Data_Modify_Classes_Request* other) {
  if (other != this) {
    classes_.Swap(&other->classes_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Classes_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Classes_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Classes_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Modify_Classes_Update::kClassesFieldNumber;
const int Project_Library_AST_Data_Modify_Classes_Update::kBcFieldNumber;
const int Project_Library_AST_Data_Modify_Classes_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Modify_Classes_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Classes_Update::Project_Library_AST_Data_Modify_Classes_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Classes_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Modify_Classes_Update::Project_Library_AST_Data_Modify_Classes_Update(const Project_Library_AST_Data_Modify_Classes_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Classes_Update::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Classes_Update::~Project_Library_AST_Data_Modify_Classes_Update() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Classes_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Data_Modify_Classes_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Classes_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Classes_Update_descriptor_;
}

const Project_Library_AST_Data_Modify_Classes_Update& Project_Library_AST_Data_Modify_Classes_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Classes_Update* Project_Library_AST_Data_Modify_Classes_Update::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Classes_Update* Project_Library_AST_Data_Modify_Classes_Update::New() const {
  return new Project_Library_AST_Data_Modify_Classes_Update;
}

void Project_Library_AST_Data_Modify_Classes_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  classes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Classes_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr classes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_classes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_classes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_classes;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Classes_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr classes = 1;
  for (int i = 0; i < this->classes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->classes(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Classes_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr classes = 1;
  for (int i = 0; i < this->classes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->classes(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Classes_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr classes = 1;
  total_size += 1 * this->classes_size();
  for (int i = 0; i < this->classes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->classes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Classes_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Classes_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Classes_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Classes_Update::MergeFrom(const Project_Library_AST_Data_Modify_Classes_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  classes_.MergeFrom(from.classes_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Classes_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Classes_Update::CopyFrom(const Project_Library_AST_Data_Modify_Classes_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Classes_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < classes_size(); i++) {
    if (!this->classes(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Modify_Classes_Update::Swap(Project_Library_AST_Data_Modify_Classes_Update* other) {
  if (other != this) {
    classes_.Swap(&other->classes_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Classes_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Classes_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Classes_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Classes::Project_Library_AST_Data_Modify_Classes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Classes::InitAsDefaultInstance() {
}

Project_Library_AST_Data_Modify_Classes::Project_Library_AST_Data_Modify_Classes(const Project_Library_AST_Data_Modify_Classes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Classes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Classes::~Project_Library_AST_Data_Modify_Classes() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Classes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Data_Modify_Classes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Classes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Classes_descriptor_;
}

const Project_Library_AST_Data_Modify_Classes& Project_Library_AST_Data_Modify_Classes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Classes* Project_Library_AST_Data_Modify_Classes::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Classes* Project_Library_AST_Data_Modify_Classes::New() const {
  return new Project_Library_AST_Data_Modify_Classes;
}

void Project_Library_AST_Data_Modify_Classes::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Classes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Classes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Classes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Classes::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Classes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Classes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Classes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Classes::MergeFrom(const Project_Library_AST_Data_Modify_Classes& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Classes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Classes::CopyFrom(const Project_Library_AST_Data_Modify_Classes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Classes::IsInitialized() const {

  return true;
}

void Project_Library_AST_Data_Modify_Classes::Swap(Project_Library_AST_Data_Modify_Classes* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Classes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Classes_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Classes_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Modify_Methods_Request::kMethodsFieldNumber;
const int Project_Library_AST_Data_Modify_Methods_Request::kBcFieldNumber;
const int Project_Library_AST_Data_Modify_Methods_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Modify_Methods_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Methods_Request::Project_Library_AST_Data_Modify_Methods_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Methods_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Modify_Methods_Request::Project_Library_AST_Data_Modify_Methods_Request(const Project_Library_AST_Data_Modify_Methods_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Methods_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Methods_Request::~Project_Library_AST_Data_Modify_Methods_Request() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Methods_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Data_Modify_Methods_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Methods_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Methods_Request_descriptor_;
}

const Project_Library_AST_Data_Modify_Methods_Request& Project_Library_AST_Data_Modify_Methods_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Methods_Request* Project_Library_AST_Data_Modify_Methods_Request::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Methods_Request* Project_Library_AST_Data_Modify_Methods_Request::New() const {
  return new Project_Library_AST_Data_Modify_Methods_Request;
}

void Project_Library_AST_Data_Modify_Methods_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  methods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Methods_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr methods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_methods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_methods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_methods;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Methods_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr methods = 1;
  for (int i = 0; i < this->methods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->methods(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Methods_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr methods = 1;
  for (int i = 0; i < this->methods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->methods(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Methods_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr methods = 1;
  total_size += 1 * this->methods_size();
  for (int i = 0; i < this->methods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->methods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Methods_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Methods_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Methods_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Methods_Request::MergeFrom(const Project_Library_AST_Data_Modify_Methods_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  methods_.MergeFrom(from.methods_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Methods_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Methods_Request::CopyFrom(const Project_Library_AST_Data_Modify_Methods_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Methods_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < methods_size(); i++) {
    if (!this->methods(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Modify_Methods_Request::Swap(Project_Library_AST_Data_Modify_Methods_Request* other) {
  if (other != this) {
    methods_.Swap(&other->methods_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Methods_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Methods_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Methods_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Data_Modify_Methods_Update::kMethodsFieldNumber;
const int Project_Library_AST_Data_Modify_Methods_Update::kBcFieldNumber;
const int Project_Library_AST_Data_Modify_Methods_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Data_Modify_Methods_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Methods_Update::Project_Library_AST_Data_Modify_Methods_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Methods_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Data_Modify_Methods_Update::Project_Library_AST_Data_Modify_Methods_Update(const Project_Library_AST_Data_Modify_Methods_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Methods_Update::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Methods_Update::~Project_Library_AST_Data_Modify_Methods_Update() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Methods_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Data_Modify_Methods_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Methods_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Methods_Update_descriptor_;
}

const Project_Library_AST_Data_Modify_Methods_Update& Project_Library_AST_Data_Modify_Methods_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Methods_Update* Project_Library_AST_Data_Modify_Methods_Update::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Methods_Update* Project_Library_AST_Data_Modify_Methods_Update::New() const {
  return new Project_Library_AST_Data_Modify_Methods_Update;
}

void Project_Library_AST_Data_Modify_Methods_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  methods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Methods_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr methods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_methods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_methods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_methods;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Methods_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr methods = 1;
  for (int i = 0; i < this->methods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->methods(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Methods_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr methods = 1;
  for (int i = 0; i < this->methods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->methods(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Methods_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr methods = 1;
  total_size += 1 * this->methods_size();
  for (int i = 0; i < this->methods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->methods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Methods_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Methods_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Methods_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Methods_Update::MergeFrom(const Project_Library_AST_Data_Modify_Methods_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  methods_.MergeFrom(from.methods_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Methods_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Methods_Update::CopyFrom(const Project_Library_AST_Data_Modify_Methods_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Methods_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < methods_size(); i++) {
    if (!this->methods(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Data_Modify_Methods_Update::Swap(Project_Library_AST_Data_Modify_Methods_Update* other) {
  if (other != this) {
    methods_.Swap(&other->methods_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Methods_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Methods_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Methods_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify_Methods::Project_Library_AST_Data_Modify_Methods()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify_Methods::InitAsDefaultInstance() {
}

Project_Library_AST_Data_Modify_Methods::Project_Library_AST_Data_Modify_Methods(const Project_Library_AST_Data_Modify_Methods& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Methods::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify_Methods::~Project_Library_AST_Data_Modify_Methods() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify_Methods::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Data_Modify_Methods::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify_Methods::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_Methods_descriptor_;
}

const Project_Library_AST_Data_Modify_Methods& Project_Library_AST_Data_Modify_Methods::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify_Methods* Project_Library_AST_Data_Modify_Methods::default_instance_ = NULL;

Project_Library_AST_Data_Modify_Methods* Project_Library_AST_Data_Modify_Methods::New() const {
  return new Project_Library_AST_Data_Modify_Methods;
}

void Project_Library_AST_Data_Modify_Methods::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify_Methods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify_Methods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify_Methods::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify_Methods::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify_Methods::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify_Methods* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify_Methods*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify_Methods::MergeFrom(const Project_Library_AST_Data_Modify_Methods& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify_Methods::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify_Methods::CopyFrom(const Project_Library_AST_Data_Modify_Methods& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify_Methods::IsInitialized() const {

  return true;
}

void Project_Library_AST_Data_Modify_Methods::Swap(Project_Library_AST_Data_Modify_Methods* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify_Methods::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_Methods_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_Methods_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Data_Modify::Project_Library_AST_Data_Modify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data_Modify::InitAsDefaultInstance() {
}

Project_Library_AST_Data_Modify::Project_Library_AST_Data_Modify(const Project_Library_AST_Data_Modify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data_Modify::~Project_Library_AST_Data_Modify() {
  SharedDtor();
}

void Project_Library_AST_Data_Modify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Data_Modify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data_Modify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_Modify_descriptor_;
}

const Project_Library_AST_Data_Modify& Project_Library_AST_Data_Modify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data_Modify* Project_Library_AST_Data_Modify::default_instance_ = NULL;

Project_Library_AST_Data_Modify* Project_Library_AST_Data_Modify::New() const {
  return new Project_Library_AST_Data_Modify;
}

void Project_Library_AST_Data_Modify::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data_Modify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data_Modify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data_Modify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data_Modify::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data_Modify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data_Modify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data_Modify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data_Modify::MergeFrom(const Project_Library_AST_Data_Modify& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data_Modify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data_Modify::CopyFrom(const Project_Library_AST_Data_Modify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data_Modify::IsInitialized() const {

  return true;
}

void Project_Library_AST_Data_Modify::Swap(Project_Library_AST_Data_Modify* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data_Modify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_Modify_descriptor_;
  metadata.reflection = Project_Library_AST_Data_Modify_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Data::Project_Library_AST_Data()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Data::InitAsDefaultInstance() {
}

Project_Library_AST_Data::Project_Library_AST_Data(const Project_Library_AST_Data& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Data::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Data::~Project_Library_AST_Data() {
  SharedDtor();
}

void Project_Library_AST_Data::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Data::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Data::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Data_descriptor_;
}

const Project_Library_AST_Data& Project_Library_AST_Data::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Data* Project_Library_AST_Data::default_instance_ = NULL;

Project_Library_AST_Data* Project_Library_AST_Data::New() const {
  return new Project_Library_AST_Data;
}

void Project_Library_AST_Data::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Data::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Data::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Data::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Data::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Data::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Data* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Data*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Data::MergeFrom(const Project_Library_AST_Data& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Data::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Data::CopyFrom(const Project_Library_AST_Data& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Data::IsInitialized() const {

  return true;
}

void Project_Library_AST_Data::Swap(Project_Library_AST_Data* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Data::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Data_descriptor_;
  metadata.reflection = Project_Library_AST_Data_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Add_Request::kFunctionFieldNumber;
const int Project_Library_AST_Function_Add_Request::kParentbcFieldNumber;
const int Project_Library_AST_Function_Add_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Add_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Add_Request::Project_Library_AST_Function_Add_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Add_Request::InitAsDefaultInstance() {
  function_ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Add_Request::Project_Library_AST_Function_Add_Request(const Project_Library_AST_Function_Add_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Add_Request::SharedCtor() {
  _cached_size_ = 0;
  function_ = NULL;
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Add_Request::~Project_Library_AST_Function_Add_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Add_Request::SharedDtor() {
  if (this != default_instance_) {
    delete function_;
    delete parentbc_;
  }
}

void Project_Library_AST_Function_Add_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Add_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Add_Request_descriptor_;
}

const Project_Library_AST_Function_Add_Request& Project_Library_AST_Function_Add_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Add_Request* Project_Library_AST_Function_Add_Request::default_instance_ = NULL;

Project_Library_AST_Function_Add_Request* Project_Library_AST_Function_Add_Request::New() const {
  return new Project_Library_AST_Function_Add_Request;
}

void Project_Library_AST_Function_Add_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_function()) {
      if (function_ != NULL) function_->::generated::proto::expr::Expr::Clear();
    }
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Add_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr function = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Add_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr function = 1;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->function(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Add_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr function = 1;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->function(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Add_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr function = 1;
    if (has_function()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->function());
    }

    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Add_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Add_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Add_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Add_Request::MergeFrom(const Project_Library_AST_Function_Add_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_function()) {
      mutable_function()->::generated::proto::expr::Expr::MergeFrom(from.function());
    }
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Add_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Add_Request::CopyFrom(const Project_Library_AST_Function_Add_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Add_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_function()) {
    if (!this->function().IsInitialized()) return false;
  }
  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Add_Request::Swap(Project_Library_AST_Function_Add_Request* other) {
  if (other != this) {
    std::swap(function_, other->function_);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Add_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Add_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Add_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Add_Update::kFunctionFieldNumber;
const int Project_Library_AST_Function_Add_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Add_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Add_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Add_Update::Project_Library_AST_Function_Add_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Add_Update::InitAsDefaultInstance() {
  function_ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Add_Update::Project_Library_AST_Function_Add_Update(const Project_Library_AST_Function_Add_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Add_Update::SharedCtor() {
  _cached_size_ = 0;
  function_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Add_Update::~Project_Library_AST_Function_Add_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Add_Update::SharedDtor() {
  if (this != default_instance_) {
    delete function_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Add_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Add_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Add_Update_descriptor_;
}

const Project_Library_AST_Function_Add_Update& Project_Library_AST_Function_Add_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Add_Update* Project_Library_AST_Function_Add_Update::default_instance_ = NULL;

Project_Library_AST_Function_Add_Update* Project_Library_AST_Function_Add_Update::New() const {
  return new Project_Library_AST_Function_Add_Update;
}

void Project_Library_AST_Function_Add_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_function()) {
      if (function_ != NULL) function_->::generated::proto::expr::Expr::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Add_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr function = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Add_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr function = 1;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->function(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Add_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr function = 1;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->function(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Add_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr function = 1;
    if (has_function()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->function());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Add_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Add_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Add_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Add_Update::MergeFrom(const Project_Library_AST_Function_Add_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_function()) {
      mutable_function()->::generated::proto::expr::Expr::MergeFrom(from.function());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Add_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Add_Update::CopyFrom(const Project_Library_AST_Function_Add_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Add_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_function()) {
    if (!this->function().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Add_Update::Swap(Project_Library_AST_Function_Add_Update* other) {
  if (other != this) {
    std::swap(function_, other->function_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Add_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Add_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Add_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Add::Project_Library_AST_Function_Add()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Add::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Add::Project_Library_AST_Function_Add(const Project_Library_AST_Function_Add& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Add::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Add::~Project_Library_AST_Function_Add() {
  SharedDtor();
}

void Project_Library_AST_Function_Add::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Add::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Add::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Add_descriptor_;
}

const Project_Library_AST_Function_Add& Project_Library_AST_Function_Add::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Add* Project_Library_AST_Function_Add::default_instance_ = NULL;

Project_Library_AST_Function_Add* Project_Library_AST_Function_Add::New() const {
  return new Project_Library_AST_Function_Add;
}

void Project_Library_AST_Function_Add::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Add::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Add::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Add::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Add* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Add*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Add::MergeFrom(const Project_Library_AST_Function_Add& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Add::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Add::CopyFrom(const Project_Library_AST_Function_Add& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Add::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Add::Swap(Project_Library_AST_Function_Add* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Add::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Add_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Add_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Modify_Name_Request::kNameFieldNumber;
const int Project_Library_AST_Function_Modify_Name_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Modify_Name_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Modify_Name_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Name_Request::Project_Library_AST_Function_Modify_Name_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Name_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Modify_Name_Request::Project_Library_AST_Function_Modify_Name_Request(const Project_Library_AST_Function_Modify_Name_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Name_Request::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Name_Request::~Project_Library_AST_Function_Modify_Name_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Name_Request::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Modify_Name_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Name_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Name_Request_descriptor_;
}

const Project_Library_AST_Function_Modify_Name_Request& Project_Library_AST_Function_Modify_Name_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Name_Request* Project_Library_AST_Function_Modify_Name_Request::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Name_Request* Project_Library_AST_Function_Modify_Name_Request::New() const {
  return new Project_Library_AST_Function_Modify_Name_Request;
}

void Project_Library_AST_Function_Modify_Name_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Name_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Name_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Name_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Name_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Name_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Name_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Name_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Name_Request::MergeFrom(const Project_Library_AST_Function_Modify_Name_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Name_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Name_Request::CopyFrom(const Project_Library_AST_Function_Modify_Name_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Name_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Modify_Name_Request::Swap(Project_Library_AST_Function_Modify_Name_Request* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Name_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Name_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Name_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Modify_Name_Update::kNameFieldNumber;
const int Project_Library_AST_Function_Modify_Name_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Modify_Name_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Modify_Name_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Name_Update::Project_Library_AST_Function_Modify_Name_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Name_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Modify_Name_Update::Project_Library_AST_Function_Modify_Name_Update(const Project_Library_AST_Function_Modify_Name_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Name_Update::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Name_Update::~Project_Library_AST_Function_Modify_Name_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Name_Update::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Modify_Name_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Name_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Name_Update_descriptor_;
}

const Project_Library_AST_Function_Modify_Name_Update& Project_Library_AST_Function_Modify_Name_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Name_Update* Project_Library_AST_Function_Modify_Name_Update::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Name_Update* Project_Library_AST_Function_Modify_Name_Update::New() const {
  return new Project_Library_AST_Function_Modify_Name_Update;
}

void Project_Library_AST_Function_Modify_Name_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Name_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Name_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Name_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Name_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Name_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Name_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Name_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Name_Update::MergeFrom(const Project_Library_AST_Function_Modify_Name_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Name_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Name_Update::CopyFrom(const Project_Library_AST_Function_Modify_Name_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Name_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Modify_Name_Update::Swap(Project_Library_AST_Function_Modify_Name_Update* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Name_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Name_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Name_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Name::Project_Library_AST_Function_Modify_Name()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Name::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Modify_Name::Project_Library_AST_Function_Modify_Name(const Project_Library_AST_Function_Modify_Name& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Name::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Name::~Project_Library_AST_Function_Modify_Name() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Name::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Modify_Name::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Name::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Name_descriptor_;
}

const Project_Library_AST_Function_Modify_Name& Project_Library_AST_Function_Modify_Name::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Name* Project_Library_AST_Function_Modify_Name::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Name* Project_Library_AST_Function_Modify_Name::New() const {
  return new Project_Library_AST_Function_Modify_Name;
}

void Project_Library_AST_Function_Modify_Name::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Name::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Name::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Name::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Name::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Name::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Name* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Name*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Name::MergeFrom(const Project_Library_AST_Function_Modify_Name& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Name::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Name::CopyFrom(const Project_Library_AST_Function_Modify_Name& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Name::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Modify_Name::Swap(Project_Library_AST_Function_Modify_Name* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Name::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Name_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Name_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Modify_Path_Request::kPathFieldNumber;
const int Project_Library_AST_Function_Modify_Path_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Modify_Path_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Modify_Path_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Path_Request::Project_Library_AST_Function_Modify_Path_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Path_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Modify_Path_Request::Project_Library_AST_Function_Modify_Path_Request(const Project_Library_AST_Function_Modify_Path_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Path_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Path_Request::~Project_Library_AST_Function_Modify_Path_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Path_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Modify_Path_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Path_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Path_Request_descriptor_;
}

const Project_Library_AST_Function_Modify_Path_Request& Project_Library_AST_Function_Modify_Path_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Path_Request* Project_Library_AST_Function_Modify_Path_Request::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Path_Request* Project_Library_AST_Function_Modify_Path_Request::New() const {
  return new Project_Library_AST_Function_Modify_Path_Request;
}

void Project_Library_AST_Function_Modify_Path_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  path_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Path_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path(this->path_size() - 1).data(),
            this->path(this->path_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_path;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Path_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string path = 1;
  for (int i = 0; i < this->path_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->path(i).data(), this->path(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Path_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string path = 1;
  for (int i = 0; i < this->path_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path(i).data(), this->path(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->path(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Path_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated string path = 1;
  total_size += 1 * this->path_size();
  for (int i = 0; i < this->path_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->path(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Path_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Path_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Path_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Path_Request::MergeFrom(const Project_Library_AST_Function_Modify_Path_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  path_.MergeFrom(from.path_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Path_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Path_Request::CopyFrom(const Project_Library_AST_Function_Modify_Path_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Path_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Modify_Path_Request::Swap(Project_Library_AST_Function_Modify_Path_Request* other) {
  if (other != this) {
    path_.Swap(&other->path_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Path_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Path_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Path_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Modify_Path_Update::kPathFieldNumber;
const int Project_Library_AST_Function_Modify_Path_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Modify_Path_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Modify_Path_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Path_Update::Project_Library_AST_Function_Modify_Path_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Path_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Modify_Path_Update::Project_Library_AST_Function_Modify_Path_Update(const Project_Library_AST_Function_Modify_Path_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Path_Update::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Path_Update::~Project_Library_AST_Function_Modify_Path_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Path_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Modify_Path_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Path_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Path_Update_descriptor_;
}

const Project_Library_AST_Function_Modify_Path_Update& Project_Library_AST_Function_Modify_Path_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Path_Update* Project_Library_AST_Function_Modify_Path_Update::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Path_Update* Project_Library_AST_Function_Modify_Path_Update::New() const {
  return new Project_Library_AST_Function_Modify_Path_Update;
}

void Project_Library_AST_Function_Modify_Path_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  path_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Path_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path(this->path_size() - 1).data(),
            this->path(this->path_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_path;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Path_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string path = 1;
  for (int i = 0; i < this->path_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->path(i).data(), this->path(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Path_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string path = 1;
  for (int i = 0; i < this->path_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path(i).data(), this->path(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->path(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Path_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated string path = 1;
  total_size += 1 * this->path_size();
  for (int i = 0; i < this->path_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->path(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Path_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Path_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Path_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Path_Update::MergeFrom(const Project_Library_AST_Function_Modify_Path_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  path_.MergeFrom(from.path_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Path_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Path_Update::CopyFrom(const Project_Library_AST_Function_Modify_Path_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Path_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Modify_Path_Update::Swap(Project_Library_AST_Function_Modify_Path_Update* other) {
  if (other != this) {
    path_.Swap(&other->path_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Path_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Path_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Path_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Path::Project_Library_AST_Function_Modify_Path()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Path::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Modify_Path::Project_Library_AST_Function_Modify_Path(const Project_Library_AST_Function_Modify_Path& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Path::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Path::~Project_Library_AST_Function_Modify_Path() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Path::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Modify_Path::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Path::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Path_descriptor_;
}

const Project_Library_AST_Function_Modify_Path& Project_Library_AST_Function_Modify_Path::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Path* Project_Library_AST_Function_Modify_Path::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Path* Project_Library_AST_Function_Modify_Path::New() const {
  return new Project_Library_AST_Function_Modify_Path;
}

void Project_Library_AST_Function_Modify_Path::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Path::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Path::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Path::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Path::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Path::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Path* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Path*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Path::MergeFrom(const Project_Library_AST_Function_Modify_Path& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Path::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Path::CopyFrom(const Project_Library_AST_Function_Modify_Path& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Path::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Modify_Path::Swap(Project_Library_AST_Function_Modify_Path* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Path::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Path_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Path_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Modify_Inputs_Request::kInputsFieldNumber;
const int Project_Library_AST_Function_Modify_Inputs_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Modify_Inputs_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Modify_Inputs_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Inputs_Request::Project_Library_AST_Function_Modify_Inputs_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Inputs_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Modify_Inputs_Request::Project_Library_AST_Function_Modify_Inputs_Request(const Project_Library_AST_Function_Modify_Inputs_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Inputs_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Inputs_Request::~Project_Library_AST_Function_Modify_Inputs_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Inputs_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Modify_Inputs_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Inputs_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Inputs_Request_descriptor_;
}

const Project_Library_AST_Function_Modify_Inputs_Request& Project_Library_AST_Function_Modify_Inputs_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Inputs_Request* Project_Library_AST_Function_Modify_Inputs_Request::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Inputs_Request* Project_Library_AST_Function_Modify_Inputs_Request::New() const {
  return new Project_Library_AST_Function_Modify_Inputs_Request;
}

void Project_Library_AST_Function_Modify_Inputs_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inputs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Inputs_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr inputs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inputs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_inputs;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Inputs_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr inputs = 1;
  for (int i = 0; i < this->inputs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->inputs(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Inputs_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr inputs = 1;
  for (int i = 0; i < this->inputs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->inputs(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Inputs_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr inputs = 1;
  total_size += 1 * this->inputs_size();
  for (int i = 0; i < this->inputs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inputs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Inputs_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Inputs_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Inputs_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Inputs_Request::MergeFrom(const Project_Library_AST_Function_Modify_Inputs_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  inputs_.MergeFrom(from.inputs_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Inputs_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Inputs_Request::CopyFrom(const Project_Library_AST_Function_Modify_Inputs_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Inputs_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < inputs_size(); i++) {
    if (!this->inputs(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Modify_Inputs_Request::Swap(Project_Library_AST_Function_Modify_Inputs_Request* other) {
  if (other != this) {
    inputs_.Swap(&other->inputs_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Inputs_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Inputs_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Inputs_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Modify_Inputs_Update::kInputsFieldNumber;
const int Project_Library_AST_Function_Modify_Inputs_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Modify_Inputs_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Modify_Inputs_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Inputs_Update::Project_Library_AST_Function_Modify_Inputs_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Inputs_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Modify_Inputs_Update::Project_Library_AST_Function_Modify_Inputs_Update(const Project_Library_AST_Function_Modify_Inputs_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Inputs_Update::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Inputs_Update::~Project_Library_AST_Function_Modify_Inputs_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Inputs_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Modify_Inputs_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Inputs_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Inputs_Update_descriptor_;
}

const Project_Library_AST_Function_Modify_Inputs_Update& Project_Library_AST_Function_Modify_Inputs_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Inputs_Update* Project_Library_AST_Function_Modify_Inputs_Update::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Inputs_Update* Project_Library_AST_Function_Modify_Inputs_Update::New() const {
  return new Project_Library_AST_Function_Modify_Inputs_Update;
}

void Project_Library_AST_Function_Modify_Inputs_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inputs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Inputs_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr inputs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inputs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_inputs;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Inputs_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr inputs = 1;
  for (int i = 0; i < this->inputs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->inputs(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Inputs_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr inputs = 1;
  for (int i = 0; i < this->inputs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->inputs(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Inputs_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr inputs = 1;
  total_size += 1 * this->inputs_size();
  for (int i = 0; i < this->inputs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inputs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Inputs_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Inputs_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Inputs_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Inputs_Update::MergeFrom(const Project_Library_AST_Function_Modify_Inputs_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  inputs_.MergeFrom(from.inputs_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Inputs_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Inputs_Update::CopyFrom(const Project_Library_AST_Function_Modify_Inputs_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Inputs_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < inputs_size(); i++) {
    if (!this->inputs(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Modify_Inputs_Update::Swap(Project_Library_AST_Function_Modify_Inputs_Update* other) {
  if (other != this) {
    inputs_.Swap(&other->inputs_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Inputs_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Inputs_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Inputs_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Inputs::Project_Library_AST_Function_Modify_Inputs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Inputs::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Modify_Inputs::Project_Library_AST_Function_Modify_Inputs(const Project_Library_AST_Function_Modify_Inputs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Inputs::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Inputs::~Project_Library_AST_Function_Modify_Inputs() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Inputs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Modify_Inputs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Inputs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Inputs_descriptor_;
}

const Project_Library_AST_Function_Modify_Inputs& Project_Library_AST_Function_Modify_Inputs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Inputs* Project_Library_AST_Function_Modify_Inputs::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Inputs* Project_Library_AST_Function_Modify_Inputs::New() const {
  return new Project_Library_AST_Function_Modify_Inputs;
}

void Project_Library_AST_Function_Modify_Inputs::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Inputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Inputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Inputs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Inputs::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Inputs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Inputs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Inputs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Inputs::MergeFrom(const Project_Library_AST_Function_Modify_Inputs& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Inputs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Inputs::CopyFrom(const Project_Library_AST_Function_Modify_Inputs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Inputs::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Modify_Inputs::Swap(Project_Library_AST_Function_Modify_Inputs* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Inputs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Inputs_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Inputs_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Modify_Output_Request::kOutputFieldNumber;
const int Project_Library_AST_Function_Modify_Output_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Modify_Output_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Modify_Output_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Output_Request::Project_Library_AST_Function_Modify_Output_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Output_Request::InitAsDefaultInstance() {
  output_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Modify_Output_Request::Project_Library_AST_Function_Modify_Output_Request(const Project_Library_AST_Function_Modify_Output_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Output_Request::SharedCtor() {
  _cached_size_ = 0;
  output_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Output_Request::~Project_Library_AST_Function_Modify_Output_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Output_Request::SharedDtor() {
  if (this != default_instance_) {
    delete output_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Modify_Output_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Output_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Output_Request_descriptor_;
}

const Project_Library_AST_Function_Modify_Output_Request& Project_Library_AST_Function_Modify_Output_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Output_Request* Project_Library_AST_Function_Modify_Output_Request::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Output_Request* Project_Library_AST_Function_Modify_Output_Request::New() const {
  return new Project_Library_AST_Function_Modify_Output_Request;
}

void Project_Library_AST_Function_Modify_Output_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_output()) {
      if (output_ != NULL) output_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Output_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type output = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Output_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type output = 1;
  if (has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->output(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Output_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type output = 1;
  if (has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->output(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Output_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type output = 1;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Output_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Output_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Output_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Output_Request::MergeFrom(const Project_Library_AST_Function_Modify_Output_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_output()) {
      mutable_output()->::generated::proto::type::Type::MergeFrom(from.output());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Output_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Output_Request::CopyFrom(const Project_Library_AST_Function_Modify_Output_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Output_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_output()) {
    if (!this->output().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Modify_Output_Request::Swap(Project_Library_AST_Function_Modify_Output_Request* other) {
  if (other != this) {
    std::swap(output_, other->output_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Output_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Output_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Output_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Modify_Output_Update::kOutputFieldNumber;
const int Project_Library_AST_Function_Modify_Output_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Modify_Output_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Modify_Output_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Output_Update::Project_Library_AST_Function_Modify_Output_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Output_Update::InitAsDefaultInstance() {
  output_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Modify_Output_Update::Project_Library_AST_Function_Modify_Output_Update(const Project_Library_AST_Function_Modify_Output_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Output_Update::SharedCtor() {
  _cached_size_ = 0;
  output_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Output_Update::~Project_Library_AST_Function_Modify_Output_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Output_Update::SharedDtor() {
  if (this != default_instance_) {
    delete output_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Modify_Output_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Output_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Output_Update_descriptor_;
}

const Project_Library_AST_Function_Modify_Output_Update& Project_Library_AST_Function_Modify_Output_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Output_Update* Project_Library_AST_Function_Modify_Output_Update::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Output_Update* Project_Library_AST_Function_Modify_Output_Update::New() const {
  return new Project_Library_AST_Function_Modify_Output_Update;
}

void Project_Library_AST_Function_Modify_Output_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_output()) {
      if (output_ != NULL) output_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Output_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type output = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Output_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type output = 1;
  if (has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->output(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Output_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type output = 1;
  if (has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->output(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Output_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type output = 1;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Output_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Output_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Output_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Output_Update::MergeFrom(const Project_Library_AST_Function_Modify_Output_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_output()) {
      mutable_output()->::generated::proto::type::Type::MergeFrom(from.output());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Output_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Output_Update::CopyFrom(const Project_Library_AST_Function_Modify_Output_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Output_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_output()) {
    if (!this->output().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Modify_Output_Update::Swap(Project_Library_AST_Function_Modify_Output_Update* other) {
  if (other != this) {
    std::swap(output_, other->output_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Output_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Output_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Output_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify_Output::Project_Library_AST_Function_Modify_Output()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify_Output::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Modify_Output::Project_Library_AST_Function_Modify_Output(const Project_Library_AST_Function_Modify_Output& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Output::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify_Output::~Project_Library_AST_Function_Modify_Output() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify_Output::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Modify_Output::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify_Output::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_Output_descriptor_;
}

const Project_Library_AST_Function_Modify_Output& Project_Library_AST_Function_Modify_Output::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify_Output* Project_Library_AST_Function_Modify_Output::default_instance_ = NULL;

Project_Library_AST_Function_Modify_Output* Project_Library_AST_Function_Modify_Output::New() const {
  return new Project_Library_AST_Function_Modify_Output;
}

void Project_Library_AST_Function_Modify_Output::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify_Output::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify_Output::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify_Output::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify_Output::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify_Output::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify_Output* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify_Output*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify_Output::MergeFrom(const Project_Library_AST_Function_Modify_Output& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify_Output::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify_Output::CopyFrom(const Project_Library_AST_Function_Modify_Output& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify_Output::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Modify_Output::Swap(Project_Library_AST_Function_Modify_Output* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify_Output::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_Output_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_Output_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Modify::Project_Library_AST_Function_Modify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Modify::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Modify::Project_Library_AST_Function_Modify(const Project_Library_AST_Function_Modify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Modify::~Project_Library_AST_Function_Modify() {
  SharedDtor();
}

void Project_Library_AST_Function_Modify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Modify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Modify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Modify_descriptor_;
}

const Project_Library_AST_Function_Modify& Project_Library_AST_Function_Modify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Modify* Project_Library_AST_Function_Modify::default_instance_ = NULL;

Project_Library_AST_Function_Modify* Project_Library_AST_Function_Modify::New() const {
  return new Project_Library_AST_Function_Modify;
}

void Project_Library_AST_Function_Modify::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Modify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Modify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Modify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Modify::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Modify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Modify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Modify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Modify::MergeFrom(const Project_Library_AST_Function_Modify& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Modify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Modify::CopyFrom(const Project_Library_AST_Function_Modify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Modify::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Modify::Swap(Project_Library_AST_Function_Modify* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Modify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Modify_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Modify_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Get_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Get_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Get_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Get_Request::Project_Library_AST_Function_Graph_Get_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Get_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Get_Request::Project_Library_AST_Function_Graph_Get_Request(const Project_Library_AST_Function_Graph_Get_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Get_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Get_Request::~Project_Library_AST_Function_Graph_Get_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Get_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Get_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Get_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Get_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Get_Request& Project_Library_AST_Function_Graph_Get_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Get_Request* Project_Library_AST_Function_Graph_Get_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Get_Request* Project_Library_AST_Function_Graph_Get_Request::New() const {
  return new Project_Library_AST_Function_Graph_Get_Request;
}

void Project_Library_AST_Function_Graph_Get_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Get_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.crumb.Breadcrumbs bc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Get_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bc(), output);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->libraryid(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Get_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bc(), target);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->libraryid(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Get_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 1;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 2;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Get_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Get_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Get_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Get_Request::MergeFrom(const Project_Library_AST_Function_Graph_Get_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Get_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Get_Request::CopyFrom(const Project_Library_AST_Function_Graph_Get_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Get_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Get_Request::Swap(Project_Library_AST_Function_Graph_Get_Request* other) {
  if (other != this) {
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Get_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Get_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Get_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Get_Status::kGraphFieldNumber;
const int Project_Library_AST_Function_Graph_Get_Status::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Get_Status::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Get_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Get_Status::Project_Library_AST_Function_Graph_Get_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Get_Status::InitAsDefaultInstance() {
  graph_ = const_cast< ::generated::proto::graphview::GraphView*>(&::generated::proto::graphview::GraphView::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Get_Status::Project_Library_AST_Function_Graph_Get_Status(const Project_Library_AST_Function_Graph_Get_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Get_Status::SharedCtor() {
  _cached_size_ = 0;
  graph_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Get_Status::~Project_Library_AST_Function_Graph_Get_Status() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Get_Status::SharedDtor() {
  if (this != default_instance_) {
    delete graph_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Get_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Get_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Get_Status_descriptor_;
}

const Project_Library_AST_Function_Graph_Get_Status& Project_Library_AST_Function_Graph_Get_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Get_Status* Project_Library_AST_Function_Graph_Get_Status::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Get_Status* Project_Library_AST_Function_Graph_Get_Status::New() const {
  return new Project_Library_AST_Function_Graph_Get_Status;
}

void Project_Library_AST_Function_Graph_Get_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_graph()) {
      if (graph_ != NULL) graph_->::generated::proto::graphview::GraphView::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Get_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graphview.GraphView graph = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graph()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Get_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graphview.GraphView graph = 1;
  if (has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->graph(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Get_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graphview.GraphView graph = 1;
  if (has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->graph(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Get_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graphview.GraphView graph = 1;
    if (has_graph()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->graph());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Get_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Get_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Get_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Get_Status::MergeFrom(const Project_Library_AST_Function_Graph_Get_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_graph()) {
      mutable_graph()->::generated::proto::graphview::GraphView::MergeFrom(from.graph());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Get_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Get_Status::CopyFrom(const Project_Library_AST_Function_Graph_Get_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Get_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_graph()) {
    if (!this->graph().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Get_Status::Swap(Project_Library_AST_Function_Graph_Get_Status* other) {
  if (other != this) {
    std::swap(graph_, other->graph_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Get_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Get_Status_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Get_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Get::Project_Library_AST_Function_Graph_Get()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Get::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Get::Project_Library_AST_Function_Graph_Get(const Project_Library_AST_Function_Graph_Get& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Get::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Get::~Project_Library_AST_Function_Graph_Get() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Get::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Get::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Get::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Get_descriptor_;
}

const Project_Library_AST_Function_Graph_Get& Project_Library_AST_Function_Graph_Get::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Get* Project_Library_AST_Function_Graph_Get::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Get* Project_Library_AST_Function_Graph_Get::New() const {
  return new Project_Library_AST_Function_Graph_Get;
}

void Project_Library_AST_Function_Graph_Get::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Get::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Get::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Get::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Get::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Get::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Get* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Get*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Get::MergeFrom(const Project_Library_AST_Function_Graph_Get& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Get::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Get::CopyFrom(const Project_Library_AST_Function_Graph_Get& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Get::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Get::Swap(Project_Library_AST_Function_Graph_Get* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Get::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Get_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Get_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Lookup_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Lookup_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Lookup_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Lookup_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Lookup_Request::Project_Library_AST_Function_Graph_Lookup_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Lookup_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Lookup_Request::Project_Library_AST_Function_Graph_Lookup_Request(const Project_Library_AST_Function_Graph_Lookup_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Lookup_Request::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Lookup_Request::~Project_Library_AST_Function_Graph_Lookup_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Lookup_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Lookup_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Lookup_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Lookup_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Lookup_Request& Project_Library_AST_Function_Graph_Lookup_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Lookup_Request* Project_Library_AST_Function_Graph_Lookup_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Lookup_Request* Project_Library_AST_Function_Graph_Lookup_Request::New() const {
  return new Project_Library_AST_Function_Graph_Lookup_Request;
}

void Project_Library_AST_Function_Graph_Lookup_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Lookup_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Lookup_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Lookup_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Lookup_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Lookup_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Lookup_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Lookup_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Lookup_Request::MergeFrom(const Project_Library_AST_Function_Graph_Lookup_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Lookup_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Lookup_Request::CopyFrom(const Project_Library_AST_Function_Graph_Lookup_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Lookup_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Lookup_Request::Swap(Project_Library_AST_Function_Graph_Lookup_Request* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Lookup_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Lookup_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Lookup_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Lookup_Status::kNodeFieldNumber;
const int Project_Library_AST_Function_Graph_Lookup_Status::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Lookup_Status::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Lookup_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Lookup_Status::Project_Library_AST_Function_Graph_Lookup_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Lookup_Status::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Lookup_Status::Project_Library_AST_Function_Graph_Lookup_Status(const Project_Library_AST_Function_Graph_Lookup_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Lookup_Status::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Lookup_Status::~Project_Library_AST_Function_Graph_Lookup_Status() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Lookup_Status::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Lookup_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Lookup_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Lookup_Status_descriptor_;
}

const Project_Library_AST_Function_Graph_Lookup_Status& Project_Library_AST_Function_Graph_Lookup_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Lookup_Status* Project_Library_AST_Function_Graph_Lookup_Status::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Lookup_Status* Project_Library_AST_Function_Graph_Lookup_Status::New() const {
  return new Project_Library_AST_Function_Graph_Lookup_Status;
}

void Project_Library_AST_Function_Graph_Lookup_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Lookup_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Lookup_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Lookup_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Lookup_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Lookup_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Lookup_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Lookup_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Lookup_Status::MergeFrom(const Project_Library_AST_Function_Graph_Lookup_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Lookup_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Lookup_Status::CopyFrom(const Project_Library_AST_Function_Graph_Lookup_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Lookup_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Lookup_Status::Swap(Project_Library_AST_Function_Graph_Lookup_Status* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Lookup_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Lookup_Status_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Lookup_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Lookup::Project_Library_AST_Function_Graph_Lookup()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Lookup::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Lookup::Project_Library_AST_Function_Graph_Lookup(const Project_Library_AST_Function_Graph_Lookup& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Lookup::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Lookup::~Project_Library_AST_Function_Graph_Lookup() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Lookup::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Lookup::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Lookup::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Lookup_descriptor_;
}

const Project_Library_AST_Function_Graph_Lookup& Project_Library_AST_Function_Graph_Lookup::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Lookup* Project_Library_AST_Function_Graph_Lookup::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Lookup* Project_Library_AST_Function_Graph_Lookup::New() const {
  return new Project_Library_AST_Function_Graph_Lookup;
}

void Project_Library_AST_Function_Graph_Lookup::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Lookup::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Lookup::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Lookup::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Lookup::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Lookup::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Lookup* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Lookup*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Lookup::MergeFrom(const Project_Library_AST_Function_Graph_Lookup& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Lookup::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Lookup::CopyFrom(const Project_Library_AST_Function_Graph_Lookup& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Lookup::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Lookup::Swap(Project_Library_AST_Function_Graph_Lookup* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Lookup::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Lookup_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Lookup_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Add_Request::kNodeFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Add_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Add_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Add_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Add_Request::Project_Library_AST_Function_Graph_Node_Add_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Add_Request::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Add_Request::Project_Library_AST_Function_Graph_Node_Add_Request(const Project_Library_AST_Function_Graph_Node_Add_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Add_Request::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Add_Request::~Project_Library_AST_Function_Graph_Node_Add_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Add_Request::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Add_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Add_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Add_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Add_Request& Project_Library_AST_Function_Graph_Node_Add_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Add_Request* Project_Library_AST_Function_Graph_Node_Add_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Add_Request* Project_Library_AST_Function_Graph_Node_Add_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_Add_Request;
}

void Project_Library_AST_Function_Graph_Node_Add_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Add_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Add_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Add_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Add_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Add_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Add_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Add_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Add_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_Add_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Add_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Add_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_Add_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Add_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Add_Request::Swap(Project_Library_AST_Function_Graph_Node_Add_Request* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Add_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Add_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Add_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Add_Update::kNodeFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Add_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Add_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Add_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Add_Update::Project_Library_AST_Function_Graph_Node_Add_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Add_Update::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Add_Update::Project_Library_AST_Function_Graph_Node_Add_Update(const Project_Library_AST_Function_Graph_Node_Add_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Add_Update::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Add_Update::~Project_Library_AST_Function_Graph_Node_Add_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Add_Update::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Add_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Add_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Add_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Add_Update& Project_Library_AST_Function_Graph_Node_Add_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Add_Update* Project_Library_AST_Function_Graph_Node_Add_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Add_Update* Project_Library_AST_Function_Graph_Node_Add_Update::New() const {
  return new Project_Library_AST_Function_Graph_Node_Add_Update;
}

void Project_Library_AST_Function_Graph_Node_Add_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Add_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Add_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Add_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Add_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Add_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Add_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Add_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Add_Update::MergeFrom(const Project_Library_AST_Function_Graph_Node_Add_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Add_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Add_Update::CopyFrom(const Project_Library_AST_Function_Graph_Node_Add_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Add_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Add_Update::Swap(Project_Library_AST_Function_Graph_Node_Add_Update* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Add_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Add_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Add_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Add::Project_Library_AST_Function_Graph_Node_Add()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Add::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Add::Project_Library_AST_Function_Graph_Node_Add(const Project_Library_AST_Function_Graph_Node_Add& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Add::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Add::~Project_Library_AST_Function_Graph_Node_Add() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Add::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Add::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Add::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Add_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Add& Project_Library_AST_Function_Graph_Node_Add::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Add* Project_Library_AST_Function_Graph_Node_Add::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Add* Project_Library_AST_Function_Graph_Node_Add::New() const {
  return new Project_Library_AST_Function_Graph_Node_Add;
}

void Project_Library_AST_Function_Graph_Node_Add::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Add::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Add::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Add::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Add::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Add::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Add* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Add*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Add::MergeFrom(const Project_Library_AST_Function_Graph_Node_Add& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Add::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Add::CopyFrom(const Project_Library_AST_Function_Graph_Node_Add& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Add::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Add::Swap(Project_Library_AST_Function_Graph_Node_Add* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Add::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Add_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Add_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Modify_Request::kNodeFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Modify_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Modify_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Modify_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Modify_Request::Project_Library_AST_Function_Graph_Node_Modify_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Modify_Request::Project_Library_AST_Function_Graph_Node_Modify_Request(const Project_Library_AST_Function_Graph_Node_Modify_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Modify_Request::~Project_Library_AST_Function_Graph_Node_Modify_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Modify_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Modify_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Modify_Request& Project_Library_AST_Function_Graph_Node_Modify_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Modify_Request* Project_Library_AST_Function_Graph_Node_Modify_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Modify_Request* Project_Library_AST_Function_Graph_Node_Modify_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_Modify_Request;
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Modify_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Modify_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Modify_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Modify_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Modify_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_Modify_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_Modify_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Modify_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Modify_Request::Swap(Project_Library_AST_Function_Graph_Node_Modify_Request* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Modify_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Modify_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Modify_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Modify_Update::kOldNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Modify_Update::kNodeFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Modify_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Modify_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Modify_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Modify_Update::Project_Library_AST_Function_Graph_Node_Modify_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Modify_Update::Project_Library_AST_Function_Graph_Node_Modify_Update(const Project_Library_AST_Function_Graph_Node_Modify_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::SharedCtor() {
  _cached_size_ = 0;
  oldnodeid_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Modify_Update::~Project_Library_AST_Function_Graph_Node_Modify_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Modify_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Modify_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Modify_Update& Project_Library_AST_Function_Graph_Node_Modify_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Modify_Update* Project_Library_AST_Function_Graph_Node_Modify_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Modify_Update* Project_Library_AST_Function_Graph_Node_Modify_Update::New() const {
  return new Project_Library_AST_Function_Graph_Node_Modify_Update;
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    oldnodeid_ = 0;
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Modify_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 oldNodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &oldnodeid_)));
          set_has_oldnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_node;
        break;
      }

      // required .generated.proto.graph.Node node = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_node:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 oldNodeID = 1;
  if (has_oldnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->oldnodeid(), output);
  }

  // required .generated.proto.graph.Node node = 2;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Modify_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 oldNodeID = 1;
  if (has_oldnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->oldnodeid(), target);
  }

  // required .generated.proto.graph.Node node = 2;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Modify_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 oldNodeID = 1;
    if (has_oldnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->oldnodeid());
    }

    // required .generated.proto.graph.Node node = 2;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Modify_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Modify_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::MergeFrom(const Project_Library_AST_Function_Graph_Node_Modify_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_oldnodeid()) {
      set_oldnodeid(from.oldnodeid());
    }
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::CopyFrom(const Project_Library_AST_Function_Graph_Node_Modify_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Modify_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Modify_Update::Swap(Project_Library_AST_Function_Graph_Node_Modify_Update* other) {
  if (other != this) {
    std::swap(oldnodeid_, other->oldnodeid_);
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Modify_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Modify_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Modify_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Modify::Project_Library_AST_Function_Graph_Node_Modify()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Modify::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Modify::Project_Library_AST_Function_Graph_Node_Modify(const Project_Library_AST_Function_Graph_Node_Modify& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Modify::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Modify::~Project_Library_AST_Function_Graph_Node_Modify() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Modify::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Modify::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Modify::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Modify_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Modify& Project_Library_AST_Function_Graph_Node_Modify::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Modify* Project_Library_AST_Function_Graph_Node_Modify::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Modify* Project_Library_AST_Function_Graph_Node_Modify::New() const {
  return new Project_Library_AST_Function_Graph_Node_Modify;
}

void Project_Library_AST_Function_Graph_Node_Modify::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Modify::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Modify::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Modify::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Modify::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Modify::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Modify* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Modify*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Modify::MergeFrom(const Project_Library_AST_Function_Graph_Node_Modify& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Modify::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Modify::CopyFrom(const Project_Library_AST_Function_Graph_Node_Modify& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Modify::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Modify::Swap(Project_Library_AST_Function_Graph_Node_Modify* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Modify::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Modify_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Modify_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::kNodeFieldNumber;
const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request(const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::~Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request& Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::Swap(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_ModifyInPlace_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::kNodeFieldNumber;
const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update(const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::~Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update& Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::New() const {
  return new Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::MergeFrom(const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::CopyFrom(const Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::Swap(Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_ModifyInPlace_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_ModifyInPlace::Project_Library_AST_Function_Graph_Node_ModifyInPlace()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace::Project_Library_AST_Function_Graph_Node_ModifyInPlace(const Project_Library_AST_Function_Graph_Node_ModifyInPlace& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace::~Project_Library_AST_Function_Graph_Node_ModifyInPlace() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_ModifyInPlace::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_ModifyInPlace_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_ModifyInPlace& Project_Library_AST_Function_Graph_Node_ModifyInPlace::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_ModifyInPlace* Project_Library_AST_Function_Graph_Node_ModifyInPlace::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_ModifyInPlace* Project_Library_AST_Function_Graph_Node_ModifyInPlace::New() const {
  return new Project_Library_AST_Function_Graph_Node_ModifyInPlace;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_ModifyInPlace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_ModifyInPlace::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_ModifyInPlace::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_ModifyInPlace* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_ModifyInPlace*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::MergeFrom(const Project_Library_AST_Function_Graph_Node_ModifyInPlace& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::CopyFrom(const Project_Library_AST_Function_Graph_Node_ModifyInPlace& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_ModifyInPlace::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_ModifyInPlace::Swap(Project_Library_AST_Function_Graph_Node_ModifyInPlace* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_ModifyInPlace::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_ModifyInPlace_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_ModifyInPlace_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Remove_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Remove_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Remove_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Remove_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Remove_Request::Project_Library_AST_Function_Graph_Node_Remove_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Remove_Request::Project_Library_AST_Function_Graph_Node_Remove_Request(const Project_Library_AST_Function_Graph_Node_Remove_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Remove_Request::~Project_Library_AST_Function_Graph_Node_Remove_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Remove_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Remove_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Remove_Request& Project_Library_AST_Function_Graph_Node_Remove_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Remove_Request* Project_Library_AST_Function_Graph_Node_Remove_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Remove_Request* Project_Library_AST_Function_Graph_Node_Remove_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_Remove_Request;
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Remove_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Remove_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Remove_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Remove_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Remove_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_Remove_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_Remove_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Remove_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Remove_Request::Swap(Project_Library_AST_Function_Graph_Node_Remove_Request* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Remove_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Remove_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Remove_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Remove_Update::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Remove_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Remove_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Remove_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Remove_Update::Project_Library_AST_Function_Graph_Node_Remove_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Remove_Update::Project_Library_AST_Function_Graph_Node_Remove_Update(const Project_Library_AST_Function_Graph_Node_Remove_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Remove_Update::~Project_Library_AST_Function_Graph_Node_Remove_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Remove_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Remove_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Remove_Update& Project_Library_AST_Function_Graph_Node_Remove_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Remove_Update* Project_Library_AST_Function_Graph_Node_Remove_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Remove_Update* Project_Library_AST_Function_Graph_Node_Remove_Update::New() const {
  return new Project_Library_AST_Function_Graph_Node_Remove_Update;
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Remove_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Remove_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Remove_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Remove_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Remove_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::MergeFrom(const Project_Library_AST_Function_Graph_Node_Remove_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::CopyFrom(const Project_Library_AST_Function_Graph_Node_Remove_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Remove_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Remove_Update::Swap(Project_Library_AST_Function_Graph_Node_Remove_Update* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Remove_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Remove_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Remove_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Remove::Project_Library_AST_Function_Graph_Node_Remove()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Remove::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Remove::Project_Library_AST_Function_Graph_Node_Remove(const Project_Library_AST_Function_Graph_Node_Remove& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Remove::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Remove::~Project_Library_AST_Function_Graph_Node_Remove() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Remove::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Remove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Remove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Remove_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Remove& Project_Library_AST_Function_Graph_Node_Remove::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Remove* Project_Library_AST_Function_Graph_Node_Remove::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Remove* Project_Library_AST_Function_Graph_Node_Remove::New() const {
  return new Project_Library_AST_Function_Graph_Node_Remove;
}

void Project_Library_AST_Function_Graph_Node_Remove::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Remove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Remove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Remove::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Remove::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Remove::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Remove* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Remove*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Remove::MergeFrom(const Project_Library_AST_Function_Graph_Node_Remove& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Remove::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Remove::CopyFrom(const Project_Library_AST_Function_Graph_Node_Remove& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Remove::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Remove::Swap(Project_Library_AST_Function_Graph_Node_Remove* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Remove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Remove_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Remove_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Default_Get_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Get_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Get_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Get_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Get_Request::Project_Library_AST_Function_Graph_Node_Default_Get_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Default_Get_Request::Project_Library_AST_Function_Graph_Node_Default_Get_Request(const Project_Library_AST_Function_Graph_Node_Default_Get_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Get_Request::~Project_Library_AST_Function_Graph_Node_Default_Get_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Get_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Get_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Get_Request& Project_Library_AST_Function_Graph_Node_Default_Get_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Get_Request* Project_Library_AST_Function_Graph_Node_Default_Get_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Get_Request* Project_Library_AST_Function_Graph_Node_Default_Get_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Get_Request;
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Get_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Get_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Get_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Get_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Get_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Get_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Get_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Get_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Request::Swap(Project_Library_AST_Function_Graph_Node_Default_Get_Request* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Get_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Get_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Get_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Default_Get_Status::kDefaultsMapFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Get_Status::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Get_Status::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Get_Status::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Get_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Get_Status::Project_Library_AST_Function_Graph_Node_Default_Get_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::InitAsDefaultInstance() {
  defaultsmap_ = const_cast< ::generated::proto::nodedefault::DefaultsMap*>(&::generated::proto::nodedefault::DefaultsMap::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Default_Get_Status::Project_Library_AST_Function_Graph_Node_Default_Get_Status(const Project_Library_AST_Function_Graph_Node_Default_Get_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::SharedCtor() {
  _cached_size_ = 0;
  defaultsmap_ = NULL;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Get_Status::~Project_Library_AST_Function_Graph_Node_Default_Get_Status() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::SharedDtor() {
  if (this != default_instance_) {
    delete defaultsmap_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Get_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Get_Status_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Get_Status& Project_Library_AST_Function_Graph_Node_Default_Get_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Get_Status* Project_Library_AST_Function_Graph_Node_Default_Get_Status::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Get_Status* Project_Library_AST_Function_Graph_Node_Default_Get_Status::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Get_Status;
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_defaultsmap()) {
      if (defaultsmap_ != NULL) defaultsmap_->::generated::proto::nodedefault::DefaultsMap::Clear();
    }
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Get_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.nodedefault.DefaultsMap defaultsMap = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsmap()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.nodedefault.DefaultsMap defaultsMap = 1;
  if (has_defaultsmap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->defaultsmap(), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Get_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.nodedefault.DefaultsMap defaultsMap = 1;
  if (has_defaultsmap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->defaultsmap(), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Get_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.nodedefault.DefaultsMap defaultsMap = 1;
    if (has_defaultsmap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->defaultsmap());
    }

    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Get_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Get_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Get_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_defaultsmap()) {
      mutable_defaultsmap()->::generated::proto::nodedefault::DefaultsMap::MergeFrom(from.defaultsmap());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Get_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Get_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Get_Status::Swap(Project_Library_AST_Function_Graph_Node_Default_Get_Status* other) {
  if (other != this) {
    std::swap(defaultsmap_, other->defaultsmap_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Get_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Get_Status_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Get_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Get::Project_Library_AST_Function_Graph_Node_Default_Get()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Get::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Default_Get::Project_Library_AST_Function_Graph_Node_Default_Get(const Project_Library_AST_Function_Graph_Node_Default_Get& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Get::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Get::~Project_Library_AST_Function_Graph_Node_Default_Get() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Get::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Get::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Get::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Get_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Get& Project_Library_AST_Function_Graph_Node_Default_Get::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Get* Project_Library_AST_Function_Graph_Node_Default_Get::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Get* Project_Library_AST_Function_Graph_Node_Default_Get::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Get;
}

void Project_Library_AST_Function_Graph_Node_Default_Get::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Get::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Get::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Get::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Get::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Get::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Get* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Get*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Get::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Get& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Get::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Get::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Get& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Get::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Get::Swap(Project_Library_AST_Function_Graph_Node_Default_Get* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Get::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Get_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Get_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Default_Set_Request::kInPortFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Request::kValueFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Set_Request::Project_Library_AST_Function_Graph_Node_Default_Set_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Default_Set_Request::Project_Library_AST_Function_Graph_Node_Default_Set_Request(const Project_Library_AST_Function_Graph_Node_Default_Set_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::SharedCtor() {
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Set_Request::~Project_Library_AST_Function_Graph_Node_Default_Set_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::SharedDtor() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Set_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Set_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Set_Request& Project_Library_AST_Function_Graph_Node_Default_Set_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Set_Request* Project_Library_AST_Function_Graph_Node_Default_Set_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Set_Request* Project_Library_AST_Function_Graph_Node_Default_Set_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Set_Request;
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Set_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 inPort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_inport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_inPort;
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->inport(i), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(), output);
  }

  // required int32 nodeID = 3;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 4;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bc(), output);
  }

  // required int32 libraryID = 5;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->libraryid(), output);
  }

  // required int32 projectID = 6;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Set_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->inport(i), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // required int32 nodeID = 3;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 4;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bc(), target);
  }

  // required int32 libraryID = 5;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->libraryid(), target);
  }

  // required int32 projectID = 6;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Set_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // required int32 nodeID = 3;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 4;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 5;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 6;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 inPort = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->inport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->inport(i));
    }
    total_size += 1 * this->inport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Set_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Set_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Set_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  inport_.MergeFrom(from.inport_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Set_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Set_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003e) != 0x0000003e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Request::Swap(Project_Library_AST_Function_Graph_Node_Default_Set_Request* other) {
  if (other != this) {
    inport_.Swap(&other->inport_);
    std::swap(value_, other->value_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Set_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Set_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Set_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Default_Set_Update::kInPortFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Update::kValueFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Update::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Set_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Set_Update::Project_Library_AST_Function_Graph_Node_Default_Set_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Default_Set_Update::Project_Library_AST_Function_Graph_Node_Default_Set_Update(const Project_Library_AST_Function_Graph_Node_Default_Set_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::SharedCtor() {
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Set_Update::~Project_Library_AST_Function_Graph_Node_Default_Set_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::SharedDtor() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Set_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Set_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Set_Update& Project_Library_AST_Function_Graph_Node_Default_Set_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Set_Update* Project_Library_AST_Function_Graph_Node_Default_Set_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Set_Update* Project_Library_AST_Function_Graph_Node_Default_Set_Update::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Set_Update;
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Set_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 inPort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_inport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_inPort;
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->inport(i), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(), output);
  }

  // required int32 nodeID = 3;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 4;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bc(), output);
  }

  // required int32 libraryID = 5;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->libraryid(), output);
  }

  // required int32 projectID = 6;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Set_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->inport(i), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // required int32 nodeID = 3;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 4;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bc(), target);
  }

  // required int32 libraryID = 5;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->libraryid(), target);
  }

  // required int32 projectID = 6;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Set_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // required int32 nodeID = 3;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 4;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 5;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 6;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 inPort = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->inport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->inport(i));
    }
    total_size += 1 * this->inport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Set_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Set_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Set_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  inport_.MergeFrom(from.inport_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Set_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Set_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003e) != 0x0000003e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Set_Update::Swap(Project_Library_AST_Function_Graph_Node_Default_Set_Update* other) {
  if (other != this) {
    inport_.Swap(&other->inport_);
    std::swap(value_, other->value_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Set_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Set_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Set_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Set::Project_Library_AST_Function_Graph_Node_Default_Set()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Set::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Default_Set::Project_Library_AST_Function_Graph_Node_Default_Set(const Project_Library_AST_Function_Graph_Node_Default_Set& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Set::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Set::~Project_Library_AST_Function_Graph_Node_Default_Set() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Set::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Set::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Set_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Set& Project_Library_AST_Function_Graph_Node_Default_Set::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Set* Project_Library_AST_Function_Graph_Node_Default_Set::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Set* Project_Library_AST_Function_Graph_Node_Default_Set::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Set;
}

void Project_Library_AST_Function_Graph_Node_Default_Set::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Set::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Set::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Set::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Set* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Set*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Set::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Set& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Set::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Set::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Set& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Set::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Set::Swap(Project_Library_AST_Function_Graph_Node_Default_Set* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Set::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Set_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Set_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Request::kInPortFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Remove_Request::Project_Library_AST_Function_Graph_Node_Default_Remove_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Default_Remove_Request::Project_Library_AST_Function_Graph_Node_Default_Remove_Request(const Project_Library_AST_Function_Graph_Node_Default_Remove_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Remove_Request::~Project_Library_AST_Function_Graph_Node_Default_Remove_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Remove_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Remove_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Remove_Request& Project_Library_AST_Function_Graph_Node_Default_Remove_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Remove_Request* Project_Library_AST_Function_Graph_Node_Default_Remove_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Remove_Request* Project_Library_AST_Function_Graph_Node_Default_Remove_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Remove_Request;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Remove_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 inPort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_inport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_inPort;
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->inport(i), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Remove_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->inport(i), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Remove_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 inPort = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->inport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->inport(i));
    }
    total_size += 1 * this->inport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Remove_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Remove_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Remove_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  inport_.MergeFrom(from.inport_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Remove_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Remove_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Request::Swap(Project_Library_AST_Function_Graph_Node_Default_Remove_Request* other) {
  if (other != this) {
    inport_.Swap(&other->inport_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Remove_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Remove_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Remove_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Update::kInPortFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Update::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Default_Remove_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Remove_Update::Project_Library_AST_Function_Graph_Node_Default_Remove_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Default_Remove_Update::Project_Library_AST_Function_Graph_Node_Default_Remove_Update(const Project_Library_AST_Function_Graph_Node_Default_Remove_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Remove_Update::~Project_Library_AST_Function_Graph_Node_Default_Remove_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Remove_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Remove_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Remove_Update& Project_Library_AST_Function_Graph_Node_Default_Remove_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Remove_Update* Project_Library_AST_Function_Graph_Node_Default_Remove_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Remove_Update* Project_Library_AST_Function_Graph_Node_Default_Remove_Update::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Remove_Update;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Remove_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 inPort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_inport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_inPort;
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->inport(i), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Remove_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->inport(i), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Remove_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 inPort = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->inport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->inport(i));
    }
    total_size += 1 * this->inport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Remove_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Remove_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Remove_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  inport_.MergeFrom(from.inport_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Remove_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Remove_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove_Update::Swap(Project_Library_AST_Function_Graph_Node_Default_Remove_Update* other) {
  if (other != this) {
    inport_.Swap(&other->inport_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Remove_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Remove_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Remove_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default_Remove::Project_Library_AST_Function_Graph_Node_Default_Remove()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Default_Remove::Project_Library_AST_Function_Graph_Node_Default_Remove(const Project_Library_AST_Function_Graph_Node_Default_Remove& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default_Remove::~Project_Library_AST_Function_Graph_Node_Default_Remove() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default_Remove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_Remove_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default_Remove& Project_Library_AST_Function_Graph_Node_Default_Remove::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default_Remove* Project_Library_AST_Function_Graph_Node_Default_Remove::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default_Remove* Project_Library_AST_Function_Graph_Node_Default_Remove::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default_Remove;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default_Remove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default_Remove::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default_Remove::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default_Remove* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default_Remove*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default_Remove& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default_Remove& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default_Remove::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Default_Remove::Swap(Project_Library_AST_Function_Graph_Node_Default_Remove* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default_Remove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_Remove_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_Remove_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Default::Project_Library_AST_Function_Graph_Node_Default()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Default::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Default::Project_Library_AST_Function_Graph_Node_Default(const Project_Library_AST_Function_Graph_Node_Default& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Default::~Project_Library_AST_Function_Graph_Node_Default() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Default::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Default::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Default::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Default_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Default& Project_Library_AST_Function_Graph_Node_Default::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Default* Project_Library_AST_Function_Graph_Node_Default::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Default* Project_Library_AST_Function_Graph_Node_Default::New() const {
  return new Project_Library_AST_Function_Graph_Node_Default;
}

void Project_Library_AST_Function_Graph_Node_Default::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Default::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Default::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Default::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Default::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Default::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Default* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Default*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Default::MergeFrom(const Project_Library_AST_Function_Graph_Node_Default& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Default::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Default::CopyFrom(const Project_Library_AST_Function_Graph_Node_Default& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Default::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Default::Swap(Project_Library_AST_Function_Graph_Node_Default* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Default::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Default_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Default_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Properties_Get_Request::Project_Library_AST_Function_Graph_Node_Properties_Get_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Properties_Get_Request::Project_Library_AST_Function_Graph_Node_Properties_Get_Request(const Project_Library_AST_Function_Graph_Node_Properties_Get_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Properties_Get_Request::~Project_Library_AST_Function_Graph_Node_Properties_Get_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Get_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Properties_Get_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Properties_Get_Request& Project_Library_AST_Function_Graph_Node_Properties_Get_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Properties_Get_Request* Project_Library_AST_Function_Graph_Node_Properties_Get_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Properties_Get_Request* Project_Library_AST_Function_Graph_Node_Properties_Get_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_Properties_Get_Request;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Properties_Get_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Properties_Get_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Properties_Get_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Properties_Get_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Properties_Get_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_Properties_Get_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_Properties_Get_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Properties_Get_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Request::Swap(Project_Library_AST_Function_Graph_Node_Properties_Get_Request* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Properties_Get_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Properties_Get_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Properties_Get_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Status::kPropertiesFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Status::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Status::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Status::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Get_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Properties_Get_Status::Project_Library_AST_Function_Graph_Node_Properties_Get_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::InitAsDefaultInstance() {
  properties_ = const_cast< ::generated::proto::attributes::Properties*>(&::generated::proto::attributes::Properties::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Properties_Get_Status::Project_Library_AST_Function_Graph_Node_Properties_Get_Status(const Project_Library_AST_Function_Graph_Node_Properties_Get_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::SharedCtor() {
  _cached_size_ = 0;
  properties_ = NULL;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Properties_Get_Status::~Project_Library_AST_Function_Graph_Node_Properties_Get_Status() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::SharedDtor() {
  if (this != default_instance_) {
    delete properties_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Get_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Properties_Get_Status_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Properties_Get_Status& Project_Library_AST_Function_Graph_Node_Properties_Get_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Properties_Get_Status* Project_Library_AST_Function_Graph_Node_Properties_Get_Status::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Properties_Get_Status* Project_Library_AST_Function_Graph_Node_Properties_Get_Status::New() const {
  return new Project_Library_AST_Function_Graph_Node_Properties_Get_Status;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_properties()) {
      if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
    }
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Properties_Get_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.attributes.Properties properties = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Properties_Get_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->properties(), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Properties_Get_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.attributes.Properties properties = 1;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Properties_Get_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Properties_Get_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::MergeFrom(const Project_Library_AST_Function_Graph_Node_Properties_Get_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_properties()) {
      mutable_properties()->::generated::proto::attributes::Properties::MergeFrom(from.properties());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::CopyFrom(const Project_Library_AST_Function_Graph_Node_Properties_Get_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Properties_Get_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get_Status::Swap(Project_Library_AST_Function_Graph_Node_Properties_Get_Status* other) {
  if (other != this) {
    std::swap(properties_, other->properties_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Properties_Get_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Properties_Get_Status_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Properties_Get_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Properties_Get::Project_Library_AST_Function_Graph_Node_Properties_Get()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Properties_Get::Project_Library_AST_Function_Graph_Node_Properties_Get(const Project_Library_AST_Function_Graph_Node_Properties_Get& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Properties_Get::~Project_Library_AST_Function_Graph_Node_Properties_Get() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Get::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Properties_Get_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Properties_Get& Project_Library_AST_Function_Graph_Node_Properties_Get::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Properties_Get* Project_Library_AST_Function_Graph_Node_Properties_Get::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Properties_Get* Project_Library_AST_Function_Graph_Node_Properties_Get::New() const {
  return new Project_Library_AST_Function_Graph_Node_Properties_Get;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Properties_Get::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Properties_Get::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Properties_Get::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Properties_Get* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Properties_Get*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::MergeFrom(const Project_Library_AST_Function_Graph_Node_Properties_Get& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::CopyFrom(const Project_Library_AST_Function_Graph_Node_Properties_Get& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Properties_Get::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Properties_Get::Swap(Project_Library_AST_Function_Graph_Node_Properties_Get* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Properties_Get::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Properties_Get_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Properties_Get_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Request::kPropertiesFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Properties_Set_Request::Project_Library_AST_Function_Graph_Node_Properties_Set_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::InitAsDefaultInstance() {
  properties_ = const_cast< ::generated::proto::attributes::Properties*>(&::generated::proto::attributes::Properties::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Properties_Set_Request::Project_Library_AST_Function_Graph_Node_Properties_Set_Request(const Project_Library_AST_Function_Graph_Node_Properties_Set_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::SharedCtor() {
  _cached_size_ = 0;
  properties_ = NULL;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Properties_Set_Request::~Project_Library_AST_Function_Graph_Node_Properties_Set_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::SharedDtor() {
  if (this != default_instance_) {
    delete properties_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Set_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Properties_Set_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Properties_Set_Request& Project_Library_AST_Function_Graph_Node_Properties_Set_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Properties_Set_Request* Project_Library_AST_Function_Graph_Node_Properties_Set_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Properties_Set_Request* Project_Library_AST_Function_Graph_Node_Properties_Set_Request::New() const {
  return new Project_Library_AST_Function_Graph_Node_Properties_Set_Request;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_properties()) {
      if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
    }
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Properties_Set_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.attributes.Properties properties = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Properties_Set_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->properties(), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Properties_Set_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.attributes.Properties properties = 1;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Properties_Set_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Properties_Set_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::MergeFrom(const Project_Library_AST_Function_Graph_Node_Properties_Set_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_properties()) {
      mutable_properties()->::generated::proto::attributes::Properties::MergeFrom(from.properties());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::CopyFrom(const Project_Library_AST_Function_Graph_Node_Properties_Set_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Properties_Set_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Request::Swap(Project_Library_AST_Function_Graph_Node_Properties_Set_Request* other) {
  if (other != this) {
    std::swap(properties_, other->properties_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Properties_Set_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Properties_Set_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Properties_Set_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Update::kPropertiesFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Update::kNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Node_Properties_Set_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Properties_Set_Update::Project_Library_AST_Function_Graph_Node_Properties_Set_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::InitAsDefaultInstance() {
  properties_ = const_cast< ::generated::proto::attributes::Properties*>(&::generated::proto::attributes::Properties::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Node_Properties_Set_Update::Project_Library_AST_Function_Graph_Node_Properties_Set_Update(const Project_Library_AST_Function_Graph_Node_Properties_Set_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::SharedCtor() {
  _cached_size_ = 0;
  properties_ = NULL;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Properties_Set_Update::~Project_Library_AST_Function_Graph_Node_Properties_Set_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::SharedDtor() {
  if (this != default_instance_) {
    delete properties_;
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Set_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Properties_Set_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Properties_Set_Update& Project_Library_AST_Function_Graph_Node_Properties_Set_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Properties_Set_Update* Project_Library_AST_Function_Graph_Node_Properties_Set_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Properties_Set_Update* Project_Library_AST_Function_Graph_Node_Properties_Set_Update::New() const {
  return new Project_Library_AST_Function_Graph_Node_Properties_Set_Update;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_properties()) {
      if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
    }
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Properties_Set_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.attributes.Properties properties = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Properties_Set_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->properties(), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Properties_Set_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.attributes.Properties properties = 1;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Properties_Set_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Properties_Set_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::MergeFrom(const Project_Library_AST_Function_Graph_Node_Properties_Set_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_properties()) {
      mutable_properties()->::generated::proto::attributes::Properties::MergeFrom(from.properties());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::CopyFrom(const Project_Library_AST_Function_Graph_Node_Properties_Set_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Properties_Set_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001f) != 0x0000001f) return false;

  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set_Update::Swap(Project_Library_AST_Function_Graph_Node_Properties_Set_Update* other) {
  if (other != this) {
    std::swap(properties_, other->properties_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Properties_Set_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Properties_Set_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Properties_Set_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Properties_Set::Project_Library_AST_Function_Graph_Node_Properties_Set()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Properties_Set::Project_Library_AST_Function_Graph_Node_Properties_Set(const Project_Library_AST_Function_Graph_Node_Properties_Set& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Properties_Set::~Project_Library_AST_Function_Graph_Node_Properties_Set() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties_Set::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Properties_Set_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Properties_Set& Project_Library_AST_Function_Graph_Node_Properties_Set::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Properties_Set* Project_Library_AST_Function_Graph_Node_Properties_Set::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Properties_Set* Project_Library_AST_Function_Graph_Node_Properties_Set::New() const {
  return new Project_Library_AST_Function_Graph_Node_Properties_Set;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Properties_Set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Properties_Set::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Properties_Set::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Properties_Set* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Properties_Set*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::MergeFrom(const Project_Library_AST_Function_Graph_Node_Properties_Set& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::CopyFrom(const Project_Library_AST_Function_Graph_Node_Properties_Set& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Properties_Set::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Properties_Set::Swap(Project_Library_AST_Function_Graph_Node_Properties_Set* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Properties_Set::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Properties_Set_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Properties_Set_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node_Properties::Project_Library_AST_Function_Graph_Node_Properties()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node_Properties::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node_Properties::Project_Library_AST_Function_Graph_Node_Properties(const Project_Library_AST_Function_Graph_Node_Properties& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node_Properties::~Project_Library_AST_Function_Graph_Node_Properties() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node_Properties::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node_Properties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node_Properties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_Properties_descriptor_;
}

const Project_Library_AST_Function_Graph_Node_Properties& Project_Library_AST_Function_Graph_Node_Properties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node_Properties* Project_Library_AST_Function_Graph_Node_Properties::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node_Properties* Project_Library_AST_Function_Graph_Node_Properties::New() const {
  return new Project_Library_AST_Function_Graph_Node_Properties;
}

void Project_Library_AST_Function_Graph_Node_Properties::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node_Properties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node_Properties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node_Properties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node_Properties::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node_Properties::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node_Properties* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node_Properties*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node_Properties::MergeFrom(const Project_Library_AST_Function_Graph_Node_Properties& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node_Properties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node_Properties::CopyFrom(const Project_Library_AST_Function_Graph_Node_Properties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node_Properties::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node_Properties::Swap(Project_Library_AST_Function_Graph_Node_Properties* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node_Properties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_Properties_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_Properties_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Node::Project_Library_AST_Function_Graph_Node()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Node::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Node::Project_Library_AST_Function_Graph_Node(const Project_Library_AST_Function_Graph_Node& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Node::~Project_Library_AST_Function_Graph_Node() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Node::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Node::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Node::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Node_descriptor_;
}

const Project_Library_AST_Function_Graph_Node& Project_Library_AST_Function_Graph_Node::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Node* Project_Library_AST_Function_Graph_Node::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Node* Project_Library_AST_Function_Graph_Node::New() const {
  return new Project_Library_AST_Function_Graph_Node;
}

void Project_Library_AST_Function_Graph_Node::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Node::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Node::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Node::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Node::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Node::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Node* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Node*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Node::MergeFrom(const Project_Library_AST_Function_Graph_Node& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Node::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Node::CopyFrom(const Project_Library_AST_Function_Graph_Node& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Node::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Node::Swap(Project_Library_AST_Function_Graph_Node* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Node::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Node_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Node_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Connect_Request::kSrcNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Request::kSrcPortFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Request::kDstNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Request::kDstPortFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Connect_Request::Project_Library_AST_Function_Graph_Connect_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Connect_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Connect_Request::Project_Library_AST_Function_Graph_Connect_Request(const Project_Library_AST_Function_Graph_Connect_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Connect_Request::SharedCtor() {
  _cached_size_ = 0;
  srcnodeid_ = 0;
  dstnodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Connect_Request::~Project_Library_AST_Function_Graph_Connect_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Connect_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Connect_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Connect_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Connect_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Connect_Request& Project_Library_AST_Function_Graph_Connect_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Connect_Request* Project_Library_AST_Function_Graph_Connect_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Connect_Request* Project_Library_AST_Function_Graph_Connect_Request::New() const {
  return new Project_Library_AST_Function_Graph_Connect_Request;
}

void Project_Library_AST_Function_Graph_Connect_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    srcnodeid_ = 0;
    dstnodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  srcport_.Clear();
  dstport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Connect_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 srcNodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcnodeid_)));
          set_has_srcnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        break;
      }

      // repeated int32 srcPort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_srcPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_srcport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_srcport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        if (input->ExpectTag(24)) goto parse_dstNodeID;
        break;
      }

      // required int32 dstNodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dstnodeid_)));
          set_has_dstnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        break;
      }

      // repeated int32 dstPort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_dstport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dstport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        if (input->ExpectTag(42)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Connect_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->srcnodeid(), output);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->srcport(i), output);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dstnodeid(), output);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->dstport(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bc(), output);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->libraryid(), output);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Connect_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->srcnodeid(), target);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->srcport(i), target);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dstnodeid(), target);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->dstport(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bc(), target);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->libraryid(), target);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Connect_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 srcNodeID = 1;
    if (has_srcnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcnodeid());
    }

    // required int32 dstNodeID = 3;
    if (has_dstnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dstnodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 5;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 6;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 7;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 srcPort = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->srcport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->srcport(i));
    }
    total_size += 1 * this->srcport_size() + data_size;
  }

  // repeated int32 dstPort = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->dstport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dstport(i));
    }
    total_size += 1 * this->dstport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Connect_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Connect_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Connect_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Connect_Request::MergeFrom(const Project_Library_AST_Function_Graph_Connect_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  srcport_.MergeFrom(from.srcport_);
  dstport_.MergeFrom(from.dstport_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcnodeid()) {
      set_srcnodeid(from.srcnodeid());
    }
    if (from.has_dstnodeid()) {
      set_dstnodeid(from.dstnodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Connect_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Connect_Request::CopyFrom(const Project_Library_AST_Function_Graph_Connect_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Connect_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000075) != 0x00000075) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Connect_Request::Swap(Project_Library_AST_Function_Graph_Connect_Request* other) {
  if (other != this) {
    std::swap(srcnodeid_, other->srcnodeid_);
    srcport_.Swap(&other->srcport_);
    std::swap(dstnodeid_, other->dstnodeid_);
    dstport_.Swap(&other->dstport_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Connect_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Connect_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Connect_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Connect_Update::kSrcNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Update::kSrcPortFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Update::kDstNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Update::kDstPortFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Connect_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Connect_Update::Project_Library_AST_Function_Graph_Connect_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Connect_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Connect_Update::Project_Library_AST_Function_Graph_Connect_Update(const Project_Library_AST_Function_Graph_Connect_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Connect_Update::SharedCtor() {
  _cached_size_ = 0;
  srcnodeid_ = 0;
  dstnodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Connect_Update::~Project_Library_AST_Function_Graph_Connect_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Connect_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Connect_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Connect_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Connect_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Connect_Update& Project_Library_AST_Function_Graph_Connect_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Connect_Update* Project_Library_AST_Function_Graph_Connect_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Connect_Update* Project_Library_AST_Function_Graph_Connect_Update::New() const {
  return new Project_Library_AST_Function_Graph_Connect_Update;
}

void Project_Library_AST_Function_Graph_Connect_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    srcnodeid_ = 0;
    dstnodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  srcport_.Clear();
  dstport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Connect_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 srcNodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcnodeid_)));
          set_has_srcnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        break;
      }

      // repeated int32 srcPort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_srcPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_srcport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_srcport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        if (input->ExpectTag(24)) goto parse_dstNodeID;
        break;
      }

      // required int32 dstNodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dstnodeid_)));
          set_has_dstnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        break;
      }

      // repeated int32 dstPort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_dstport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dstport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        if (input->ExpectTag(42)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Connect_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->srcnodeid(), output);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->srcport(i), output);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dstnodeid(), output);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->dstport(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bc(), output);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->libraryid(), output);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Connect_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->srcnodeid(), target);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->srcport(i), target);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dstnodeid(), target);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->dstport(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bc(), target);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->libraryid(), target);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Connect_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 srcNodeID = 1;
    if (has_srcnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcnodeid());
    }

    // required int32 dstNodeID = 3;
    if (has_dstnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dstnodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 5;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 6;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 7;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 srcPort = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->srcport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->srcport(i));
    }
    total_size += 1 * this->srcport_size() + data_size;
  }

  // repeated int32 dstPort = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->dstport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dstport(i));
    }
    total_size += 1 * this->dstport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Connect_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Connect_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Connect_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Connect_Update::MergeFrom(const Project_Library_AST_Function_Graph_Connect_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  srcport_.MergeFrom(from.srcport_);
  dstport_.MergeFrom(from.dstport_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcnodeid()) {
      set_srcnodeid(from.srcnodeid());
    }
    if (from.has_dstnodeid()) {
      set_dstnodeid(from.dstnodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Connect_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Connect_Update::CopyFrom(const Project_Library_AST_Function_Graph_Connect_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Connect_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000075) != 0x00000075) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Connect_Update::Swap(Project_Library_AST_Function_Graph_Connect_Update* other) {
  if (other != this) {
    std::swap(srcnodeid_, other->srcnodeid_);
    srcport_.Swap(&other->srcport_);
    std::swap(dstnodeid_, other->dstnodeid_);
    dstport_.Swap(&other->dstport_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Connect_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Connect_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Connect_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Connect::Project_Library_AST_Function_Graph_Connect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Connect::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Connect::Project_Library_AST_Function_Graph_Connect(const Project_Library_AST_Function_Graph_Connect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Connect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Connect::~Project_Library_AST_Function_Graph_Connect() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Connect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Connect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Connect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Connect_descriptor_;
}

const Project_Library_AST_Function_Graph_Connect& Project_Library_AST_Function_Graph_Connect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Connect* Project_Library_AST_Function_Graph_Connect::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Connect* Project_Library_AST_Function_Graph_Connect::New() const {
  return new Project_Library_AST_Function_Graph_Connect;
}

void Project_Library_AST_Function_Graph_Connect::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Connect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Connect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Connect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Connect::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Connect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Connect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Connect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Connect::MergeFrom(const Project_Library_AST_Function_Graph_Connect& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Connect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Connect::CopyFrom(const Project_Library_AST_Function_Graph_Connect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Connect::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Connect::Swap(Project_Library_AST_Function_Graph_Connect* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Connect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Connect_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Connect_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Disconnect_Request::kSrcNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Request::kSrcPortFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Request::kDstNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Request::kDstPortFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Request::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Disconnect_Request::Project_Library_AST_Function_Graph_Disconnect_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Disconnect_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Disconnect_Request::Project_Library_AST_Function_Graph_Disconnect_Request(const Project_Library_AST_Function_Graph_Disconnect_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Disconnect_Request::SharedCtor() {
  _cached_size_ = 0;
  srcnodeid_ = 0;
  dstnodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Disconnect_Request::~Project_Library_AST_Function_Graph_Disconnect_Request() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Disconnect_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Disconnect_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Disconnect_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Disconnect_Request_descriptor_;
}

const Project_Library_AST_Function_Graph_Disconnect_Request& Project_Library_AST_Function_Graph_Disconnect_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Disconnect_Request* Project_Library_AST_Function_Graph_Disconnect_Request::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Disconnect_Request* Project_Library_AST_Function_Graph_Disconnect_Request::New() const {
  return new Project_Library_AST_Function_Graph_Disconnect_Request;
}

void Project_Library_AST_Function_Graph_Disconnect_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    srcnodeid_ = 0;
    dstnodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  srcport_.Clear();
  dstport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Disconnect_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 srcNodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcnodeid_)));
          set_has_srcnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        break;
      }

      // repeated int32 srcPort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_srcPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_srcport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_srcport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        if (input->ExpectTag(24)) goto parse_dstNodeID;
        break;
      }

      // required int32 dstNodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dstnodeid_)));
          set_has_dstnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        break;
      }

      // repeated int32 dstPort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_dstport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dstport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        if (input->ExpectTag(42)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Disconnect_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->srcnodeid(), output);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->srcport(i), output);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dstnodeid(), output);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->dstport(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bc(), output);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->libraryid(), output);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Disconnect_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->srcnodeid(), target);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->srcport(i), target);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dstnodeid(), target);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->dstport(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bc(), target);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->libraryid(), target);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Disconnect_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 srcNodeID = 1;
    if (has_srcnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcnodeid());
    }

    // required int32 dstNodeID = 3;
    if (has_dstnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dstnodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 5;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 6;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 7;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 srcPort = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->srcport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->srcport(i));
    }
    total_size += 1 * this->srcport_size() + data_size;
  }

  // repeated int32 dstPort = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->dstport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dstport(i));
    }
    total_size += 1 * this->dstport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Disconnect_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Disconnect_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Disconnect_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Disconnect_Request::MergeFrom(const Project_Library_AST_Function_Graph_Disconnect_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  srcport_.MergeFrom(from.srcport_);
  dstport_.MergeFrom(from.dstport_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcnodeid()) {
      set_srcnodeid(from.srcnodeid());
    }
    if (from.has_dstnodeid()) {
      set_dstnodeid(from.dstnodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Disconnect_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Disconnect_Request::CopyFrom(const Project_Library_AST_Function_Graph_Disconnect_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Disconnect_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000075) != 0x00000075) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Disconnect_Request::Swap(Project_Library_AST_Function_Graph_Disconnect_Request* other) {
  if (other != this) {
    std::swap(srcnodeid_, other->srcnodeid_);
    srcport_.Swap(&other->srcport_);
    std::swap(dstnodeid_, other->dstnodeid_);
    dstport_.Swap(&other->dstport_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Disconnect_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Disconnect_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Disconnect_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Function_Graph_Disconnect_Update::kSrcNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Update::kSrcPortFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Update::kDstNodeIDFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Update::kDstPortFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Update::kBcFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Function_Graph_Disconnect_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Disconnect_Update::Project_Library_AST_Function_Graph_Disconnect_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Disconnect_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Function_Graph_Disconnect_Update::Project_Library_AST_Function_Graph_Disconnect_Update(const Project_Library_AST_Function_Graph_Disconnect_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Disconnect_Update::SharedCtor() {
  _cached_size_ = 0;
  srcnodeid_ = 0;
  dstnodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Disconnect_Update::~Project_Library_AST_Function_Graph_Disconnect_Update() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Disconnect_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Function_Graph_Disconnect_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Disconnect_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Disconnect_Update_descriptor_;
}

const Project_Library_AST_Function_Graph_Disconnect_Update& Project_Library_AST_Function_Graph_Disconnect_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Disconnect_Update* Project_Library_AST_Function_Graph_Disconnect_Update::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Disconnect_Update* Project_Library_AST_Function_Graph_Disconnect_Update::New() const {
  return new Project_Library_AST_Function_Graph_Disconnect_Update;
}

void Project_Library_AST_Function_Graph_Disconnect_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    srcnodeid_ = 0;
    dstnodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  srcport_.Clear();
  dstport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Disconnect_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 srcNodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcnodeid_)));
          set_has_srcnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        break;
      }

      // repeated int32 srcPort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_srcPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_srcport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_srcport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        if (input->ExpectTag(24)) goto parse_dstNodeID;
        break;
      }

      // required int32 dstNodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dstnodeid_)));
          set_has_dstnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        break;
      }

      // repeated int32 dstPort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_dstport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dstport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        if (input->ExpectTag(42)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Disconnect_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->srcnodeid(), output);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->srcport(i), output);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dstnodeid(), output);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->dstport(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bc(), output);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->libraryid(), output);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Disconnect_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->srcnodeid(), target);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->srcport(i), target);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dstnodeid(), target);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->dstport(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bc(), target);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->libraryid(), target);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Disconnect_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 srcNodeID = 1;
    if (has_srcnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcnodeid());
    }

    // required int32 dstNodeID = 3;
    if (has_dstnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dstnodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 5;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 6;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 7;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 srcPort = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->srcport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->srcport(i));
    }
    total_size += 1 * this->srcport_size() + data_size;
  }

  // repeated int32 dstPort = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->dstport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dstport(i));
    }
    total_size += 1 * this->dstport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Disconnect_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Disconnect_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Disconnect_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Disconnect_Update::MergeFrom(const Project_Library_AST_Function_Graph_Disconnect_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  srcport_.MergeFrom(from.srcport_);
  dstport_.MergeFrom(from.dstport_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcnodeid()) {
      set_srcnodeid(from.srcnodeid());
    }
    if (from.has_dstnodeid()) {
      set_dstnodeid(from.dstnodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Disconnect_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Disconnect_Update::CopyFrom(const Project_Library_AST_Function_Graph_Disconnect_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Disconnect_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000075) != 0x00000075) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Function_Graph_Disconnect_Update::Swap(Project_Library_AST_Function_Graph_Disconnect_Update* other) {
  if (other != this) {
    std::swap(srcnodeid_, other->srcnodeid_);
    srcport_.Swap(&other->srcport_);
    std::swap(dstnodeid_, other->dstnodeid_);
    dstport_.Swap(&other->dstport_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Disconnect_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Disconnect_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Disconnect_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph_Disconnect::Project_Library_AST_Function_Graph_Disconnect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph_Disconnect::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph_Disconnect::Project_Library_AST_Function_Graph_Disconnect(const Project_Library_AST_Function_Graph_Disconnect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Disconnect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph_Disconnect::~Project_Library_AST_Function_Graph_Disconnect() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph_Disconnect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph_Disconnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph_Disconnect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_Disconnect_descriptor_;
}

const Project_Library_AST_Function_Graph_Disconnect& Project_Library_AST_Function_Graph_Disconnect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph_Disconnect* Project_Library_AST_Function_Graph_Disconnect::default_instance_ = NULL;

Project_Library_AST_Function_Graph_Disconnect* Project_Library_AST_Function_Graph_Disconnect::New() const {
  return new Project_Library_AST_Function_Graph_Disconnect;
}

void Project_Library_AST_Function_Graph_Disconnect::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph_Disconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph_Disconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph_Disconnect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph_Disconnect::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph_Disconnect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph_Disconnect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph_Disconnect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph_Disconnect::MergeFrom(const Project_Library_AST_Function_Graph_Disconnect& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph_Disconnect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph_Disconnect::CopyFrom(const Project_Library_AST_Function_Graph_Disconnect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph_Disconnect::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph_Disconnect::Swap(Project_Library_AST_Function_Graph_Disconnect* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph_Disconnect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_Disconnect_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_Disconnect_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function_Graph::Project_Library_AST_Function_Graph()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function_Graph::InitAsDefaultInstance() {
}

Project_Library_AST_Function_Graph::Project_Library_AST_Function_Graph(const Project_Library_AST_Function_Graph& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function_Graph::~Project_Library_AST_Function_Graph() {
  SharedDtor();
}

void Project_Library_AST_Function_Graph::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function_Graph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function_Graph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_Graph_descriptor_;
}

const Project_Library_AST_Function_Graph& Project_Library_AST_Function_Graph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function_Graph* Project_Library_AST_Function_Graph::default_instance_ = NULL;

Project_Library_AST_Function_Graph* Project_Library_AST_Function_Graph::New() const {
  return new Project_Library_AST_Function_Graph;
}

void Project_Library_AST_Function_Graph::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function_Graph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function_Graph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function_Graph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function_Graph::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function_Graph::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function_Graph* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function_Graph*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function_Graph::MergeFrom(const Project_Library_AST_Function_Graph& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function_Graph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function_Graph::CopyFrom(const Project_Library_AST_Function_Graph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function_Graph::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function_Graph::Swap(Project_Library_AST_Function_Graph* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function_Graph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_Graph_descriptor_;
  metadata.reflection = Project_Library_AST_Function_Graph_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Function::Project_Library_AST_Function()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Function::InitAsDefaultInstance() {
}

Project_Library_AST_Function::Project_Library_AST_Function(const Project_Library_AST_Function& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Function::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Function::~Project_Library_AST_Function() {
  SharedDtor();
}

void Project_Library_AST_Function::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Function::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Function::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Function_descriptor_;
}

const Project_Library_AST_Function& Project_Library_AST_Function::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Function* Project_Library_AST_Function::default_instance_ = NULL;

Project_Library_AST_Function* Project_Library_AST_Function::New() const {
  return new Project_Library_AST_Function;
}

void Project_Library_AST_Function::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Function::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Function::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Function::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Function::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Function::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Function* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Function*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Function::MergeFrom(const Project_Library_AST_Function& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Function::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Function::CopyFrom(const Project_Library_AST_Function& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Function::IsInitialized() const {

  return true;
}

void Project_Library_AST_Function::Swap(Project_Library_AST_Function* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Function::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Function_descriptor_;
  metadata.reflection = Project_Library_AST_Function_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Remove_Request::kBcFieldNumber;
const int Project_Library_AST_Remove_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Remove_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Remove_Request::Project_Library_AST_Remove_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Remove_Request::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Remove_Request::Project_Library_AST_Remove_Request(const Project_Library_AST_Remove_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Remove_Request::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Remove_Request::~Project_Library_AST_Remove_Request() {
  SharedDtor();
}

void Project_Library_AST_Remove_Request::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Remove_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Remove_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Remove_Request_descriptor_;
}

const Project_Library_AST_Remove_Request& Project_Library_AST_Remove_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Remove_Request* Project_Library_AST_Remove_Request::default_instance_ = NULL;

Project_Library_AST_Remove_Request* Project_Library_AST_Remove_Request::New() const {
  return new Project_Library_AST_Remove_Request;
}

void Project_Library_AST_Remove_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Remove_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.crumb.Breadcrumbs bc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Remove_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bc(), output);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->libraryid(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Remove_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bc(), target);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->libraryid(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Remove_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 1;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 2;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Remove_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Remove_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Remove_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Remove_Request::MergeFrom(const Project_Library_AST_Remove_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Remove_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Remove_Request::CopyFrom(const Project_Library_AST_Remove_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Remove_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Remove_Request::Swap(Project_Library_AST_Remove_Request* other) {
  if (other != this) {
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Remove_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Remove_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Remove_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Remove_Update::kBcFieldNumber;
const int Project_Library_AST_Remove_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Remove_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Remove_Update::Project_Library_AST_Remove_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Remove_Update::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Remove_Update::Project_Library_AST_Remove_Update(const Project_Library_AST_Remove_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Remove_Update::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Remove_Update::~Project_Library_AST_Remove_Update() {
  SharedDtor();
}

void Project_Library_AST_Remove_Update::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Project_Library_AST_Remove_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Remove_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Remove_Update_descriptor_;
}

const Project_Library_AST_Remove_Update& Project_Library_AST_Remove_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Remove_Update* Project_Library_AST_Remove_Update::default_instance_ = NULL;

Project_Library_AST_Remove_Update* Project_Library_AST_Remove_Update::New() const {
  return new Project_Library_AST_Remove_Update;
}

void Project_Library_AST_Remove_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Remove_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.crumb.Breadcrumbs bc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Remove_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bc(), output);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->libraryid(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Remove_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bc(), target);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->libraryid(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Remove_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 1;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 2;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Remove_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Remove_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Remove_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Remove_Update::MergeFrom(const Project_Library_AST_Remove_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Remove_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Remove_Update::CopyFrom(const Project_Library_AST_Remove_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Remove_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Remove_Update::Swap(Project_Library_AST_Remove_Update* other) {
  if (other != this) {
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Remove_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Remove_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Remove_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Remove::Project_Library_AST_Remove()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Remove::InitAsDefaultInstance() {
}

Project_Library_AST_Remove::Project_Library_AST_Remove(const Project_Library_AST_Remove& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Remove::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Remove::~Project_Library_AST_Remove() {
  SharedDtor();
}

void Project_Library_AST_Remove::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Remove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Remove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Remove_descriptor_;
}

const Project_Library_AST_Remove& Project_Library_AST_Remove::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Remove* Project_Library_AST_Remove::default_instance_ = NULL;

Project_Library_AST_Remove* Project_Library_AST_Remove::New() const {
  return new Project_Library_AST_Remove;
}

void Project_Library_AST_Remove::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Remove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Remove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Remove::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Remove::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Remove::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Remove* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Remove*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Remove::MergeFrom(const Project_Library_AST_Remove& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Remove::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Remove::CopyFrom(const Project_Library_AST_Remove& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Remove::IsInitialized() const {

  return true;
}

void Project_Library_AST_Remove::Swap(Project_Library_AST_Remove* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Remove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Remove_descriptor_;
  metadata.reflection = Project_Library_AST_Remove_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Resolve_Request::kNameFieldNumber;
const int Project_Library_AST_Resolve_Request::kParentbcFieldNumber;
const int Project_Library_AST_Resolve_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Resolve_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Resolve_Request::Project_Library_AST_Resolve_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Resolve_Request::InitAsDefaultInstance() {
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Resolve_Request::Project_Library_AST_Resolve_Request(const Project_Library_AST_Resolve_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Resolve_Request::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Resolve_Request::~Project_Library_AST_Resolve_Request() {
  SharedDtor();
}

void Project_Library_AST_Resolve_Request::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete parentbc_;
  }
}

void Project_Library_AST_Resolve_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Resolve_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Resolve_Request_descriptor_;
}

const Project_Library_AST_Resolve_Request& Project_Library_AST_Resolve_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Resolve_Request* Project_Library_AST_Resolve_Request::default_instance_ = NULL;

Project_Library_AST_Resolve_Request* Project_Library_AST_Resolve_Request::New() const {
  return new Project_Library_AST_Resolve_Request;
}

void Project_Library_AST_Resolve_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Resolve_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Resolve_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Resolve_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Resolve_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Resolve_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Resolve_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Resolve_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Resolve_Request::MergeFrom(const Project_Library_AST_Resolve_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Resolve_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Resolve_Request::CopyFrom(const Project_Library_AST_Resolve_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Resolve_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Resolve_Request::Swap(Project_Library_AST_Resolve_Request* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Resolve_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Resolve_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Resolve_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Resolve_Status::kAstptrFieldNumber;
const int Project_Library_AST_Resolve_Status::kParentbcFieldNumber;
const int Project_Library_AST_Resolve_Status::kLibraryIDFieldNumber;
const int Project_Library_AST_Resolve_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Resolve_Status::Project_Library_AST_Resolve_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Resolve_Status::InitAsDefaultInstance() {
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Project_Library_AST_Resolve_Status::Project_Library_AST_Resolve_Status(const Project_Library_AST_Resolve_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Resolve_Status::SharedCtor() {
  _cached_size_ = 0;
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Resolve_Status::~Project_Library_AST_Resolve_Status() {
  SharedDtor();
}

void Project_Library_AST_Resolve_Status::SharedDtor() {
  if (this != default_instance_) {
    delete parentbc_;
  }
}

void Project_Library_AST_Resolve_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Resolve_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Resolve_Status_descriptor_;
}

const Project_Library_AST_Resolve_Status& Project_Library_AST_Resolve_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Resolve_Status* Project_Library_AST_Resolve_Status::default_instance_ = NULL;

Project_Library_AST_Resolve_Status* Project_Library_AST_Resolve_Status::New() const {
  return new Project_Library_AST_Resolve_Status;
}

void Project_Library_AST_Resolve_Status::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  astptr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Resolve_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.crumb.ASTPtr astptr = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_astptr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_astptr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_astptr;
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Resolve_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.crumb.ASTPtr astptr = 1;
  for (int i = 0; i < this->astptr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->astptr(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Resolve_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.crumb.ASTPtr astptr = 1;
  for (int i = 0; i < this->astptr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->astptr(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Resolve_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.crumb.ASTPtr astptr = 1;
  total_size += 1 * this->astptr_size();
  for (int i = 0; i < this->astptr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->astptr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Resolve_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Resolve_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Resolve_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Resolve_Status::MergeFrom(const Project_Library_AST_Resolve_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  astptr_.MergeFrom(from.astptr_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Resolve_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Resolve_Status::CopyFrom(const Project_Library_AST_Resolve_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Resolve_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < astptr_size(); i++) {
    if (!this->astptr(i).IsInitialized()) return false;
  }
  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Resolve_Status::Swap(Project_Library_AST_Resolve_Status* other) {
  if (other != this) {
    astptr_.Swap(&other->astptr_);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Resolve_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Resolve_Status_descriptor_;
  metadata.reflection = Project_Library_AST_Resolve_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Resolve::Project_Library_AST_Resolve()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Resolve::InitAsDefaultInstance() {
}

Project_Library_AST_Resolve::Project_Library_AST_Resolve(const Project_Library_AST_Resolve& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Resolve::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Resolve::~Project_Library_AST_Resolve() {
  SharedDtor();
}

void Project_Library_AST_Resolve::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Resolve::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Resolve::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Resolve_descriptor_;
}

const Project_Library_AST_Resolve& Project_Library_AST_Resolve::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Resolve* Project_Library_AST_Resolve::default_instance_ = NULL;

Project_Library_AST_Resolve* Project_Library_AST_Resolve::New() const {
  return new Project_Library_AST_Resolve;
}

void Project_Library_AST_Resolve::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Resolve::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Resolve::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Resolve::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Resolve::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Resolve::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Resolve* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Resolve*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Resolve::MergeFrom(const Project_Library_AST_Resolve& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Resolve::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Resolve::CopyFrom(const Project_Library_AST_Resolve& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Resolve::IsInitialized() const {

  return true;
}

void Project_Library_AST_Resolve::Swap(Project_Library_AST_Resolve* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Resolve::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Resolve_descriptor_;
  metadata.reflection = Project_Library_AST_Resolve_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Properties_Get_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Properties_Get_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Properties_Get_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Properties_Get_Request::Project_Library_AST_Properties_Get_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Properties_Get_Request::InitAsDefaultInstance() {
}

Project_Library_AST_Properties_Get_Request::Project_Library_AST_Properties_Get_Request(const Project_Library_AST_Properties_Get_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Get_Request::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Properties_Get_Request::~Project_Library_AST_Properties_Get_Request() {
  SharedDtor();
}

void Project_Library_AST_Properties_Get_Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Properties_Get_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Get_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Properties_Get_Request_descriptor_;
}

const Project_Library_AST_Properties_Get_Request& Project_Library_AST_Properties_Get_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Properties_Get_Request* Project_Library_AST_Properties_Get_Request::default_instance_ = NULL;

Project_Library_AST_Properties_Get_Request* Project_Library_AST_Properties_Get_Request::New() const {
  return new Project_Library_AST_Properties_Get_Request;
}

void Project_Library_AST_Properties_Get_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Properties_Get_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Properties_Get_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->libraryid(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Properties_Get_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->libraryid(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Properties_Get_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required int32 libraryID = 2;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Properties_Get_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Properties_Get_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Properties_Get_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Properties_Get_Request::MergeFrom(const Project_Library_AST_Properties_Get_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Properties_Get_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Get_Request::CopyFrom(const Project_Library_AST_Properties_Get_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Properties_Get_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Project_Library_AST_Properties_Get_Request::Swap(Project_Library_AST_Properties_Get_Request* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Properties_Get_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Properties_Get_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Properties_Get_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Properties_Get_Status::kPropertiesFieldNumber;
const int Project_Library_AST_Properties_Get_Status::kNodeIDFieldNumber;
const int Project_Library_AST_Properties_Get_Status::kLibraryIDFieldNumber;
const int Project_Library_AST_Properties_Get_Status::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Properties_Get_Status::Project_Library_AST_Properties_Get_Status()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Properties_Get_Status::InitAsDefaultInstance() {
  properties_ = const_cast< ::generated::proto::attributes::Properties*>(&::generated::proto::attributes::Properties::default_instance());
}

Project_Library_AST_Properties_Get_Status::Project_Library_AST_Properties_Get_Status(const Project_Library_AST_Properties_Get_Status& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Get_Status::SharedCtor() {
  _cached_size_ = 0;
  properties_ = NULL;
  nodeid_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Properties_Get_Status::~Project_Library_AST_Properties_Get_Status() {
  SharedDtor();
}

void Project_Library_AST_Properties_Get_Status::SharedDtor() {
  if (this != default_instance_) {
    delete properties_;
  }
}

void Project_Library_AST_Properties_Get_Status::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Get_Status::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Properties_Get_Status_descriptor_;
}

const Project_Library_AST_Properties_Get_Status& Project_Library_AST_Properties_Get_Status::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Properties_Get_Status* Project_Library_AST_Properties_Get_Status::default_instance_ = NULL;

Project_Library_AST_Properties_Get_Status* Project_Library_AST_Properties_Get_Status::New() const {
  return new Project_Library_AST_Properties_Get_Status;
}

void Project_Library_AST_Properties_Get_Status::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_properties()) {
      if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
    }
    nodeid_ = 0;
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Properties_Get_Status::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.attributes.Properties properties = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Properties_Get_Status::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Properties_Get_Status::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->properties(), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Properties_Get_Status::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.attributes.Properties properties = 1;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Properties_Get_Status::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Properties_Get_Status* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Properties_Get_Status*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Properties_Get_Status::MergeFrom(const Project_Library_AST_Properties_Get_Status& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_properties()) {
      mutable_properties()->::generated::proto::attributes::Properties::MergeFrom(from.properties());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Properties_Get_Status::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Get_Status::CopyFrom(const Project_Library_AST_Properties_Get_Status& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Properties_Get_Status::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Properties_Get_Status::Swap(Project_Library_AST_Properties_Get_Status* other) {
  if (other != this) {
    std::swap(properties_, other->properties_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Properties_Get_Status::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Properties_Get_Status_descriptor_;
  metadata.reflection = Project_Library_AST_Properties_Get_Status_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Properties_Get::Project_Library_AST_Properties_Get()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Properties_Get::InitAsDefaultInstance() {
}

Project_Library_AST_Properties_Get::Project_Library_AST_Properties_Get(const Project_Library_AST_Properties_Get& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Get::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Properties_Get::~Project_Library_AST_Properties_Get() {
  SharedDtor();
}

void Project_Library_AST_Properties_Get::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Properties_Get::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Get::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Properties_Get_descriptor_;
}

const Project_Library_AST_Properties_Get& Project_Library_AST_Properties_Get::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Properties_Get* Project_Library_AST_Properties_Get::default_instance_ = NULL;

Project_Library_AST_Properties_Get* Project_Library_AST_Properties_Get::New() const {
  return new Project_Library_AST_Properties_Get;
}

void Project_Library_AST_Properties_Get::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Properties_Get::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Properties_Get::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Properties_Get::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Properties_Get::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Properties_Get::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Properties_Get* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Properties_Get*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Properties_Get::MergeFrom(const Project_Library_AST_Properties_Get& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Properties_Get::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Get::CopyFrom(const Project_Library_AST_Properties_Get& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Properties_Get::IsInitialized() const {

  return true;
}

void Project_Library_AST_Properties_Get::Swap(Project_Library_AST_Properties_Get* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Properties_Get::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Properties_Get_descriptor_;
  metadata.reflection = Project_Library_AST_Properties_Get_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Properties_Set_Request::kPropertiesFieldNumber;
const int Project_Library_AST_Properties_Set_Request::kNodeIDFieldNumber;
const int Project_Library_AST_Properties_Set_Request::kLibraryIDFieldNumber;
const int Project_Library_AST_Properties_Set_Request::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Properties_Set_Request::Project_Library_AST_Properties_Set_Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Properties_Set_Request::InitAsDefaultInstance() {
  properties_ = const_cast< ::generated::proto::attributes::Properties*>(&::generated::proto::attributes::Properties::default_instance());
}

Project_Library_AST_Properties_Set_Request::Project_Library_AST_Properties_Set_Request(const Project_Library_AST_Properties_Set_Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Set_Request::SharedCtor() {
  _cached_size_ = 0;
  properties_ = NULL;
  nodeid_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Properties_Set_Request::~Project_Library_AST_Properties_Set_Request() {
  SharedDtor();
}

void Project_Library_AST_Properties_Set_Request::SharedDtor() {
  if (this != default_instance_) {
    delete properties_;
  }
}

void Project_Library_AST_Properties_Set_Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Set_Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Properties_Set_Request_descriptor_;
}

const Project_Library_AST_Properties_Set_Request& Project_Library_AST_Properties_Set_Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Properties_Set_Request* Project_Library_AST_Properties_Set_Request::default_instance_ = NULL;

Project_Library_AST_Properties_Set_Request* Project_Library_AST_Properties_Set_Request::New() const {
  return new Project_Library_AST_Properties_Set_Request;
}

void Project_Library_AST_Properties_Set_Request::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_properties()) {
      if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
    }
    nodeid_ = 0;
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Properties_Set_Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.attributes.Properties properties = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Properties_Set_Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Properties_Set_Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->properties(), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Properties_Set_Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.attributes.Properties properties = 1;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Properties_Set_Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Properties_Set_Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Properties_Set_Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Properties_Set_Request::MergeFrom(const Project_Library_AST_Properties_Set_Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_properties()) {
      mutable_properties()->::generated::proto::attributes::Properties::MergeFrom(from.properties());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Properties_Set_Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Set_Request::CopyFrom(const Project_Library_AST_Properties_Set_Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Properties_Set_Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Properties_Set_Request::Swap(Project_Library_AST_Properties_Set_Request* other) {
  if (other != this) {
    std::swap(properties_, other->properties_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Properties_Set_Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Properties_Set_Request_descriptor_;
  metadata.reflection = Project_Library_AST_Properties_Set_Request_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Library_AST_Properties_Set_Update::kPropertiesFieldNumber;
const int Project_Library_AST_Properties_Set_Update::kNodeIDFieldNumber;
const int Project_Library_AST_Properties_Set_Update::kLibraryIDFieldNumber;
const int Project_Library_AST_Properties_Set_Update::kProjectIDFieldNumber;
#endif  // !_MSC_VER

Project_Library_AST_Properties_Set_Update::Project_Library_AST_Properties_Set_Update()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Properties_Set_Update::InitAsDefaultInstance() {
  properties_ = const_cast< ::generated::proto::attributes::Properties*>(&::generated::proto::attributes::Properties::default_instance());
}

Project_Library_AST_Properties_Set_Update::Project_Library_AST_Properties_Set_Update(const Project_Library_AST_Properties_Set_Update& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Set_Update::SharedCtor() {
  _cached_size_ = 0;
  properties_ = NULL;
  nodeid_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Properties_Set_Update::~Project_Library_AST_Properties_Set_Update() {
  SharedDtor();
}

void Project_Library_AST_Properties_Set_Update::SharedDtor() {
  if (this != default_instance_) {
    delete properties_;
  }
}

void Project_Library_AST_Properties_Set_Update::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Set_Update::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Properties_Set_Update_descriptor_;
}

const Project_Library_AST_Properties_Set_Update& Project_Library_AST_Properties_Set_Update::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Properties_Set_Update* Project_Library_AST_Properties_Set_Update::default_instance_ = NULL;

Project_Library_AST_Properties_Set_Update* Project_Library_AST_Properties_Set_Update::New() const {
  return new Project_Library_AST_Properties_Set_Update;
}

void Project_Library_AST_Properties_Set_Update::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_properties()) {
      if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
    }
    nodeid_ = 0;
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Properties_Set_Update::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.attributes.Properties properties = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Library_AST_Properties_Set_Update::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Properties_Set_Update::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->properties(), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Properties_Set_Update::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.attributes.Properties properties = 1;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Properties_Set_Update::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Properties_Set_Update* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Properties_Set_Update*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Properties_Set_Update::MergeFrom(const Project_Library_AST_Properties_Set_Update& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_properties()) {
      mutable_properties()->::generated::proto::attributes::Properties::MergeFrom(from.properties());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Properties_Set_Update::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Set_Update::CopyFrom(const Project_Library_AST_Properties_Set_Update& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Properties_Set_Update::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  return true;
}

void Project_Library_AST_Properties_Set_Update::Swap(Project_Library_AST_Properties_Set_Update* other) {
  if (other != this) {
    std::swap(properties_, other->properties_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Properties_Set_Update::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Properties_Set_Update_descriptor_;
  metadata.reflection = Project_Library_AST_Properties_Set_Update_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Properties_Set::Project_Library_AST_Properties_Set()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Properties_Set::InitAsDefaultInstance() {
}

Project_Library_AST_Properties_Set::Project_Library_AST_Properties_Set(const Project_Library_AST_Properties_Set& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Set::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Properties_Set::~Project_Library_AST_Properties_Set() {
  SharedDtor();
}

void Project_Library_AST_Properties_Set::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Properties_Set::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Properties_Set::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Properties_Set_descriptor_;
}

const Project_Library_AST_Properties_Set& Project_Library_AST_Properties_Set::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Properties_Set* Project_Library_AST_Properties_Set::default_instance_ = NULL;

Project_Library_AST_Properties_Set* Project_Library_AST_Properties_Set::New() const {
  return new Project_Library_AST_Properties_Set;
}

void Project_Library_AST_Properties_Set::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Properties_Set::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Properties_Set::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Properties_Set::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Properties_Set::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Properties_Set::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Properties_Set* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Properties_Set*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Properties_Set::MergeFrom(const Project_Library_AST_Properties_Set& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Properties_Set::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Properties_Set::CopyFrom(const Project_Library_AST_Properties_Set& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Properties_Set::IsInitialized() const {

  return true;
}

void Project_Library_AST_Properties_Set::Swap(Project_Library_AST_Properties_Set* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Properties_Set::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Properties_Set_descriptor_;
  metadata.reflection = Project_Library_AST_Properties_Set_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST_Properties::Project_Library_AST_Properties()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST_Properties::InitAsDefaultInstance() {
}

Project_Library_AST_Properties::Project_Library_AST_Properties(const Project_Library_AST_Properties& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST_Properties::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST_Properties::~Project_Library_AST_Properties() {
  SharedDtor();
}

void Project_Library_AST_Properties::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST_Properties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST_Properties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_Properties_descriptor_;
}

const Project_Library_AST_Properties& Project_Library_AST_Properties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST_Properties* Project_Library_AST_Properties::default_instance_ = NULL;

Project_Library_AST_Properties* Project_Library_AST_Properties::New() const {
  return new Project_Library_AST_Properties;
}

void Project_Library_AST_Properties::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST_Properties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST_Properties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST_Properties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST_Properties::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST_Properties::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST_Properties* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST_Properties*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST_Properties::MergeFrom(const Project_Library_AST_Properties& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST_Properties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST_Properties::CopyFrom(const Project_Library_AST_Properties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST_Properties::IsInitialized() const {

  return true;
}

void Project_Library_AST_Properties::Swap(Project_Library_AST_Properties* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST_Properties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_Properties_descriptor_;
  metadata.reflection = Project_Library_AST_Properties_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library_AST::Project_Library_AST()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library_AST::InitAsDefaultInstance() {
}

Project_Library_AST::Project_Library_AST(const Project_Library_AST& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library_AST::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library_AST::~Project_Library_AST() {
  SharedDtor();
}

void Project_Library_AST::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library_AST::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library_AST::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_AST_descriptor_;
}

const Project_Library_AST& Project_Library_AST::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library_AST* Project_Library_AST::default_instance_ = NULL;

Project_Library_AST* Project_Library_AST::New() const {
  return new Project_Library_AST;
}

void Project_Library_AST::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library_AST::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library_AST::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library_AST::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library_AST::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library_AST::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library_AST* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library_AST*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library_AST::MergeFrom(const Project_Library_AST& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library_AST::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library_AST::CopyFrom(const Project_Library_AST& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library_AST::IsInitialized() const {

  return true;
}

void Project_Library_AST::Swap(Project_Library_AST* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library_AST::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_AST_descriptor_;
  metadata.reflection = Project_Library_AST_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Library::Project_Library()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Library::InitAsDefaultInstance() {
}

Project_Library::Project_Library(const Project_Library& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Library::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Library::~Project_Library() {
  SharedDtor();
}

void Project_Library::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Library::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Library::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Library_descriptor_;
}

const Project_Library& Project_Library::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project_Library* Project_Library::default_instance_ = NULL;

Project_Library* Project_Library::New() const {
  return new Project_Library;
}

void Project_Library::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Library::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Library::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Library::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Library::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Library::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Library* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Library*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Library::MergeFrom(const Project_Library& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Library::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Library::CopyFrom(const Project_Library& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Library::IsInitialized() const {

  return true;
}

void Project_Library::Swap(Project_Library* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Library::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Library_descriptor_;
  metadata.reflection = Project_Library_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project::Project()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project::InitAsDefaultInstance() {
}

Project::Project(const Project& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project::~Project() {
  SharedDtor();
}

void Project::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_descriptor_;
}

const Project& Project::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_project_2dmanager_2eproto();
  return *default_instance_;
}

Project* Project::default_instance_ = NULL;

Project* Project::New() const {
  return new Project;
}

void Project::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project::MergeFrom(const Project& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project::CopyFrom(const Project& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project::IsInitialized() const {

  return true;
}

void Project::Swap(Project* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_descriptor_;
  metadata.reflection = Project_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace projectManager
}  // namespace proto
}  // namespace generated

// @@protoc_insertion_point(global_scope)

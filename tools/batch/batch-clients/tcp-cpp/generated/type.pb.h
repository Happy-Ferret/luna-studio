// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: type.proto

#ifndef PROTOBUF_type_2eproto__INCLUDED
#define PROTOBUF_type_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/generated_enum_reflection.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace type {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_type_2eproto();
void protobuf_AssignDesc_type_2eproto();
void protobuf_ShutdownFile_type_2eproto();

class Type;
class Unknown;
class Var;
class Tuple;
class Data;
class Module;
class Lambda;
class Con_;
class App;

enum Type_Cls {
  Type_Cls_Unknown = 1,
  Type_Cls_Var = 2,
  Type_Cls_Tuple = 3,
  Type_Cls_Data = 4,
  Type_Cls_Module = 5,
  Type_Cls_Lambda = 6,
  Type_Cls_Con_ = 7,
  Type_Cls_App = 8
};
bool Type_Cls_IsValid(int value);
const Type_Cls Type_Cls_Cls_MIN = Type_Cls_Unknown;
const Type_Cls Type_Cls_Cls_MAX = Type_Cls_App;
const int Type_Cls_Cls_ARRAYSIZE = Type_Cls_Cls_MAX + 1;

const ::google::protobuf::EnumDescriptor* Type_Cls_descriptor();
inline const ::std::string& Type_Cls_Name(Type_Cls value) {
  return ::google::protobuf::internal::NameOfEnum(
    Type_Cls_descriptor(), value);
}
inline bool Type_Cls_Parse(
    const ::std::string& name, Type_Cls* value) {
  return ::google::protobuf::internal::ParseNamedEnum<Type_Cls>(
    Type_Cls_descriptor(), name, value);
}
// ===================================================================

class Type : public ::google::protobuf::Message {
 public:
  Type();
  virtual ~Type();

  Type(const Type& from);

  inline Type& operator=(const Type& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Type& default_instance();

  void Swap(Type* other);

  // implements Message ----------------------------------------------

  Type* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Type& from);
  void MergeFrom(const Type& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Type_Cls Cls;
  static const Cls Unknown = Type_Cls_Unknown;
  static const Cls Var = Type_Cls_Var;
  static const Cls Tuple = Type_Cls_Tuple;
  static const Cls Data = Type_Cls_Data;
  static const Cls Module = Type_Cls_Module;
  static const Cls Lambda = Type_Cls_Lambda;
  static const Cls Con_ = Type_Cls_Con_;
  static const Cls App = Type_Cls_App;
  static inline bool Cls_IsValid(int value) {
    return Type_Cls_IsValid(value);
  }
  static const Cls Cls_MIN =
    Type_Cls_Cls_MIN;
  static const Cls Cls_MAX =
    Type_Cls_Cls_MAX;
  static const int Cls_ARRAYSIZE =
    Type_Cls_Cls_ARRAYSIZE;
  static inline const ::google::protobuf::EnumDescriptor*
  Cls_descriptor() {
    return Type_Cls_descriptor();
  }
  static inline const ::std::string& Cls_Name(Cls value) {
    return Type_Cls_Name(value);
  }
  static inline bool Cls_Parse(const ::std::string& name,
      Cls* value) {
    return Type_Cls_Parse(name, value);
  }

  // accessors -------------------------------------------------------

  // required .generated.proto.type.Type.Cls cls = 1;
  inline bool has_cls() const;
  inline void clear_cls();
  static const int kClsFieldNumber = 1;
  inline ::generated::proto::type::Type_Cls cls() const;
  inline void set_cls(::generated::proto::type::Type_Cls value);

  // optional int32 id = 2 [default = -1];
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 2;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  GOOGLE_PROTOBUF_EXTENSION_ACCESSORS(Type)
  // @@protoc_insertion_point(class_scope:generated.proto.type.Type)
 private:
  inline void set_has_cls();
  inline void clear_has_cls();
  inline void set_has_id();
  inline void clear_has_id();

  ::google::protobuf::internal::ExtensionSet _extensions_;

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  int cls_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static Type* default_instance_;
};
// -------------------------------------------------------------------

class Unknown : public ::google::protobuf::Message {
 public:
  Unknown();
  virtual ~Unknown();

  Unknown(const Unknown& from);

  inline Unknown& operator=(const Unknown& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Unknown& default_instance();

  void Swap(Unknown* other);

  // implements Message ----------------------------------------------

  Unknown* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Unknown& from);
  void MergeFrom(const Unknown& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  static const int kExtFieldNumber = 100;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Unknown >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.type.Unknown)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;


  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[1];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static Unknown* default_instance_;
};
// -------------------------------------------------------------------

class Var : public ::google::protobuf::Message {
 public:
  Var();
  virtual ~Var();

  Var(const Var& from);

  inline Var& operator=(const Var& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Var& default_instance();

  void Swap(Var* other);

  // implements Message ----------------------------------------------

  Var* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Var& from);
  void MergeFrom(const Var& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  static const int kExtFieldNumber = 101;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Var >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.type.Var)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static Var* default_instance_;
};
// -------------------------------------------------------------------

class Tuple : public ::google::protobuf::Message {
 public:
  Tuple();
  virtual ~Tuple();

  Tuple(const Tuple& from);

  inline Tuple& operator=(const Tuple& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Tuple& default_instance();

  void Swap(Tuple* other);

  // implements Message ----------------------------------------------

  Tuple* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Tuple& from);
  void MergeFrom(const Tuple& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .generated.proto.type.Type items = 2;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 2;
  inline const ::generated::proto::type::Type& items(int index) const;
  inline ::generated::proto::type::Type* mutable_items(int index);
  inline ::generated::proto::type::Type* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >*
      mutable_items();

  static const int kExtFieldNumber = 102;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Tuple >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.type.Tuple)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static Tuple* default_instance_;
};
// -------------------------------------------------------------------

class Data : public ::google::protobuf::Message {
 public:
  Data();
  virtual ~Data();

  Data(const Data& from);

  inline Data& operator=(const Data& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Data& default_instance();

  void Swap(Data* other);

  // implements Message ----------------------------------------------

  Data* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Data& from);
  void MergeFrom(const Data& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated string params = 3;
  inline int params_size() const;
  inline void clear_params();
  static const int kParamsFieldNumber = 3;
  inline const ::std::string& params(int index) const;
  inline ::std::string* mutable_params(int index);
  inline void set_params(int index, const ::std::string& value);
  inline void set_params(int index, const char* value);
  inline void set_params(int index, const char* value, size_t size);
  inline ::std::string* add_params();
  inline void add_params(const ::std::string& value);
  inline void add_params(const char* value);
  inline void add_params(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& params() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_params();

  static const int kExtFieldNumber = 103;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Data >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.type.Data)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> params_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static Data* default_instance_;
};
// -------------------------------------------------------------------

class Module : public ::google::protobuf::Message {
 public:
  Module();
  virtual ~Module();

  Module(const Module& from);

  inline Module& operator=(const Module& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Module& default_instance();

  void Swap(Module* other);

  // implements Message ----------------------------------------------

  Module* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Module& from);
  void MergeFrom(const Module& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional string name = 1;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 1;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // repeated string path = 2;
  inline int path_size() const;
  inline void clear_path();
  static const int kPathFieldNumber = 2;
  inline const ::std::string& path(int index) const;
  inline ::std::string* mutable_path(int index);
  inline void set_path(int index, const ::std::string& value);
  inline void set_path(int index, const char* value);
  inline void set_path(int index, const char* value, size_t size);
  inline ::std::string* add_path();
  inline void add_path(const ::std::string& value);
  inline void add_path(const char* value);
  inline void add_path(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& path() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_path();

  static const int kExtFieldNumber = 104;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Module >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.type.Module)
 private:
  inline void set_has_name();
  inline void clear_has_name();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::google::protobuf::RepeatedPtrField< ::std::string> path_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static Module* default_instance_;
};
// -------------------------------------------------------------------

class Lambda : public ::google::protobuf::Message {
 public:
  Lambda();
  virtual ~Lambda();

  Lambda(const Lambda& from);

  inline Lambda& operator=(const Lambda& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Lambda& default_instance();

  void Swap(Lambda* other);

  // implements Message ----------------------------------------------

  Lambda* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Lambda& from);
  void MergeFrom(const Lambda& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated .generated.proto.type.Type inputs = 2;
  inline int inputs_size() const;
  inline void clear_inputs();
  static const int kInputsFieldNumber = 2;
  inline const ::generated::proto::type::Type& inputs(int index) const;
  inline ::generated::proto::type::Type* mutable_inputs(int index);
  inline ::generated::proto::type::Type* add_inputs();
  inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >&
      inputs() const;
  inline ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >*
      mutable_inputs();

  // optional .generated.proto.type.Type outputs = 3;
  inline bool has_outputs() const;
  inline void clear_outputs();
  static const int kOutputsFieldNumber = 3;
  inline const ::generated::proto::type::Type& outputs() const;
  inline ::generated::proto::type::Type* mutable_outputs();
  inline ::generated::proto::type::Type* release_outputs();
  inline void set_allocated_outputs(::generated::proto::type::Type* outputs);

  static const int kExtFieldNumber = 105;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Lambda >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.type.Lambda)
 private:
  inline void set_has_outputs();
  inline void clear_has_outputs();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type > inputs_;
  ::generated::proto::type::Type* outputs_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static Lambda* default_instance_;
};
// -------------------------------------------------------------------

class Con_ : public ::google::protobuf::Message {
 public:
  Con_();
  virtual ~Con_();

  Con_(const Con_& from);

  inline Con_& operator=(const Con_& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Con_& default_instance();

  void Swap(Con_* other);

  // implements Message ----------------------------------------------

  Con_* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Con_& from);
  void MergeFrom(const Con_& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string segments = 2;
  inline int segments_size() const;
  inline void clear_segments();
  static const int kSegmentsFieldNumber = 2;
  inline const ::std::string& segments(int index) const;
  inline ::std::string* mutable_segments(int index);
  inline void set_segments(int index, const ::std::string& value);
  inline void set_segments(int index, const char* value);
  inline void set_segments(int index, const char* value, size_t size);
  inline ::std::string* add_segments();
  inline void add_segments(const ::std::string& value);
  inline void add_segments(const char* value);
  inline void add_segments(const char* value, size_t size);
  inline const ::google::protobuf::RepeatedPtrField< ::std::string>& segments() const;
  inline ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_segments();

  static const int kExtFieldNumber = 106;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::Con_ >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.type.Con_)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::std::string> segments_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static Con_* default_instance_;
};
// -------------------------------------------------------------------

class App : public ::google::protobuf::Message {
 public:
  App();
  virtual ~App();

  App(const App& from);

  inline App& operator=(const App& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const App& default_instance();

  void Swap(App* other);

  // implements Message ----------------------------------------------

  App* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const App& from);
  void MergeFrom(const App& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // optional .generated.proto.type.Type src = 2;
  inline bool has_src() const;
  inline void clear_src();
  static const int kSrcFieldNumber = 2;
  inline const ::generated::proto::type::Type& src() const;
  inline ::generated::proto::type::Type* mutable_src();
  inline ::generated::proto::type::Type* release_src();
  inline void set_allocated_src(::generated::proto::type::Type* src);

  // repeated .generated.proto.type.Type args = 3;
  inline int args_size() const;
  inline void clear_args();
  static const int kArgsFieldNumber = 3;
  inline const ::generated::proto::type::Type& args(int index) const;
  inline ::generated::proto::type::Type* mutable_args(int index);
  inline ::generated::proto::type::Type* add_args();
  inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >&
      args() const;
  inline ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >*
      mutable_args();

  static const int kExtFieldNumber = 107;
  static ::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::type::Type,
      ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::type::App >, 11, false >
    ext;
  // @@protoc_insertion_point(class_scope:generated.proto.type.App)
 private:
  inline void set_has_src();
  inline void clear_has_src();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::generated::proto::type::Type* src_;
  ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type > args_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_type_2eproto();
  friend void protobuf_AssignDesc_type_2eproto();
  friend void protobuf_ShutdownFile_type_2eproto();

  void InitAsDefaultInstance();
  static App* default_instance_;
};
// ===================================================================


// ===================================================================

// Type

// required .generated.proto.type.Type.Cls cls = 1;
inline bool Type::has_cls() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Type::set_has_cls() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Type::clear_has_cls() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Type::clear_cls() {
  cls_ = 1;
  clear_has_cls();
}
inline ::generated::proto::type::Type_Cls Type::cls() const {
  return static_cast< ::generated::proto::type::Type_Cls >(cls_);
}
inline void Type::set_cls(::generated::proto::type::Type_Cls value) {
  assert(::generated::proto::type::Type_Cls_IsValid(value));
  set_has_cls();
  cls_ = value;
}

// optional int32 id = 2 [default = -1];
inline bool Type::has_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Type::set_has_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Type::clear_has_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Type::clear_id() {
  id_ = -1;
  clear_has_id();
}
inline ::google::protobuf::int32 Type::id() const {
  return id_;
}
inline void Type::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// -------------------------------------------------------------------

// Unknown

// -------------------------------------------------------------------

// Var

// optional string name = 2;
inline bool Var::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Var::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Var::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Var::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Var::name() const {
  return *name_;
}
inline void Var::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Var::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Var::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Var::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Var::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Var::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// -------------------------------------------------------------------

// Tuple

// repeated .generated.proto.type.Type items = 2;
inline int Tuple::items_size() const {
  return items_.size();
}
inline void Tuple::clear_items() {
  items_.Clear();
}
inline const ::generated::proto::type::Type& Tuple::items(int index) const {
  return items_.Get(index);
}
inline ::generated::proto::type::Type* Tuple::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::generated::proto::type::Type* Tuple::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >&
Tuple::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >*
Tuple::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// Data

// optional string name = 2;
inline bool Data::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Data::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Data::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Data::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Data::name() const {
  return *name_;
}
inline void Data::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Data::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Data::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Data::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Data::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Data::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string params = 3;
inline int Data::params_size() const {
  return params_.size();
}
inline void Data::clear_params() {
  params_.Clear();
}
inline const ::std::string& Data::params(int index) const {
  return params_.Get(index);
}
inline ::std::string* Data::mutable_params(int index) {
  return params_.Mutable(index);
}
inline void Data::set_params(int index, const ::std::string& value) {
  params_.Mutable(index)->assign(value);
}
inline void Data::set_params(int index, const char* value) {
  params_.Mutable(index)->assign(value);
}
inline void Data::set_params(int index, const char* value, size_t size) {
  params_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Data::add_params() {
  return params_.Add();
}
inline void Data::add_params(const ::std::string& value) {
  params_.Add()->assign(value);
}
inline void Data::add_params(const char* value) {
  params_.Add()->assign(value);
}
inline void Data::add_params(const char* value, size_t size) {
  params_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Data::params() const {
  return params_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Data::mutable_params() {
  return &params_;
}

// -------------------------------------------------------------------

// Module

// optional string name = 1;
inline bool Module::has_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Module::set_has_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Module::clear_has_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Module::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Module::name() const {
  return *name_;
}
inline void Module::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Module::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Module::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Module::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Module::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Module::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// repeated string path = 2;
inline int Module::path_size() const {
  return path_.size();
}
inline void Module::clear_path() {
  path_.Clear();
}
inline const ::std::string& Module::path(int index) const {
  return path_.Get(index);
}
inline ::std::string* Module::mutable_path(int index) {
  return path_.Mutable(index);
}
inline void Module::set_path(int index, const ::std::string& value) {
  path_.Mutable(index)->assign(value);
}
inline void Module::set_path(int index, const char* value) {
  path_.Mutable(index)->assign(value);
}
inline void Module::set_path(int index, const char* value, size_t size) {
  path_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Module::add_path() {
  return path_.Add();
}
inline void Module::add_path(const ::std::string& value) {
  path_.Add()->assign(value);
}
inline void Module::add_path(const char* value) {
  path_.Add()->assign(value);
}
inline void Module::add_path(const char* value, size_t size) {
  path_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Module::path() const {
  return path_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Module::mutable_path() {
  return &path_;
}

// -------------------------------------------------------------------

// Lambda

// repeated .generated.proto.type.Type inputs = 2;
inline int Lambda::inputs_size() const {
  return inputs_.size();
}
inline void Lambda::clear_inputs() {
  inputs_.Clear();
}
inline const ::generated::proto::type::Type& Lambda::inputs(int index) const {
  return inputs_.Get(index);
}
inline ::generated::proto::type::Type* Lambda::mutable_inputs(int index) {
  return inputs_.Mutable(index);
}
inline ::generated::proto::type::Type* Lambda::add_inputs() {
  return inputs_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >&
Lambda::inputs() const {
  return inputs_;
}
inline ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >*
Lambda::mutable_inputs() {
  return &inputs_;
}

// optional .generated.proto.type.Type outputs = 3;
inline bool Lambda::has_outputs() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Lambda::set_has_outputs() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Lambda::clear_has_outputs() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Lambda::clear_outputs() {
  if (outputs_ != NULL) outputs_->::generated::proto::type::Type::Clear();
  clear_has_outputs();
}
inline const ::generated::proto::type::Type& Lambda::outputs() const {
  return outputs_ != NULL ? *outputs_ : *default_instance_->outputs_;
}
inline ::generated::proto::type::Type* Lambda::mutable_outputs() {
  set_has_outputs();
  if (outputs_ == NULL) outputs_ = new ::generated::proto::type::Type;
  return outputs_;
}
inline ::generated::proto::type::Type* Lambda::release_outputs() {
  clear_has_outputs();
  ::generated::proto::type::Type* temp = outputs_;
  outputs_ = NULL;
  return temp;
}
inline void Lambda::set_allocated_outputs(::generated::proto::type::Type* outputs) {
  delete outputs_;
  outputs_ = outputs;
  if (outputs) {
    set_has_outputs();
  } else {
    clear_has_outputs();
  }
}

// -------------------------------------------------------------------

// Con_

// repeated string segments = 2;
inline int Con_::segments_size() const {
  return segments_.size();
}
inline void Con_::clear_segments() {
  segments_.Clear();
}
inline const ::std::string& Con_::segments(int index) const {
  return segments_.Get(index);
}
inline ::std::string* Con_::mutable_segments(int index) {
  return segments_.Mutable(index);
}
inline void Con_::set_segments(int index, const ::std::string& value) {
  segments_.Mutable(index)->assign(value);
}
inline void Con_::set_segments(int index, const char* value) {
  segments_.Mutable(index)->assign(value);
}
inline void Con_::set_segments(int index, const char* value, size_t size) {
  segments_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Con_::add_segments() {
  return segments_.Add();
}
inline void Con_::add_segments(const ::std::string& value) {
  segments_.Add()->assign(value);
}
inline void Con_::add_segments(const char* value) {
  segments_.Add()->assign(value);
}
inline void Con_::add_segments(const char* value, size_t size) {
  segments_.Add()->assign(reinterpret_cast<const char*>(value), size);
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
Con_::segments() const {
  return segments_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
Con_::mutable_segments() {
  return &segments_;
}

// -------------------------------------------------------------------

// App

// optional .generated.proto.type.Type src = 2;
inline bool App::has_src() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void App::set_has_src() {
  _has_bits_[0] |= 0x00000001u;
}
inline void App::clear_has_src() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void App::clear_src() {
  if (src_ != NULL) src_->::generated::proto::type::Type::Clear();
  clear_has_src();
}
inline const ::generated::proto::type::Type& App::src() const {
  return src_ != NULL ? *src_ : *default_instance_->src_;
}
inline ::generated::proto::type::Type* App::mutable_src() {
  set_has_src();
  if (src_ == NULL) src_ = new ::generated::proto::type::Type;
  return src_;
}
inline ::generated::proto::type::Type* App::release_src() {
  clear_has_src();
  ::generated::proto::type::Type* temp = src_;
  src_ = NULL;
  return temp;
}
inline void App::set_allocated_src(::generated::proto::type::Type* src) {
  delete src_;
  src_ = src;
  if (src) {
    set_has_src();
  } else {
    clear_has_src();
  }
}

// repeated .generated.proto.type.Type args = 3;
inline int App::args_size() const {
  return args_.size();
}
inline void App::clear_args() {
  args_.Clear();
}
inline const ::generated::proto::type::Type& App::args(int index) const {
  return args_.Get(index);
}
inline ::generated::proto::type::Type* App::mutable_args(int index) {
  return args_.Mutable(index);
}
inline ::generated::proto::type::Type* App::add_args() {
  return args_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >&
App::args() const {
  return args_;
}
inline ::google::protobuf::RepeatedPtrField< ::generated::proto::type::Type >*
App::mutable_args() {
  return &args_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace type
}  // namespace proto
}  // namespace generated

#ifndef SWIG
namespace google {
namespace protobuf {

template <>
inline const EnumDescriptor* GetEnumDescriptor< ::generated::proto::type::Type_Cls>() {
  return ::generated::proto::type::Type_Cls_descriptor();
}

}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_type_2eproto__INCLUDED

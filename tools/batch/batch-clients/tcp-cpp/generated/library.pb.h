// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: library.proto

#ifndef PROTOBUF_library_2eproto__INCLUDED
#define PROTOBUF_library_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2005000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2005000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "module.pb.h"
#include "attributes.pb.h"
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace library {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_library_2eproto();
void protobuf_AssignDesc_library_2eproto();
void protobuf_ShutdownFile_library_2eproto();

class Library;
class Library_PropertyMap;
class Library_PropertyMap_KeyValue;

// ===================================================================

class Library_PropertyMap_KeyValue : public ::google::protobuf::Message {
 public:
  Library_PropertyMap_KeyValue();
  virtual ~Library_PropertyMap_KeyValue();

  Library_PropertyMap_KeyValue(const Library_PropertyMap_KeyValue& from);

  inline Library_PropertyMap_KeyValue& operator=(const Library_PropertyMap_KeyValue& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Library_PropertyMap_KeyValue& default_instance();

  void Swap(Library_PropertyMap_KeyValue* other);

  // implements Message ----------------------------------------------

  Library_PropertyMap_KeyValue* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Library_PropertyMap_KeyValue& from);
  void MergeFrom(const Library_PropertyMap_KeyValue& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 astID = 1;
  inline bool has_astid() const;
  inline void clear_astid();
  static const int kAstIDFieldNumber = 1;
  inline ::google::protobuf::int32 astid() const;
  inline void set_astid(::google::protobuf::int32 value);

  // required .generated.proto.attributes.Properties properties = 2;
  inline bool has_properties() const;
  inline void clear_properties();
  static const int kPropertiesFieldNumber = 2;
  inline const ::generated::proto::attributes::Properties& properties() const;
  inline ::generated::proto::attributes::Properties* mutable_properties();
  inline ::generated::proto::attributes::Properties* release_properties();
  inline void set_allocated_properties(::generated::proto::attributes::Properties* properties);

  // @@protoc_insertion_point(class_scope:generated.proto.library.Library.PropertyMap.KeyValue)
 private:
  inline void set_has_astid();
  inline void clear_has_astid();
  inline void set_has_properties();
  inline void clear_has_properties();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::generated::proto::attributes::Properties* properties_;
  ::google::protobuf::int32 astid_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(2 + 31) / 32];

  friend void  protobuf_AddDesc_library_2eproto();
  friend void protobuf_AssignDesc_library_2eproto();
  friend void protobuf_ShutdownFile_library_2eproto();

  void InitAsDefaultInstance();
  static Library_PropertyMap_KeyValue* default_instance_;
};
// -------------------------------------------------------------------

class Library_PropertyMap : public ::google::protobuf::Message {
 public:
  Library_PropertyMap();
  virtual ~Library_PropertyMap();

  Library_PropertyMap(const Library_PropertyMap& from);

  inline Library_PropertyMap& operator=(const Library_PropertyMap& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Library_PropertyMap& default_instance();

  void Swap(Library_PropertyMap* other);

  // implements Message ----------------------------------------------

  Library_PropertyMap* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Library_PropertyMap& from);
  void MergeFrom(const Library_PropertyMap& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Library_PropertyMap_KeyValue KeyValue;

  // accessors -------------------------------------------------------

  // repeated .generated.proto.library.Library.PropertyMap.KeyValue items = 1;
  inline int items_size() const;
  inline void clear_items();
  static const int kItemsFieldNumber = 1;
  inline const ::generated::proto::library::Library_PropertyMap_KeyValue& items(int index) const;
  inline ::generated::proto::library::Library_PropertyMap_KeyValue* mutable_items(int index);
  inline ::generated::proto::library::Library_PropertyMap_KeyValue* add_items();
  inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::library::Library_PropertyMap_KeyValue >&
      items() const;
  inline ::google::protobuf::RepeatedPtrField< ::generated::proto::library::Library_PropertyMap_KeyValue >*
      mutable_items();

  // @@protoc_insertion_point(class_scope:generated.proto.library.Library.PropertyMap)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::RepeatedPtrField< ::generated::proto::library::Library_PropertyMap_KeyValue > items_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(1 + 31) / 32];

  friend void  protobuf_AddDesc_library_2eproto();
  friend void protobuf_AssignDesc_library_2eproto();
  friend void protobuf_ShutdownFile_library_2eproto();

  void InitAsDefaultInstance();
  static Library_PropertyMap* default_instance_;
};
// -------------------------------------------------------------------

class Library : public ::google::protobuf::Message {
 public:
  Library();
  virtual ~Library();

  Library(const Library& from);

  inline Library& operator=(const Library& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Library& default_instance();

  void Swap(Library* other);

  // implements Message ----------------------------------------------

  Library* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Library& from);
  void MergeFrom(const Library& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:

  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  typedef Library_PropertyMap PropertyMap;

  // accessors -------------------------------------------------------

  // optional int32 id = 1;
  inline bool has_id() const;
  inline void clear_id();
  static const int kIdFieldNumber = 1;
  inline ::google::protobuf::int32 id() const;
  inline void set_id(::google::protobuf::int32 value);

  // optional string name = 2;
  inline bool has_name() const;
  inline void clear_name();
  static const int kNameFieldNumber = 2;
  inline const ::std::string& name() const;
  inline void set_name(const ::std::string& value);
  inline void set_name(const char* value);
  inline void set_name(const char* value, size_t size);
  inline ::std::string* mutable_name();
  inline ::std::string* release_name();
  inline void set_allocated_name(::std::string* name);

  // optional string path = 3;
  inline bool has_path() const;
  inline void clear_path();
  static const int kPathFieldNumber = 3;
  inline const ::std::string& path() const;
  inline void set_path(const ::std::string& value);
  inline void set_path(const char* value);
  inline void set_path(const char* value, size_t size);
  inline ::std::string* mutable_path();
  inline ::std::string* release_path();
  inline void set_allocated_path(::std::string* path);

  // optional .generated.proto.module.Module ast = 4;
  inline bool has_ast() const;
  inline void clear_ast();
  static const int kAstFieldNumber = 4;
  inline const ::generated::proto::module::Module& ast() const;
  inline ::generated::proto::module::Module* mutable_ast();
  inline ::generated::proto::module::Module* release_ast();
  inline void set_allocated_ast(::generated::proto::module::Module* ast);

  // optional .generated.proto.library.Library.PropertyMap propertyMap = 5;
  inline bool has_propertymap() const;
  inline void clear_propertymap();
  static const int kPropertyMapFieldNumber = 5;
  inline const ::generated::proto::library::Library_PropertyMap& propertymap() const;
  inline ::generated::proto::library::Library_PropertyMap* mutable_propertymap();
  inline ::generated::proto::library::Library_PropertyMap* release_propertymap();
  inline void set_allocated_propertymap(::generated::proto::library::Library_PropertyMap* propertymap);

  // @@protoc_insertion_point(class_scope:generated.proto.library.Library)
 private:
  inline void set_has_id();
  inline void clear_has_id();
  inline void set_has_name();
  inline void clear_has_name();
  inline void set_has_path();
  inline void clear_has_path();
  inline void set_has_ast();
  inline void clear_has_ast();
  inline void set_has_propertymap();
  inline void clear_has_propertymap();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::std::string* name_;
  ::std::string* path_;
  ::generated::proto::module::Module* ast_;
  ::generated::proto::library::Library_PropertyMap* propertymap_;
  ::google::protobuf::int32 id_;

  mutable int _cached_size_;
  ::google::protobuf::uint32 _has_bits_[(5 + 31) / 32];

  friend void  protobuf_AddDesc_library_2eproto();
  friend void protobuf_AssignDesc_library_2eproto();
  friend void protobuf_ShutdownFile_library_2eproto();

  void InitAsDefaultInstance();
  static Library* default_instance_;
};
// ===================================================================


// ===================================================================

// Library_PropertyMap_KeyValue

// required int32 astID = 1;
inline bool Library_PropertyMap_KeyValue::has_astid() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Library_PropertyMap_KeyValue::set_has_astid() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Library_PropertyMap_KeyValue::clear_has_astid() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Library_PropertyMap_KeyValue::clear_astid() {
  astid_ = 0;
  clear_has_astid();
}
inline ::google::protobuf::int32 Library_PropertyMap_KeyValue::astid() const {
  return astid_;
}
inline void Library_PropertyMap_KeyValue::set_astid(::google::protobuf::int32 value) {
  set_has_astid();
  astid_ = value;
}

// required .generated.proto.attributes.Properties properties = 2;
inline bool Library_PropertyMap_KeyValue::has_properties() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Library_PropertyMap_KeyValue::set_has_properties() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Library_PropertyMap_KeyValue::clear_has_properties() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Library_PropertyMap_KeyValue::clear_properties() {
  if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
  clear_has_properties();
}
inline const ::generated::proto::attributes::Properties& Library_PropertyMap_KeyValue::properties() const {
  return properties_ != NULL ? *properties_ : *default_instance_->properties_;
}
inline ::generated::proto::attributes::Properties* Library_PropertyMap_KeyValue::mutable_properties() {
  set_has_properties();
  if (properties_ == NULL) properties_ = new ::generated::proto::attributes::Properties;
  return properties_;
}
inline ::generated::proto::attributes::Properties* Library_PropertyMap_KeyValue::release_properties() {
  clear_has_properties();
  ::generated::proto::attributes::Properties* temp = properties_;
  properties_ = NULL;
  return temp;
}
inline void Library_PropertyMap_KeyValue::set_allocated_properties(::generated::proto::attributes::Properties* properties) {
  delete properties_;
  properties_ = properties;
  if (properties) {
    set_has_properties();
  } else {
    clear_has_properties();
  }
}

// -------------------------------------------------------------------

// Library_PropertyMap

// repeated .generated.proto.library.Library.PropertyMap.KeyValue items = 1;
inline int Library_PropertyMap::items_size() const {
  return items_.size();
}
inline void Library_PropertyMap::clear_items() {
  items_.Clear();
}
inline const ::generated::proto::library::Library_PropertyMap_KeyValue& Library_PropertyMap::items(int index) const {
  return items_.Get(index);
}
inline ::generated::proto::library::Library_PropertyMap_KeyValue* Library_PropertyMap::mutable_items(int index) {
  return items_.Mutable(index);
}
inline ::generated::proto::library::Library_PropertyMap_KeyValue* Library_PropertyMap::add_items() {
  return items_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::generated::proto::library::Library_PropertyMap_KeyValue >&
Library_PropertyMap::items() const {
  return items_;
}
inline ::google::protobuf::RepeatedPtrField< ::generated::proto::library::Library_PropertyMap_KeyValue >*
Library_PropertyMap::mutable_items() {
  return &items_;
}

// -------------------------------------------------------------------

// Library

// optional int32 id = 1;
inline bool Library::has_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Library::set_has_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Library::clear_has_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Library::clear_id() {
  id_ = 0;
  clear_has_id();
}
inline ::google::protobuf::int32 Library::id() const {
  return id_;
}
inline void Library::set_id(::google::protobuf::int32 value) {
  set_has_id();
  id_ = value;
}

// optional string name = 2;
inline bool Library::has_name() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Library::set_has_name() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Library::clear_has_name() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Library::clear_name() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    name_->clear();
  }
  clear_has_name();
}
inline const ::std::string& Library::name() const {
  return *name_;
}
inline void Library::set_name(const ::std::string& value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Library::set_name(const char* value) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(value);
}
inline void Library::set_name(const char* value, size_t size) {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  name_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Library::mutable_name() {
  set_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    name_ = new ::std::string;
  }
  return name_;
}
inline ::std::string* Library::release_name() {
  clear_has_name();
  if (name_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = name_;
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Library::set_allocated_name(::std::string* name) {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (name) {
    set_has_name();
    name_ = name;
  } else {
    clear_has_name();
    name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional string path = 3;
inline bool Library::has_path() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void Library::set_has_path() {
  _has_bits_[0] |= 0x00000004u;
}
inline void Library::clear_has_path() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void Library::clear_path() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    path_->clear();
  }
  clear_has_path();
}
inline const ::std::string& Library::path() const {
  return *path_;
}
inline void Library::set_path(const ::std::string& value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void Library::set_path(const char* value) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(value);
}
inline void Library::set_path(const char* value, size_t size) {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  path_->assign(reinterpret_cast<const char*>(value), size);
}
inline ::std::string* Library::mutable_path() {
  set_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    path_ = new ::std::string;
  }
  return path_;
}
inline ::std::string* Library::release_path() {
  clear_has_path();
  if (path_ == &::google::protobuf::internal::kEmptyString) {
    return NULL;
  } else {
    ::std::string* temp = path_;
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
    return temp;
  }
}
inline void Library::set_allocated_path(::std::string* path) {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (path) {
    set_has_path();
    path_ = path;
  } else {
    clear_has_path();
    path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  }
}

// optional .generated.proto.module.Module ast = 4;
inline bool Library::has_ast() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void Library::set_has_ast() {
  _has_bits_[0] |= 0x00000008u;
}
inline void Library::clear_has_ast() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void Library::clear_ast() {
  if (ast_ != NULL) ast_->::generated::proto::module::Module::Clear();
  clear_has_ast();
}
inline const ::generated::proto::module::Module& Library::ast() const {
  return ast_ != NULL ? *ast_ : *default_instance_->ast_;
}
inline ::generated::proto::module::Module* Library::mutable_ast() {
  set_has_ast();
  if (ast_ == NULL) ast_ = new ::generated::proto::module::Module;
  return ast_;
}
inline ::generated::proto::module::Module* Library::release_ast() {
  clear_has_ast();
  ::generated::proto::module::Module* temp = ast_;
  ast_ = NULL;
  return temp;
}
inline void Library::set_allocated_ast(::generated::proto::module::Module* ast) {
  delete ast_;
  ast_ = ast;
  if (ast) {
    set_has_ast();
  } else {
    clear_has_ast();
  }
}

// optional .generated.proto.library.Library.PropertyMap propertyMap = 5;
inline bool Library::has_propertymap() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void Library::set_has_propertymap() {
  _has_bits_[0] |= 0x00000010u;
}
inline void Library::clear_has_propertymap() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void Library::clear_propertymap() {
  if (propertymap_ != NULL) propertymap_->::generated::proto::library::Library_PropertyMap::Clear();
  clear_has_propertymap();
}
inline const ::generated::proto::library::Library_PropertyMap& Library::propertymap() const {
  return propertymap_ != NULL ? *propertymap_ : *default_instance_->propertymap_;
}
inline ::generated::proto::library::Library_PropertyMap* Library::mutable_propertymap() {
  set_has_propertymap();
  if (propertymap_ == NULL) propertymap_ = new ::generated::proto::library::Library_PropertyMap;
  return propertymap_;
}
inline ::generated::proto::library::Library_PropertyMap* Library::release_propertymap() {
  clear_has_propertymap();
  ::generated::proto::library::Library_PropertyMap* temp = propertymap_;
  propertymap_ = NULL;
  return temp;
}
inline void Library::set_allocated_propertymap(::generated::proto::library::Library_PropertyMap* propertymap) {
  delete propertymap_;
  propertymap_ = propertymap;
  if (propertymap) {
    set_has_propertymap();
  } else {
    clear_has_propertymap();
  }
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace library
}  // namespace proto
}  // namespace generated

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_library_2eproto__INCLUDED

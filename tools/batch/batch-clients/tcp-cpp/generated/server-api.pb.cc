// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: server-api.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "server-api.pb.h"

#include <algorithm>

#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/wire_format_lite_inl.h>
#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/wire_format.h>
// @@protoc_insertion_point(includes)

namespace generated {
namespace proto {
namespace batch {

namespace {

const ::google::protobuf::Descriptor* Request_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Request_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Request_Method_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Response_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Response_reflection_ = NULL;
const ::google::protobuf::EnumDescriptor* Response_Type_descriptor_ = NULL;
const ::google::protobuf::Descriptor* Exception_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Exception_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_Definitions_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_Definitions_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_Definitions_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_Definitions_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_Definitions_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_Definitions_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddModule_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddModule_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddModule_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddModule_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddModule_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddModule_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddClass_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddClass_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddClass_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddClass_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddClass_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddClass_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddFunction_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddFunction_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddFunction_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddFunction_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_AddFunction_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_AddFunction_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleCls_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleCls_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleCls_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleCls_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleCls_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleCls_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleImports_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleImports_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleImports_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleImports_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleImports_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleImports_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleFields_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleFields_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleFields_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleFields_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateModuleFields_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateModuleFields_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataCls_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataCls_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataCls_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataCls_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataCls_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataCls_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataCons_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataCons_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataCons_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataCons_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataCons_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataCons_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataClasses_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataClasses_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataClasses_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataClasses_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataClasses_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataClasses_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataMethods_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataMethods_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataMethods_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataMethods_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateDataMethods_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateDataMethods_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionName_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionName_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionName_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionName_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionName_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionName_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionPath_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionPath_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionPath_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionPath_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionPath_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionPath_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionInputs_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionInputs_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionInputs_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionInputs_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionInputs_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionInputs_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionOutput_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionOutput_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionOutput_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionOutput_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_UpdateFunctionOutput_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_UpdateFunctionOutput_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_Remove_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_Remove_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_Remove_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_Remove_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_Remove_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_Remove_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_ResolveDefinition_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_ResolveDefinition_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_ResolveDefinition_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_ResolveDefinition_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* AST_ResolveDefinition_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  AST_ResolveDefinition_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_LS_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_LS_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_LS_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_LS_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_LS_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_LS_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Stat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Stat_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Stat_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Stat_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Stat_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Stat_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MkDir_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MkDir_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MkDir_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MkDir_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MkDir_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MkDir_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Touch_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Touch_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Touch_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Touch_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_Touch_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_Touch_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_RM_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_RM_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_RM_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_RM_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_RM_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_RM_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_CP_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_CP_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_CP_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_CP_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_CP_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_CP_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MV_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MV_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MV_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MV_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* FileSystem_MV_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  FileSystem_MV_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_NodesGraph_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_NodesGraph_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_NodesGraph_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_NodesGraph_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_NodesGraph_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_NodesGraph_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_NodeByID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_NodeByID_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_NodeByID_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_NodeByID_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_NodeByID_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_NodeByID_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_AddNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_AddNode_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_AddNode_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_AddNode_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_AddNode_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_AddNode_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_UpdateNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_UpdateNode_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_UpdateNode_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_UpdateNode_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_UpdateNode_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_UpdateNode_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_UpdateNodeInPlace_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_UpdateNodeInPlace_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_UpdateNodeInPlace_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_UpdateNodeInPlace_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_UpdateNodeInPlace_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_UpdateNodeInPlace_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_RemoveNode_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_RemoveNode_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_RemoveNode_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_RemoveNode_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_RemoveNode_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_RemoveNode_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_Connect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_Connect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_Connect_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_Connect_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_Connect_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_Connect_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_Disconnect_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_Disconnect_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_Disconnect_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_Disconnect_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Graph_Disconnect_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Graph_Disconnect_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_Libraries_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_Libraries_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_Libraries_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_Libraries_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_Libraries_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_Libraries_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LibraryByID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LibraryByID_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LibraryByID_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LibraryByID_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LibraryByID_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LibraryByID_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_CreateLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_CreateLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_CreateLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_CreateLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_CreateLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_CreateLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LoadLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LoadLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LoadLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LoadLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_LoadLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_LoadLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_UnloadLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_UnloadLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_UnloadLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_UnloadLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_UnloadLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_UnloadLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_StoreLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_StoreLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_StoreLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_StoreLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_StoreLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_StoreLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_BuildLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_BuildLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_BuildLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_BuildLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_BuildLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_BuildLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_RunLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_RunLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_RunLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_RunLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_RunLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_RunLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_InterpretLibrary_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_InterpretLibrary_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_InterpretLibrary_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_InterpretLibrary_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Library_InterpretLibrary_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Library_InterpretLibrary_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Initialize_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Initialize_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Initialize_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Initialize_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Initialize_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Initialize_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Ping_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Ping_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Ping_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Ping_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Ping_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Ping_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Dump_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Dump_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Dump_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Dump_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Dump_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Dump_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Shutdown_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Shutdown_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Shutdown_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Shutdown_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Maintenance_Shutdown_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Maintenance_Shutdown_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_NodeDefaults_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_NodeDefaults_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_NodeDefaults_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_NodeDefaults_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_NodeDefaults_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_NodeDefaults_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_SetNodeDefault_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_SetNodeDefault_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_SetNodeDefault_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_SetNodeDefault_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_SetNodeDefault_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_SetNodeDefault_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_RemoveNodeDefault_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_RemoveNodeDefault_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_RemoveNodeDefault_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_RemoveNodeDefault_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* NodeDefault_RemoveNodeDefault_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  NodeDefault_RemoveNodeDefault_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseExpr_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseExpr_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseExpr_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseExpr_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseExpr_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParsePat_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParsePat_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParsePat_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParsePat_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParsePat_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParsePat_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseType_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseType_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseType_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseType_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseType_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseType_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseNodeExpr_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseNodeExpr_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseNodeExpr_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseNodeExpr_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Parser_ParseNodeExpr_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Parser_ParseNodeExpr_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Process_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Process_reflection_ = NULL;
const ::google::protobuf::Descriptor* Process_Processes_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Process_Processes_reflection_ = NULL;
const ::google::protobuf::Descriptor* Process_Processes_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Process_Processes_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Process_Processes_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Process_Processes_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Process_Terminate_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Process_Terminate_reflection_ = NULL;
const ::google::protobuf::Descriptor* Process_Terminate_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Process_Terminate_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Process_Terminate_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Process_Terminate_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Projects_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Projects_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Projects_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Projects_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_Projects_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_Projects_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_ProjectByID_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_ProjectByID_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_ProjectByID_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_ProjectByID_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_ProjectByID_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_ProjectByID_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CreateProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CreateProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CreateProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CreateProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CreateProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CreateProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_OpenProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_OpenProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_OpenProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_OpenProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_OpenProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_OpenProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_UpdateProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_UpdateProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_UpdateProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_UpdateProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_UpdateProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_UpdateProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CloseProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CloseProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CloseProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CloseProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_CloseProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_CloseProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_StoreProject_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_StoreProject_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_StoreProject_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_StoreProject_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Project_StoreProject_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Project_StoreProject_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Properties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_reflection_ = NULL;
const ::google::protobuf::Descriptor* Properties_GetProperties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_GetProperties_reflection_ = NULL;
const ::google::protobuf::Descriptor* Properties_GetProperties_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_GetProperties_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Properties_GetProperties_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_GetProperties_Result_reflection_ = NULL;
const ::google::protobuf::Descriptor* Properties_SetProperties_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_SetProperties_reflection_ = NULL;
const ::google::protobuf::Descriptor* Properties_SetProperties_Args_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_SetProperties_Args_reflection_ = NULL;
const ::google::protobuf::Descriptor* Properties_SetProperties_Result_descriptor_ = NULL;
const ::google::protobuf::internal::GeneratedMessageReflection*
  Properties_SetProperties_Result_reflection_ = NULL;

}  // namespace


void protobuf_AssignDesc_server_2dapi_2eproto() {
  protobuf_AddDesc_server_2dapi_2eproto();
  const ::google::protobuf::FileDescriptor* file =
    ::google::protobuf::DescriptorPool::generated_pool()->FindFileByName(
      "server-api.proto");
  GOOGLE_CHECK(file != NULL);
  Request_descriptor_ = file->message_type(0);
  static const int Request_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, method_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, async_),
  };
  Request_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Request_descriptor_,
      Request::default_instance_,
      Request_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Request, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Request));
  Request_Method_descriptor_ = Request_descriptor_->enum_type(0);
  Response_descriptor_ = file->message_type(1);
  static const int Response_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, id_),
  };
  Response_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Response_descriptor_,
      Response::default_instance_,
      Response_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _unknown_fields_),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Response, _extensions_),
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Response));
  Response_Type_descriptor_ = Response_descriptor_->enum_type(0);
  Exception_descriptor_ = file->message_type(2);
  static const int Exception_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exception, message_),
  };
  Exception_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Exception_descriptor_,
      Exception::default_instance_,
      Exception_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exception, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Exception, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Exception));
  AST_descriptor_ = file->message_type(3);
  static const int AST_offsets_[1] = {
  };
  AST_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_descriptor_,
      AST::default_instance_,
      AST_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST));
  AST_Definitions_descriptor_ = AST_descriptor_->nested_type(0);
  static const int AST_Definitions_offsets_[1] = {
  };
  AST_Definitions_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_Definitions_descriptor_,
      AST_Definitions::default_instance_,
      AST_Definitions_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_Definitions));
  AST_Definitions_Args_descriptor_ = AST_Definitions_descriptor_->nested_type(0);
  static const int AST_Definitions_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Args, maxdepth_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Args, projectid_),
  };
  AST_Definitions_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_Definitions_Args_descriptor_,
      AST_Definitions_Args::default_instance_,
      AST_Definitions_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_Definitions_Args));
  AST_Definitions_Result_descriptor_ = AST_Definitions_descriptor_->nested_type(1);
  static const int AST_Definitions_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Result, focus_),
  };
  AST_Definitions_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_Definitions_Result_descriptor_,
      AST_Definitions_Result::default_instance_,
      AST_Definitions_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Definitions_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_Definitions_Result));
  AST_AddModule_descriptor_ = AST_descriptor_->nested_type(1);
  static const int AST_AddModule_offsets_[1] = {
  };
  AST_AddModule_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddModule_descriptor_,
      AST_AddModule::default_instance_,
      AST_AddModule_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddModule));
  AST_AddModule_Args_descriptor_ = AST_AddModule_descriptor_->nested_type(0);
  static const int AST_AddModule_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Args, module_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Args, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Args, projectid_),
  };
  AST_AddModule_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddModule_Args_descriptor_,
      AST_AddModule_Args::default_instance_,
      AST_AddModule_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddModule_Args));
  AST_AddModule_Result_descriptor_ = AST_AddModule_descriptor_->nested_type(1);
  static const int AST_AddModule_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Result, module_),
  };
  AST_AddModule_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddModule_Result_descriptor_,
      AST_AddModule_Result::default_instance_,
      AST_AddModule_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddModule_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddModule_Result));
  AST_AddClass_descriptor_ = AST_descriptor_->nested_type(2);
  static const int AST_AddClass_offsets_[1] = {
  };
  AST_AddClass_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddClass_descriptor_,
      AST_AddClass::default_instance_,
      AST_AddClass_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddClass));
  AST_AddClass_Args_descriptor_ = AST_AddClass_descriptor_->nested_type(0);
  static const int AST_AddClass_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Args, class__),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Args, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Args, projectid_),
  };
  AST_AddClass_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddClass_Args_descriptor_,
      AST_AddClass_Args::default_instance_,
      AST_AddClass_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddClass_Args));
  AST_AddClass_Result_descriptor_ = AST_AddClass_descriptor_->nested_type(1);
  static const int AST_AddClass_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Result, class__),
  };
  AST_AddClass_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddClass_Result_descriptor_,
      AST_AddClass_Result::default_instance_,
      AST_AddClass_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddClass_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddClass_Result));
  AST_AddFunction_descriptor_ = AST_descriptor_->nested_type(3);
  static const int AST_AddFunction_offsets_[1] = {
  };
  AST_AddFunction_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddFunction_descriptor_,
      AST_AddFunction::default_instance_,
      AST_AddFunction_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddFunction));
  AST_AddFunction_Args_descriptor_ = AST_AddFunction_descriptor_->nested_type(0);
  static const int AST_AddFunction_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Args, function_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Args, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Args, projectid_),
  };
  AST_AddFunction_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddFunction_Args_descriptor_,
      AST_AddFunction_Args::default_instance_,
      AST_AddFunction_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddFunction_Args));
  AST_AddFunction_Result_descriptor_ = AST_AddFunction_descriptor_->nested_type(1);
  static const int AST_AddFunction_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Result, function_),
  };
  AST_AddFunction_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_AddFunction_Result_descriptor_,
      AST_AddFunction_Result::default_instance_,
      AST_AddFunction_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_AddFunction_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_AddFunction_Result));
  AST_UpdateModuleCls_descriptor_ = AST_descriptor_->nested_type(4);
  static const int AST_UpdateModuleCls_offsets_[1] = {
  };
  AST_UpdateModuleCls_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleCls_descriptor_,
      AST_UpdateModuleCls::default_instance_,
      AST_UpdateModuleCls_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleCls));
  AST_UpdateModuleCls_Args_descriptor_ = AST_UpdateModuleCls_descriptor_->nested_type(0);
  static const int AST_UpdateModuleCls_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls_Args, cls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls_Args, projectid_),
  };
  AST_UpdateModuleCls_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleCls_Args_descriptor_,
      AST_UpdateModuleCls_Args::default_instance_,
      AST_UpdateModuleCls_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleCls_Args));
  AST_UpdateModuleCls_Result_descriptor_ = AST_UpdateModuleCls_descriptor_->nested_type(1);
  static const int AST_UpdateModuleCls_Result_offsets_[1] = {
  };
  AST_UpdateModuleCls_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleCls_Result_descriptor_,
      AST_UpdateModuleCls_Result::default_instance_,
      AST_UpdateModuleCls_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleCls_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleCls_Result));
  AST_UpdateModuleImports_descriptor_ = AST_descriptor_->nested_type(5);
  static const int AST_UpdateModuleImports_offsets_[1] = {
  };
  AST_UpdateModuleImports_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleImports_descriptor_,
      AST_UpdateModuleImports::default_instance_,
      AST_UpdateModuleImports_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleImports));
  AST_UpdateModuleImports_Args_descriptor_ = AST_UpdateModuleImports_descriptor_->nested_type(0);
  static const int AST_UpdateModuleImports_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports_Args, imports_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports_Args, projectid_),
  };
  AST_UpdateModuleImports_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleImports_Args_descriptor_,
      AST_UpdateModuleImports_Args::default_instance_,
      AST_UpdateModuleImports_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleImports_Args));
  AST_UpdateModuleImports_Result_descriptor_ = AST_UpdateModuleImports_descriptor_->nested_type(1);
  static const int AST_UpdateModuleImports_Result_offsets_[1] = {
  };
  AST_UpdateModuleImports_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleImports_Result_descriptor_,
      AST_UpdateModuleImports_Result::default_instance_,
      AST_UpdateModuleImports_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleImports_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleImports_Result));
  AST_UpdateModuleFields_descriptor_ = AST_descriptor_->nested_type(6);
  static const int AST_UpdateModuleFields_offsets_[1] = {
  };
  AST_UpdateModuleFields_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleFields_descriptor_,
      AST_UpdateModuleFields::default_instance_,
      AST_UpdateModuleFields_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleFields));
  AST_UpdateModuleFields_Args_descriptor_ = AST_UpdateModuleFields_descriptor_->nested_type(0);
  static const int AST_UpdateModuleFields_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields_Args, fields_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields_Args, projectid_),
  };
  AST_UpdateModuleFields_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleFields_Args_descriptor_,
      AST_UpdateModuleFields_Args::default_instance_,
      AST_UpdateModuleFields_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleFields_Args));
  AST_UpdateModuleFields_Result_descriptor_ = AST_UpdateModuleFields_descriptor_->nested_type(1);
  static const int AST_UpdateModuleFields_Result_offsets_[1] = {
  };
  AST_UpdateModuleFields_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateModuleFields_Result_descriptor_,
      AST_UpdateModuleFields_Result::default_instance_,
      AST_UpdateModuleFields_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateModuleFields_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateModuleFields_Result));
  AST_UpdateDataCls_descriptor_ = AST_descriptor_->nested_type(7);
  static const int AST_UpdateDataCls_offsets_[1] = {
  };
  AST_UpdateDataCls_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataCls_descriptor_,
      AST_UpdateDataCls::default_instance_,
      AST_UpdateDataCls_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataCls));
  AST_UpdateDataCls_Args_descriptor_ = AST_UpdateDataCls_descriptor_->nested_type(0);
  static const int AST_UpdateDataCls_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls_Args, cls_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls_Args, projectid_),
  };
  AST_UpdateDataCls_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataCls_Args_descriptor_,
      AST_UpdateDataCls_Args::default_instance_,
      AST_UpdateDataCls_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataCls_Args));
  AST_UpdateDataCls_Result_descriptor_ = AST_UpdateDataCls_descriptor_->nested_type(1);
  static const int AST_UpdateDataCls_Result_offsets_[1] = {
  };
  AST_UpdateDataCls_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataCls_Result_descriptor_,
      AST_UpdateDataCls_Result::default_instance_,
      AST_UpdateDataCls_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCls_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataCls_Result));
  AST_UpdateDataCons_descriptor_ = AST_descriptor_->nested_type(8);
  static const int AST_UpdateDataCons_offsets_[1] = {
  };
  AST_UpdateDataCons_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataCons_descriptor_,
      AST_UpdateDataCons::default_instance_,
      AST_UpdateDataCons_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataCons));
  AST_UpdateDataCons_Args_descriptor_ = AST_UpdateDataCons_descriptor_->nested_type(0);
  static const int AST_UpdateDataCons_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons_Args, cons_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons_Args, projectid_),
  };
  AST_UpdateDataCons_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataCons_Args_descriptor_,
      AST_UpdateDataCons_Args::default_instance_,
      AST_UpdateDataCons_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataCons_Args));
  AST_UpdateDataCons_Result_descriptor_ = AST_UpdateDataCons_descriptor_->nested_type(1);
  static const int AST_UpdateDataCons_Result_offsets_[1] = {
  };
  AST_UpdateDataCons_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataCons_Result_descriptor_,
      AST_UpdateDataCons_Result::default_instance_,
      AST_UpdateDataCons_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataCons_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataCons_Result));
  AST_UpdateDataClasses_descriptor_ = AST_descriptor_->nested_type(9);
  static const int AST_UpdateDataClasses_offsets_[1] = {
  };
  AST_UpdateDataClasses_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataClasses_descriptor_,
      AST_UpdateDataClasses::default_instance_,
      AST_UpdateDataClasses_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataClasses));
  AST_UpdateDataClasses_Args_descriptor_ = AST_UpdateDataClasses_descriptor_->nested_type(0);
  static const int AST_UpdateDataClasses_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses_Args, classes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses_Args, projectid_),
  };
  AST_UpdateDataClasses_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataClasses_Args_descriptor_,
      AST_UpdateDataClasses_Args::default_instance_,
      AST_UpdateDataClasses_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataClasses_Args));
  AST_UpdateDataClasses_Result_descriptor_ = AST_UpdateDataClasses_descriptor_->nested_type(1);
  static const int AST_UpdateDataClasses_Result_offsets_[1] = {
  };
  AST_UpdateDataClasses_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataClasses_Result_descriptor_,
      AST_UpdateDataClasses_Result::default_instance_,
      AST_UpdateDataClasses_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataClasses_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataClasses_Result));
  AST_UpdateDataMethods_descriptor_ = AST_descriptor_->nested_type(10);
  static const int AST_UpdateDataMethods_offsets_[1] = {
  };
  AST_UpdateDataMethods_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataMethods_descriptor_,
      AST_UpdateDataMethods::default_instance_,
      AST_UpdateDataMethods_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataMethods));
  AST_UpdateDataMethods_Args_descriptor_ = AST_UpdateDataMethods_descriptor_->nested_type(0);
  static const int AST_UpdateDataMethods_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods_Args, methods_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods_Args, projectid_),
  };
  AST_UpdateDataMethods_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataMethods_Args_descriptor_,
      AST_UpdateDataMethods_Args::default_instance_,
      AST_UpdateDataMethods_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataMethods_Args));
  AST_UpdateDataMethods_Result_descriptor_ = AST_UpdateDataMethods_descriptor_->nested_type(1);
  static const int AST_UpdateDataMethods_Result_offsets_[1] = {
  };
  AST_UpdateDataMethods_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateDataMethods_Result_descriptor_,
      AST_UpdateDataMethods_Result::default_instance_,
      AST_UpdateDataMethods_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateDataMethods_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateDataMethods_Result));
  AST_UpdateFunctionName_descriptor_ = AST_descriptor_->nested_type(11);
  static const int AST_UpdateFunctionName_offsets_[1] = {
  };
  AST_UpdateFunctionName_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionName_descriptor_,
      AST_UpdateFunctionName::default_instance_,
      AST_UpdateFunctionName_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionName));
  AST_UpdateFunctionName_Args_descriptor_ = AST_UpdateFunctionName_descriptor_->nested_type(0);
  static const int AST_UpdateFunctionName_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName_Args, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName_Args, projectid_),
  };
  AST_UpdateFunctionName_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionName_Args_descriptor_,
      AST_UpdateFunctionName_Args::default_instance_,
      AST_UpdateFunctionName_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionName_Args));
  AST_UpdateFunctionName_Result_descriptor_ = AST_UpdateFunctionName_descriptor_->nested_type(1);
  static const int AST_UpdateFunctionName_Result_offsets_[1] = {
  };
  AST_UpdateFunctionName_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionName_Result_descriptor_,
      AST_UpdateFunctionName_Result::default_instance_,
      AST_UpdateFunctionName_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionName_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionName_Result));
  AST_UpdateFunctionPath_descriptor_ = AST_descriptor_->nested_type(12);
  static const int AST_UpdateFunctionPath_offsets_[1] = {
  };
  AST_UpdateFunctionPath_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionPath_descriptor_,
      AST_UpdateFunctionPath::default_instance_,
      AST_UpdateFunctionPath_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionPath));
  AST_UpdateFunctionPath_Args_descriptor_ = AST_UpdateFunctionPath_descriptor_->nested_type(0);
  static const int AST_UpdateFunctionPath_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath_Args, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath_Args, projectid_),
  };
  AST_UpdateFunctionPath_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionPath_Args_descriptor_,
      AST_UpdateFunctionPath_Args::default_instance_,
      AST_UpdateFunctionPath_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionPath_Args));
  AST_UpdateFunctionPath_Result_descriptor_ = AST_UpdateFunctionPath_descriptor_->nested_type(1);
  static const int AST_UpdateFunctionPath_Result_offsets_[1] = {
  };
  AST_UpdateFunctionPath_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionPath_Result_descriptor_,
      AST_UpdateFunctionPath_Result::default_instance_,
      AST_UpdateFunctionPath_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionPath_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionPath_Result));
  AST_UpdateFunctionInputs_descriptor_ = AST_descriptor_->nested_type(13);
  static const int AST_UpdateFunctionInputs_offsets_[1] = {
  };
  AST_UpdateFunctionInputs_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionInputs_descriptor_,
      AST_UpdateFunctionInputs::default_instance_,
      AST_UpdateFunctionInputs_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionInputs));
  AST_UpdateFunctionInputs_Args_descriptor_ = AST_UpdateFunctionInputs_descriptor_->nested_type(0);
  static const int AST_UpdateFunctionInputs_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs_Args, inputs_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs_Args, projectid_),
  };
  AST_UpdateFunctionInputs_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionInputs_Args_descriptor_,
      AST_UpdateFunctionInputs_Args::default_instance_,
      AST_UpdateFunctionInputs_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionInputs_Args));
  AST_UpdateFunctionInputs_Result_descriptor_ = AST_UpdateFunctionInputs_descriptor_->nested_type(1);
  static const int AST_UpdateFunctionInputs_Result_offsets_[1] = {
  };
  AST_UpdateFunctionInputs_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionInputs_Result_descriptor_,
      AST_UpdateFunctionInputs_Result::default_instance_,
      AST_UpdateFunctionInputs_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionInputs_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionInputs_Result));
  AST_UpdateFunctionOutput_descriptor_ = AST_descriptor_->nested_type(14);
  static const int AST_UpdateFunctionOutput_offsets_[1] = {
  };
  AST_UpdateFunctionOutput_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionOutput_descriptor_,
      AST_UpdateFunctionOutput::default_instance_,
      AST_UpdateFunctionOutput_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionOutput));
  AST_UpdateFunctionOutput_Args_descriptor_ = AST_UpdateFunctionOutput_descriptor_->nested_type(0);
  static const int AST_UpdateFunctionOutput_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput_Args, output_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput_Args, projectid_),
  };
  AST_UpdateFunctionOutput_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionOutput_Args_descriptor_,
      AST_UpdateFunctionOutput_Args::default_instance_,
      AST_UpdateFunctionOutput_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionOutput_Args));
  AST_UpdateFunctionOutput_Result_descriptor_ = AST_UpdateFunctionOutput_descriptor_->nested_type(1);
  static const int AST_UpdateFunctionOutput_Result_offsets_[1] = {
  };
  AST_UpdateFunctionOutput_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_UpdateFunctionOutput_Result_descriptor_,
      AST_UpdateFunctionOutput_Result::default_instance_,
      AST_UpdateFunctionOutput_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_UpdateFunctionOutput_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_UpdateFunctionOutput_Result));
  AST_Remove_descriptor_ = AST_descriptor_->nested_type(15);
  static const int AST_Remove_offsets_[1] = {
  };
  AST_Remove_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_Remove_descriptor_,
      AST_Remove::default_instance_,
      AST_Remove_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_Remove));
  AST_Remove_Args_descriptor_ = AST_Remove_descriptor_->nested_type(0);
  static const int AST_Remove_Args_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove_Args, projectid_),
  };
  AST_Remove_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_Remove_Args_descriptor_,
      AST_Remove_Args::default_instance_,
      AST_Remove_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_Remove_Args));
  AST_Remove_Result_descriptor_ = AST_Remove_descriptor_->nested_type(1);
  static const int AST_Remove_Result_offsets_[1] = {
  };
  AST_Remove_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_Remove_Result_descriptor_,
      AST_Remove_Result::default_instance_,
      AST_Remove_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_Remove_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_Remove_Result));
  AST_ResolveDefinition_descriptor_ = AST_descriptor_->nested_type(16);
  static const int AST_ResolveDefinition_offsets_[1] = {
  };
  AST_ResolveDefinition_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_ResolveDefinition_descriptor_,
      AST_ResolveDefinition::default_instance_,
      AST_ResolveDefinition_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_ResolveDefinition));
  AST_ResolveDefinition_Args_descriptor_ = AST_ResolveDefinition_descriptor_->nested_type(0);
  static const int AST_ResolveDefinition_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Args, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Args, parentbc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Args, projectid_),
  };
  AST_ResolveDefinition_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_ResolveDefinition_Args_descriptor_,
      AST_ResolveDefinition_Args::default_instance_,
      AST_ResolveDefinition_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_ResolveDefinition_Args));
  AST_ResolveDefinition_Result_descriptor_ = AST_ResolveDefinition_descriptor_->nested_type(1);
  static const int AST_ResolveDefinition_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Result, astptr_),
  };
  AST_ResolveDefinition_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      AST_ResolveDefinition_Result_descriptor_,
      AST_ResolveDefinition_Result::default_instance_,
      AST_ResolveDefinition_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(AST_ResolveDefinition_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(AST_ResolveDefinition_Result));
  FileSystem_descriptor_ = file->message_type(4);
  static const int FileSystem_offsets_[1] = {
  };
  FileSystem_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_descriptor_,
      FileSystem::default_instance_,
      FileSystem_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem));
  FileSystem_LS_descriptor_ = FileSystem_descriptor_->nested_type(0);
  static const int FileSystem_LS_offsets_[1] = {
  };
  FileSystem_LS_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_LS_descriptor_,
      FileSystem_LS::default_instance_,
      FileSystem_LS_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_LS));
  FileSystem_LS_Args_descriptor_ = FileSystem_LS_descriptor_->nested_type(0);
  static const int FileSystem_LS_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Args, path_),
  };
  FileSystem_LS_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_LS_Args_descriptor_,
      FileSystem_LS_Args::default_instance_,
      FileSystem_LS_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_LS_Args));
  FileSystem_LS_Result_descriptor_ = FileSystem_LS_descriptor_->nested_type(1);
  static const int FileSystem_LS_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Result, items_),
  };
  FileSystem_LS_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_LS_Result_descriptor_,
      FileSystem_LS_Result::default_instance_,
      FileSystem_LS_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_LS_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_LS_Result));
  FileSystem_Stat_descriptor_ = FileSystem_descriptor_->nested_type(1);
  static const int FileSystem_Stat_offsets_[1] = {
  };
  FileSystem_Stat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Stat_descriptor_,
      FileSystem_Stat::default_instance_,
      FileSystem_Stat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Stat));
  FileSystem_Stat_Args_descriptor_ = FileSystem_Stat_descriptor_->nested_type(0);
  static const int FileSystem_Stat_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Args, path_),
  };
  FileSystem_Stat_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Stat_Args_descriptor_,
      FileSystem_Stat_Args::default_instance_,
      FileSystem_Stat_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Stat_Args));
  FileSystem_Stat_Result_descriptor_ = FileSystem_Stat_descriptor_->nested_type(1);
  static const int FileSystem_Stat_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Result, item_),
  };
  FileSystem_Stat_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Stat_Result_descriptor_,
      FileSystem_Stat_Result::default_instance_,
      FileSystem_Stat_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Stat_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Stat_Result));
  FileSystem_MkDir_descriptor_ = FileSystem_descriptor_->nested_type(2);
  static const int FileSystem_MkDir_offsets_[1] = {
  };
  FileSystem_MkDir_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MkDir_descriptor_,
      FileSystem_MkDir::default_instance_,
      FileSystem_MkDir_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MkDir));
  FileSystem_MkDir_Args_descriptor_ = FileSystem_MkDir_descriptor_->nested_type(0);
  static const int FileSystem_MkDir_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Args, path_),
  };
  FileSystem_MkDir_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MkDir_Args_descriptor_,
      FileSystem_MkDir_Args::default_instance_,
      FileSystem_MkDir_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MkDir_Args));
  FileSystem_MkDir_Result_descriptor_ = FileSystem_MkDir_descriptor_->nested_type(1);
  static const int FileSystem_MkDir_Result_offsets_[1] = {
  };
  FileSystem_MkDir_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MkDir_Result_descriptor_,
      FileSystem_MkDir_Result::default_instance_,
      FileSystem_MkDir_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MkDir_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MkDir_Result));
  FileSystem_Touch_descriptor_ = FileSystem_descriptor_->nested_type(3);
  static const int FileSystem_Touch_offsets_[1] = {
  };
  FileSystem_Touch_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Touch_descriptor_,
      FileSystem_Touch::default_instance_,
      FileSystem_Touch_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Touch));
  FileSystem_Touch_Args_descriptor_ = FileSystem_Touch_descriptor_->nested_type(0);
  static const int FileSystem_Touch_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Args, path_),
  };
  FileSystem_Touch_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Touch_Args_descriptor_,
      FileSystem_Touch_Args::default_instance_,
      FileSystem_Touch_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Touch_Args));
  FileSystem_Touch_Result_descriptor_ = FileSystem_Touch_descriptor_->nested_type(1);
  static const int FileSystem_Touch_Result_offsets_[1] = {
  };
  FileSystem_Touch_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_Touch_Result_descriptor_,
      FileSystem_Touch_Result::default_instance_,
      FileSystem_Touch_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_Touch_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_Touch_Result));
  FileSystem_RM_descriptor_ = FileSystem_descriptor_->nested_type(4);
  static const int FileSystem_RM_offsets_[1] = {
  };
  FileSystem_RM_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_RM_descriptor_,
      FileSystem_RM::default_instance_,
      FileSystem_RM_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_RM));
  FileSystem_RM_Args_descriptor_ = FileSystem_RM_descriptor_->nested_type(0);
  static const int FileSystem_RM_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Args, path_),
  };
  FileSystem_RM_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_RM_Args_descriptor_,
      FileSystem_RM_Args::default_instance_,
      FileSystem_RM_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_RM_Args));
  FileSystem_RM_Result_descriptor_ = FileSystem_RM_descriptor_->nested_type(1);
  static const int FileSystem_RM_Result_offsets_[1] = {
  };
  FileSystem_RM_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_RM_Result_descriptor_,
      FileSystem_RM_Result::default_instance_,
      FileSystem_RM_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_RM_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_RM_Result));
  FileSystem_CP_descriptor_ = FileSystem_descriptor_->nested_type(5);
  static const int FileSystem_CP_offsets_[1] = {
  };
  FileSystem_CP_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_CP_descriptor_,
      FileSystem_CP::default_instance_,
      FileSystem_CP_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_CP));
  FileSystem_CP_Args_descriptor_ = FileSystem_CP_descriptor_->nested_type(0);
  static const int FileSystem_CP_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Args, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Args, dst_),
  };
  FileSystem_CP_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_CP_Args_descriptor_,
      FileSystem_CP_Args::default_instance_,
      FileSystem_CP_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_CP_Args));
  FileSystem_CP_Result_descriptor_ = FileSystem_CP_descriptor_->nested_type(1);
  static const int FileSystem_CP_Result_offsets_[1] = {
  };
  FileSystem_CP_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_CP_Result_descriptor_,
      FileSystem_CP_Result::default_instance_,
      FileSystem_CP_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_CP_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_CP_Result));
  FileSystem_MV_descriptor_ = FileSystem_descriptor_->nested_type(6);
  static const int FileSystem_MV_offsets_[1] = {
  };
  FileSystem_MV_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MV_descriptor_,
      FileSystem_MV::default_instance_,
      FileSystem_MV_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MV));
  FileSystem_MV_Args_descriptor_ = FileSystem_MV_descriptor_->nested_type(0);
  static const int FileSystem_MV_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Args, src_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Args, dst_),
  };
  FileSystem_MV_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MV_Args_descriptor_,
      FileSystem_MV_Args::default_instance_,
      FileSystem_MV_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MV_Args));
  FileSystem_MV_Result_descriptor_ = FileSystem_MV_descriptor_->nested_type(1);
  static const int FileSystem_MV_Result_offsets_[1] = {
  };
  FileSystem_MV_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      FileSystem_MV_Result_descriptor_,
      FileSystem_MV_Result::default_instance_,
      FileSystem_MV_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FileSystem_MV_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(FileSystem_MV_Result));
  Graph_descriptor_ = file->message_type(5);
  static const int Graph_offsets_[1] = {
  };
  Graph_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_descriptor_,
      Graph::default_instance_,
      Graph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph));
  Graph_NodesGraph_descriptor_ = Graph_descriptor_->nested_type(0);
  static const int Graph_NodesGraph_offsets_[1] = {
  };
  Graph_NodesGraph_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_NodesGraph_descriptor_,
      Graph_NodesGraph::default_instance_,
      Graph_NodesGraph_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_NodesGraph));
  Graph_NodesGraph_Args_descriptor_ = Graph_NodesGraph_descriptor_->nested_type(0);
  static const int Graph_NodesGraph_Args_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph_Args, projectid_),
  };
  Graph_NodesGraph_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_NodesGraph_Args_descriptor_,
      Graph_NodesGraph_Args::default_instance_,
      Graph_NodesGraph_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_NodesGraph_Args));
  Graph_NodesGraph_Result_descriptor_ = Graph_NodesGraph_descriptor_->nested_type(1);
  static const int Graph_NodesGraph_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph_Result, graph_),
  };
  Graph_NodesGraph_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_NodesGraph_Result_descriptor_,
      Graph_NodesGraph_Result::default_instance_,
      Graph_NodesGraph_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodesGraph_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_NodesGraph_Result));
  Graph_NodeByID_descriptor_ = Graph_descriptor_->nested_type(1);
  static const int Graph_NodeByID_offsets_[1] = {
  };
  Graph_NodeByID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_NodeByID_descriptor_,
      Graph_NodeByID::default_instance_,
      Graph_NodeByID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_NodeByID));
  Graph_NodeByID_Args_descriptor_ = Graph_NodeByID_descriptor_->nested_type(0);
  static const int Graph_NodeByID_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Args, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Args, projectid_),
  };
  Graph_NodeByID_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_NodeByID_Args_descriptor_,
      Graph_NodeByID_Args::default_instance_,
      Graph_NodeByID_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_NodeByID_Args));
  Graph_NodeByID_Result_descriptor_ = Graph_NodeByID_descriptor_->nested_type(1);
  static const int Graph_NodeByID_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Result, node_),
  };
  Graph_NodeByID_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_NodeByID_Result_descriptor_,
      Graph_NodeByID_Result::default_instance_,
      Graph_NodeByID_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_NodeByID_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_NodeByID_Result));
  Graph_AddNode_descriptor_ = Graph_descriptor_->nested_type(2);
  static const int Graph_AddNode_offsets_[1] = {
  };
  Graph_AddNode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_AddNode_descriptor_,
      Graph_AddNode::default_instance_,
      Graph_AddNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_AddNode));
  Graph_AddNode_Args_descriptor_ = Graph_AddNode_descriptor_->nested_type(0);
  static const int Graph_AddNode_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Args, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Args, projectid_),
  };
  Graph_AddNode_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_AddNode_Args_descriptor_,
      Graph_AddNode_Args::default_instance_,
      Graph_AddNode_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_AddNode_Args));
  Graph_AddNode_Result_descriptor_ = Graph_AddNode_descriptor_->nested_type(1);
  static const int Graph_AddNode_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Result, nodeid_),
  };
  Graph_AddNode_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_AddNode_Result_descriptor_,
      Graph_AddNode_Result::default_instance_,
      Graph_AddNode_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_AddNode_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_AddNode_Result));
  Graph_UpdateNode_descriptor_ = Graph_descriptor_->nested_type(3);
  static const int Graph_UpdateNode_offsets_[1] = {
  };
  Graph_UpdateNode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_UpdateNode_descriptor_,
      Graph_UpdateNode::default_instance_,
      Graph_UpdateNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_UpdateNode));
  Graph_UpdateNode_Args_descriptor_ = Graph_UpdateNode_descriptor_->nested_type(0);
  static const int Graph_UpdateNode_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Args, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Args, projectid_),
  };
  Graph_UpdateNode_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_UpdateNode_Args_descriptor_,
      Graph_UpdateNode_Args::default_instance_,
      Graph_UpdateNode_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_UpdateNode_Args));
  Graph_UpdateNode_Result_descriptor_ = Graph_UpdateNode_descriptor_->nested_type(1);
  static const int Graph_UpdateNode_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Result, nodeid_),
  };
  Graph_UpdateNode_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_UpdateNode_Result_descriptor_,
      Graph_UpdateNode_Result::default_instance_,
      Graph_UpdateNode_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNode_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_UpdateNode_Result));
  Graph_UpdateNodeInPlace_descriptor_ = Graph_descriptor_->nested_type(4);
  static const int Graph_UpdateNodeInPlace_offsets_[1] = {
  };
  Graph_UpdateNodeInPlace_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_UpdateNodeInPlace_descriptor_,
      Graph_UpdateNodeInPlace::default_instance_,
      Graph_UpdateNodeInPlace_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_UpdateNodeInPlace));
  Graph_UpdateNodeInPlace_Args_descriptor_ = Graph_UpdateNodeInPlace_descriptor_->nested_type(0);
  static const int Graph_UpdateNodeInPlace_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace_Args, node_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace_Args, projectid_),
  };
  Graph_UpdateNodeInPlace_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_UpdateNodeInPlace_Args_descriptor_,
      Graph_UpdateNodeInPlace_Args::default_instance_,
      Graph_UpdateNodeInPlace_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_UpdateNodeInPlace_Args));
  Graph_UpdateNodeInPlace_Result_descriptor_ = Graph_UpdateNodeInPlace_descriptor_->nested_type(1);
  static const int Graph_UpdateNodeInPlace_Result_offsets_[1] = {
  };
  Graph_UpdateNodeInPlace_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_UpdateNodeInPlace_Result_descriptor_,
      Graph_UpdateNodeInPlace_Result::default_instance_,
      Graph_UpdateNodeInPlace_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_UpdateNodeInPlace_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_UpdateNodeInPlace_Result));
  Graph_RemoveNode_descriptor_ = Graph_descriptor_->nested_type(5);
  static const int Graph_RemoveNode_offsets_[1] = {
  };
  Graph_RemoveNode_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_RemoveNode_descriptor_,
      Graph_RemoveNode::default_instance_,
      Graph_RemoveNode_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_RemoveNode));
  Graph_RemoveNode_Args_descriptor_ = Graph_RemoveNode_descriptor_->nested_type(0);
  static const int Graph_RemoveNode_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode_Args, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode_Args, projectid_),
  };
  Graph_RemoveNode_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_RemoveNode_Args_descriptor_,
      Graph_RemoveNode_Args::default_instance_,
      Graph_RemoveNode_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_RemoveNode_Args));
  Graph_RemoveNode_Result_descriptor_ = Graph_RemoveNode_descriptor_->nested_type(1);
  static const int Graph_RemoveNode_Result_offsets_[1] = {
  };
  Graph_RemoveNode_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_RemoveNode_Result_descriptor_,
      Graph_RemoveNode_Result::default_instance_,
      Graph_RemoveNode_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_RemoveNode_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_RemoveNode_Result));
  Graph_Connect_descriptor_ = Graph_descriptor_->nested_type(6);
  static const int Graph_Connect_offsets_[1] = {
  };
  Graph_Connect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_Connect_descriptor_,
      Graph_Connect::default_instance_,
      Graph_Connect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_Connect));
  Graph_Connect_Args_descriptor_ = Graph_Connect_descriptor_->nested_type(0);
  static const int Graph_Connect_Args_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, srcnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, srcport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, dstnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, dstport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, projectid_),
  };
  Graph_Connect_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_Connect_Args_descriptor_,
      Graph_Connect_Args::default_instance_,
      Graph_Connect_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_Connect_Args));
  Graph_Connect_Result_descriptor_ = Graph_Connect_descriptor_->nested_type(1);
  static const int Graph_Connect_Result_offsets_[1] = {
  };
  Graph_Connect_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_Connect_Result_descriptor_,
      Graph_Connect_Result::default_instance_,
      Graph_Connect_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Connect_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_Connect_Result));
  Graph_Disconnect_descriptor_ = Graph_descriptor_->nested_type(7);
  static const int Graph_Disconnect_offsets_[1] = {
  };
  Graph_Disconnect_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_Disconnect_descriptor_,
      Graph_Disconnect::default_instance_,
      Graph_Disconnect_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_Disconnect));
  Graph_Disconnect_Args_descriptor_ = Graph_Disconnect_descriptor_->nested_type(0);
  static const int Graph_Disconnect_Args_offsets_[7] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, srcnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, srcport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, dstnodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, dstport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, projectid_),
  };
  Graph_Disconnect_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_Disconnect_Args_descriptor_,
      Graph_Disconnect_Args::default_instance_,
      Graph_Disconnect_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_Disconnect_Args));
  Graph_Disconnect_Result_descriptor_ = Graph_Disconnect_descriptor_->nested_type(1);
  static const int Graph_Disconnect_Result_offsets_[1] = {
  };
  Graph_Disconnect_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Graph_Disconnect_Result_descriptor_,
      Graph_Disconnect_Result::default_instance_,
      Graph_Disconnect_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Graph_Disconnect_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Graph_Disconnect_Result));
  Library_descriptor_ = file->message_type(6);
  static const int Library_offsets_[1] = {
  };
  Library_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_descriptor_,
      Library::default_instance_,
      Library_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library));
  Library_Libraries_descriptor_ = Library_descriptor_->nested_type(0);
  static const int Library_Libraries_offsets_[1] = {
  };
  Library_Libraries_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_Libraries_descriptor_,
      Library_Libraries::default_instance_,
      Library_Libraries_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_Libraries));
  Library_Libraries_Args_descriptor_ = Library_Libraries_descriptor_->nested_type(0);
  static const int Library_Libraries_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Args, projectid_),
  };
  Library_Libraries_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_Libraries_Args_descriptor_,
      Library_Libraries_Args::default_instance_,
      Library_Libraries_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_Libraries_Args));
  Library_Libraries_Result_descriptor_ = Library_Libraries_descriptor_->nested_type(1);
  static const int Library_Libraries_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Result, libraries_),
  };
  Library_Libraries_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_Libraries_Result_descriptor_,
      Library_Libraries_Result::default_instance_,
      Library_Libraries_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_Libraries_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_Libraries_Result));
  Library_LibraryByID_descriptor_ = Library_descriptor_->nested_type(1);
  static const int Library_LibraryByID_offsets_[1] = {
  };
  Library_LibraryByID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LibraryByID_descriptor_,
      Library_LibraryByID::default_instance_,
      Library_LibraryByID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LibraryByID));
  Library_LibraryByID_Args_descriptor_ = Library_LibraryByID_descriptor_->nested_type(0);
  static const int Library_LibraryByID_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Args, projectid_),
  };
  Library_LibraryByID_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LibraryByID_Args_descriptor_,
      Library_LibraryByID_Args::default_instance_,
      Library_LibraryByID_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LibraryByID_Args));
  Library_LibraryByID_Result_descriptor_ = Library_LibraryByID_descriptor_->nested_type(1);
  static const int Library_LibraryByID_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Result, library_),
  };
  Library_LibraryByID_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LibraryByID_Result_descriptor_,
      Library_LibraryByID_Result::default_instance_,
      Library_LibraryByID_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LibraryByID_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LibraryByID_Result));
  Library_CreateLibrary_descriptor_ = Library_descriptor_->nested_type(2);
  static const int Library_CreateLibrary_offsets_[1] = {
  };
  Library_CreateLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_CreateLibrary_descriptor_,
      Library_CreateLibrary::default_instance_,
      Library_CreateLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_CreateLibrary));
  Library_CreateLibrary_Args_descriptor_ = Library_CreateLibrary_descriptor_->nested_type(0);
  static const int Library_CreateLibrary_Args_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, projectid_),
  };
  Library_CreateLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_CreateLibrary_Args_descriptor_,
      Library_CreateLibrary_Args::default_instance_,
      Library_CreateLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_CreateLibrary_Args));
  Library_CreateLibrary_Result_descriptor_ = Library_CreateLibrary_descriptor_->nested_type(1);
  static const int Library_CreateLibrary_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Result, library_),
  };
  Library_CreateLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_CreateLibrary_Result_descriptor_,
      Library_CreateLibrary_Result::default_instance_,
      Library_CreateLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_CreateLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_CreateLibrary_Result));
  Library_LoadLibrary_descriptor_ = Library_descriptor_->nested_type(3);
  static const int Library_LoadLibrary_offsets_[1] = {
  };
  Library_LoadLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LoadLibrary_descriptor_,
      Library_LoadLibrary::default_instance_,
      Library_LoadLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LoadLibrary));
  Library_LoadLibrary_Args_descriptor_ = Library_LoadLibrary_descriptor_->nested_type(0);
  static const int Library_LoadLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Args, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Args, projectid_),
  };
  Library_LoadLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LoadLibrary_Args_descriptor_,
      Library_LoadLibrary_Args::default_instance_,
      Library_LoadLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LoadLibrary_Args));
  Library_LoadLibrary_Result_descriptor_ = Library_LoadLibrary_descriptor_->nested_type(1);
  static const int Library_LoadLibrary_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Result, library_),
  };
  Library_LoadLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_LoadLibrary_Result_descriptor_,
      Library_LoadLibrary_Result::default_instance_,
      Library_LoadLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_LoadLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_LoadLibrary_Result));
  Library_UnloadLibrary_descriptor_ = Library_descriptor_->nested_type(4);
  static const int Library_UnloadLibrary_offsets_[1] = {
  };
  Library_UnloadLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_UnloadLibrary_descriptor_,
      Library_UnloadLibrary::default_instance_,
      Library_UnloadLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_UnloadLibrary));
  Library_UnloadLibrary_Args_descriptor_ = Library_UnloadLibrary_descriptor_->nested_type(0);
  static const int Library_UnloadLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Args, projectid_),
  };
  Library_UnloadLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_UnloadLibrary_Args_descriptor_,
      Library_UnloadLibrary_Args::default_instance_,
      Library_UnloadLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_UnloadLibrary_Args));
  Library_UnloadLibrary_Result_descriptor_ = Library_UnloadLibrary_descriptor_->nested_type(1);
  static const int Library_UnloadLibrary_Result_offsets_[1] = {
  };
  Library_UnloadLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_UnloadLibrary_Result_descriptor_,
      Library_UnloadLibrary_Result::default_instance_,
      Library_UnloadLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_UnloadLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_UnloadLibrary_Result));
  Library_StoreLibrary_descriptor_ = Library_descriptor_->nested_type(5);
  static const int Library_StoreLibrary_offsets_[1] = {
  };
  Library_StoreLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_StoreLibrary_descriptor_,
      Library_StoreLibrary::default_instance_,
      Library_StoreLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_StoreLibrary));
  Library_StoreLibrary_Args_descriptor_ = Library_StoreLibrary_descriptor_->nested_type(0);
  static const int Library_StoreLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Args, projectid_),
  };
  Library_StoreLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_StoreLibrary_Args_descriptor_,
      Library_StoreLibrary_Args::default_instance_,
      Library_StoreLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_StoreLibrary_Args));
  Library_StoreLibrary_Result_descriptor_ = Library_StoreLibrary_descriptor_->nested_type(1);
  static const int Library_StoreLibrary_Result_offsets_[1] = {
  };
  Library_StoreLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_StoreLibrary_Result_descriptor_,
      Library_StoreLibrary_Result::default_instance_,
      Library_StoreLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_StoreLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_StoreLibrary_Result));
  Library_BuildLibrary_descriptor_ = Library_descriptor_->nested_type(6);
  static const int Library_BuildLibrary_offsets_[1] = {
  };
  Library_BuildLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_BuildLibrary_descriptor_,
      Library_BuildLibrary::default_instance_,
      Library_BuildLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_BuildLibrary));
  Library_BuildLibrary_Args_descriptor_ = Library_BuildLibrary_descriptor_->nested_type(0);
  static const int Library_BuildLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Args, projectid_),
  };
  Library_BuildLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_BuildLibrary_Args_descriptor_,
      Library_BuildLibrary_Args::default_instance_,
      Library_BuildLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_BuildLibrary_Args));
  Library_BuildLibrary_Result_descriptor_ = Library_BuildLibrary_descriptor_->nested_type(1);
  static const int Library_BuildLibrary_Result_offsets_[1] = {
  };
  Library_BuildLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_BuildLibrary_Result_descriptor_,
      Library_BuildLibrary_Result::default_instance_,
      Library_BuildLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_BuildLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_BuildLibrary_Result));
  Library_RunLibrary_descriptor_ = Library_descriptor_->nested_type(7);
  static const int Library_RunLibrary_offsets_[1] = {
  };
  Library_RunLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_RunLibrary_descriptor_,
      Library_RunLibrary::default_instance_,
      Library_RunLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_RunLibrary));
  Library_RunLibrary_Args_descriptor_ = Library_RunLibrary_descriptor_->nested_type(0);
  static const int Library_RunLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Args, projectid_),
  };
  Library_RunLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_RunLibrary_Args_descriptor_,
      Library_RunLibrary_Args::default_instance_,
      Library_RunLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_RunLibrary_Args));
  Library_RunLibrary_Result_descriptor_ = Library_RunLibrary_descriptor_->nested_type(1);
  static const int Library_RunLibrary_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Result, processid_),
  };
  Library_RunLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_RunLibrary_Result_descriptor_,
      Library_RunLibrary_Result::default_instance_,
      Library_RunLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_RunLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_RunLibrary_Result));
  Library_InterpretLibrary_descriptor_ = Library_descriptor_->nested_type(8);
  static const int Library_InterpretLibrary_offsets_[1] = {
  };
  Library_InterpretLibrary_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_InterpretLibrary_descriptor_,
      Library_InterpretLibrary::default_instance_,
      Library_InterpretLibrary_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_InterpretLibrary, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_InterpretLibrary, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_InterpretLibrary));
  Library_InterpretLibrary_Args_descriptor_ = Library_InterpretLibrary_descriptor_->nested_type(0);
  static const int Library_InterpretLibrary_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_InterpretLibrary_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_InterpretLibrary_Args, projectid_),
  };
  Library_InterpretLibrary_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_InterpretLibrary_Args_descriptor_,
      Library_InterpretLibrary_Args::default_instance_,
      Library_InterpretLibrary_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_InterpretLibrary_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_InterpretLibrary_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_InterpretLibrary_Args));
  Library_InterpretLibrary_Result_descriptor_ = Library_InterpretLibrary_descriptor_->nested_type(1);
  static const int Library_InterpretLibrary_Result_offsets_[1] = {
  };
  Library_InterpretLibrary_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Library_InterpretLibrary_Result_descriptor_,
      Library_InterpretLibrary_Result::default_instance_,
      Library_InterpretLibrary_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_InterpretLibrary_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Library_InterpretLibrary_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Library_InterpretLibrary_Result));
  Maintenance_descriptor_ = file->message_type(7);
  static const int Maintenance_offsets_[1] = {
  };
  Maintenance_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_descriptor_,
      Maintenance::default_instance_,
      Maintenance_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance));
  Maintenance_Initialize_descriptor_ = Maintenance_descriptor_->nested_type(0);
  static const int Maintenance_Initialize_offsets_[1] = {
  };
  Maintenance_Initialize_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Initialize_descriptor_,
      Maintenance_Initialize::default_instance_,
      Maintenance_Initialize_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Initialize));
  Maintenance_Initialize_Args_descriptor_ = Maintenance_Initialize_descriptor_->nested_type(0);
  static const int Maintenance_Initialize_Args_offsets_[1] = {
  };
  Maintenance_Initialize_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Initialize_Args_descriptor_,
      Maintenance_Initialize_Args::default_instance_,
      Maintenance_Initialize_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Initialize_Args));
  Maintenance_Initialize_Result_descriptor_ = Maintenance_Initialize_descriptor_->nested_type(1);
  static const int Maintenance_Initialize_Result_offsets_[1] = {
  };
  Maintenance_Initialize_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Initialize_Result_descriptor_,
      Maintenance_Initialize_Result::default_instance_,
      Maintenance_Initialize_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Initialize_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Initialize_Result));
  Maintenance_Ping_descriptor_ = Maintenance_descriptor_->nested_type(1);
  static const int Maintenance_Ping_offsets_[1] = {
  };
  Maintenance_Ping_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Ping_descriptor_,
      Maintenance_Ping::default_instance_,
      Maintenance_Ping_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Ping));
  Maintenance_Ping_Args_descriptor_ = Maintenance_Ping_descriptor_->nested_type(0);
  static const int Maintenance_Ping_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Args, data_),
  };
  Maintenance_Ping_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Ping_Args_descriptor_,
      Maintenance_Ping_Args::default_instance_,
      Maintenance_Ping_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Ping_Args));
  Maintenance_Ping_Result_descriptor_ = Maintenance_Ping_descriptor_->nested_type(1);
  static const int Maintenance_Ping_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Result, data_),
  };
  Maintenance_Ping_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Ping_Result_descriptor_,
      Maintenance_Ping_Result::default_instance_,
      Maintenance_Ping_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Ping_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Ping_Result));
  Maintenance_Dump_descriptor_ = Maintenance_descriptor_->nested_type(2);
  static const int Maintenance_Dump_offsets_[1] = {
  };
  Maintenance_Dump_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Dump_descriptor_,
      Maintenance_Dump::default_instance_,
      Maintenance_Dump_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Dump));
  Maintenance_Dump_Args_descriptor_ = Maintenance_Dump_descriptor_->nested_type(0);
  static const int Maintenance_Dump_Args_offsets_[1] = {
  };
  Maintenance_Dump_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Dump_Args_descriptor_,
      Maintenance_Dump_Args::default_instance_,
      Maintenance_Dump_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Dump_Args));
  Maintenance_Dump_Result_descriptor_ = Maintenance_Dump_descriptor_->nested_type(1);
  static const int Maintenance_Dump_Result_offsets_[1] = {
  };
  Maintenance_Dump_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Dump_Result_descriptor_,
      Maintenance_Dump_Result::default_instance_,
      Maintenance_Dump_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Dump_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Dump_Result));
  Maintenance_Shutdown_descriptor_ = Maintenance_descriptor_->nested_type(3);
  static const int Maintenance_Shutdown_offsets_[1] = {
  };
  Maintenance_Shutdown_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Shutdown_descriptor_,
      Maintenance_Shutdown::default_instance_,
      Maintenance_Shutdown_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Shutdown));
  Maintenance_Shutdown_Args_descriptor_ = Maintenance_Shutdown_descriptor_->nested_type(0);
  static const int Maintenance_Shutdown_Args_offsets_[1] = {
  };
  Maintenance_Shutdown_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Shutdown_Args_descriptor_,
      Maintenance_Shutdown_Args::default_instance_,
      Maintenance_Shutdown_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Shutdown_Args));
  Maintenance_Shutdown_Result_descriptor_ = Maintenance_Shutdown_descriptor_->nested_type(1);
  static const int Maintenance_Shutdown_Result_offsets_[1] = {
  };
  Maintenance_Shutdown_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Maintenance_Shutdown_Result_descriptor_,
      Maintenance_Shutdown_Result::default_instance_,
      Maintenance_Shutdown_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Maintenance_Shutdown_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Maintenance_Shutdown_Result));
  NodeDefault_descriptor_ = file->message_type(8);
  static const int NodeDefault_offsets_[1] = {
  };
  NodeDefault_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_descriptor_,
      NodeDefault::default_instance_,
      NodeDefault_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault));
  NodeDefault_NodeDefaults_descriptor_ = NodeDefault_descriptor_->nested_type(0);
  static const int NodeDefault_NodeDefaults_offsets_[1] = {
  };
  NodeDefault_NodeDefaults_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_NodeDefaults_descriptor_,
      NodeDefault_NodeDefaults::default_instance_,
      NodeDefault_NodeDefaults_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_NodeDefaults));
  NodeDefault_NodeDefaults_Args_descriptor_ = NodeDefault_NodeDefaults_descriptor_->nested_type(0);
  static const int NodeDefault_NodeDefaults_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Args, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Args, projectid_),
  };
  NodeDefault_NodeDefaults_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_NodeDefaults_Args_descriptor_,
      NodeDefault_NodeDefaults_Args::default_instance_,
      NodeDefault_NodeDefaults_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_NodeDefaults_Args));
  NodeDefault_NodeDefaults_Result_descriptor_ = NodeDefault_NodeDefaults_descriptor_->nested_type(1);
  static const int NodeDefault_NodeDefaults_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Result, defaultsmap_),
  };
  NodeDefault_NodeDefaults_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_NodeDefaults_Result_descriptor_,
      NodeDefault_NodeDefaults_Result::default_instance_,
      NodeDefault_NodeDefaults_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_NodeDefaults_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_NodeDefaults_Result));
  NodeDefault_SetNodeDefault_descriptor_ = NodeDefault_descriptor_->nested_type(1);
  static const int NodeDefault_SetNodeDefault_offsets_[1] = {
  };
  NodeDefault_SetNodeDefault_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_SetNodeDefault_descriptor_,
      NodeDefault_SetNodeDefault::default_instance_,
      NodeDefault_SetNodeDefault_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_SetNodeDefault));
  NodeDefault_SetNodeDefault_Args_descriptor_ = NodeDefault_SetNodeDefault_descriptor_->nested_type(0);
  static const int NodeDefault_SetNodeDefault_Args_offsets_[6] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Args, inport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Args, value_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Args, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Args, projectid_),
  };
  NodeDefault_SetNodeDefault_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_SetNodeDefault_Args_descriptor_,
      NodeDefault_SetNodeDefault_Args::default_instance_,
      NodeDefault_SetNodeDefault_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_SetNodeDefault_Args));
  NodeDefault_SetNodeDefault_Result_descriptor_ = NodeDefault_SetNodeDefault_descriptor_->nested_type(1);
  static const int NodeDefault_SetNodeDefault_Result_offsets_[1] = {
  };
  NodeDefault_SetNodeDefault_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_SetNodeDefault_Result_descriptor_,
      NodeDefault_SetNodeDefault_Result::default_instance_,
      NodeDefault_SetNodeDefault_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_SetNodeDefault_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_SetNodeDefault_Result));
  NodeDefault_RemoveNodeDefault_descriptor_ = NodeDefault_descriptor_->nested_type(2);
  static const int NodeDefault_RemoveNodeDefault_offsets_[1] = {
  };
  NodeDefault_RemoveNodeDefault_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_RemoveNodeDefault_descriptor_,
      NodeDefault_RemoveNodeDefault::default_instance_,
      NodeDefault_RemoveNodeDefault_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_RemoveNodeDefault));
  NodeDefault_RemoveNodeDefault_Args_descriptor_ = NodeDefault_RemoveNodeDefault_descriptor_->nested_type(0);
  static const int NodeDefault_RemoveNodeDefault_Args_offsets_[5] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Args, inport_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Args, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Args, bc_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Args, projectid_),
  };
  NodeDefault_RemoveNodeDefault_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_RemoveNodeDefault_Args_descriptor_,
      NodeDefault_RemoveNodeDefault_Args::default_instance_,
      NodeDefault_RemoveNodeDefault_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_RemoveNodeDefault_Args));
  NodeDefault_RemoveNodeDefault_Result_descriptor_ = NodeDefault_RemoveNodeDefault_descriptor_->nested_type(1);
  static const int NodeDefault_RemoveNodeDefault_Result_offsets_[1] = {
  };
  NodeDefault_RemoveNodeDefault_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      NodeDefault_RemoveNodeDefault_Result_descriptor_,
      NodeDefault_RemoveNodeDefault_Result::default_instance_,
      NodeDefault_RemoveNodeDefault_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(NodeDefault_RemoveNodeDefault_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(NodeDefault_RemoveNodeDefault_Result));
  Parser_descriptor_ = file->message_type(9);
  static const int Parser_offsets_[1] = {
  };
  Parser_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_descriptor_,
      Parser::default_instance_,
      Parser_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser));
  Parser_ParseExpr_descriptor_ = Parser_descriptor_->nested_type(0);
  static const int Parser_ParseExpr_offsets_[1] = {
  };
  Parser_ParseExpr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseExpr_descriptor_,
      Parser_ParseExpr::default_instance_,
      Parser_ParseExpr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseExpr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseExpr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseExpr));
  Parser_ParseExpr_Args_descriptor_ = Parser_ParseExpr_descriptor_->nested_type(0);
  static const int Parser_ParseExpr_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseExpr_Args, str_),
  };
  Parser_ParseExpr_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseExpr_Args_descriptor_,
      Parser_ParseExpr_Args::default_instance_,
      Parser_ParseExpr_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseExpr_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseExpr_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseExpr_Args));
  Parser_ParseExpr_Result_descriptor_ = Parser_ParseExpr_descriptor_->nested_type(1);
  static const int Parser_ParseExpr_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseExpr_Result, expr_),
  };
  Parser_ParseExpr_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseExpr_Result_descriptor_,
      Parser_ParseExpr_Result::default_instance_,
      Parser_ParseExpr_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseExpr_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseExpr_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseExpr_Result));
  Parser_ParsePat_descriptor_ = Parser_descriptor_->nested_type(1);
  static const int Parser_ParsePat_offsets_[1] = {
  };
  Parser_ParsePat_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParsePat_descriptor_,
      Parser_ParsePat::default_instance_,
      Parser_ParsePat_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParsePat, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParsePat, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParsePat));
  Parser_ParsePat_Args_descriptor_ = Parser_ParsePat_descriptor_->nested_type(0);
  static const int Parser_ParsePat_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParsePat_Args, str_),
  };
  Parser_ParsePat_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParsePat_Args_descriptor_,
      Parser_ParsePat_Args::default_instance_,
      Parser_ParsePat_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParsePat_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParsePat_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParsePat_Args));
  Parser_ParsePat_Result_descriptor_ = Parser_ParsePat_descriptor_->nested_type(1);
  static const int Parser_ParsePat_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParsePat_Result, pat_),
  };
  Parser_ParsePat_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParsePat_Result_descriptor_,
      Parser_ParsePat_Result::default_instance_,
      Parser_ParsePat_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParsePat_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParsePat_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParsePat_Result));
  Parser_ParseType_descriptor_ = Parser_descriptor_->nested_type(2);
  static const int Parser_ParseType_offsets_[1] = {
  };
  Parser_ParseType_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseType_descriptor_,
      Parser_ParseType::default_instance_,
      Parser_ParseType_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseType, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseType, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseType));
  Parser_ParseType_Args_descriptor_ = Parser_ParseType_descriptor_->nested_type(0);
  static const int Parser_ParseType_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseType_Args, str_),
  };
  Parser_ParseType_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseType_Args_descriptor_,
      Parser_ParseType_Args::default_instance_,
      Parser_ParseType_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseType_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseType_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseType_Args));
  Parser_ParseType_Result_descriptor_ = Parser_ParseType_descriptor_->nested_type(1);
  static const int Parser_ParseType_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseType_Result, type_),
  };
  Parser_ParseType_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseType_Result_descriptor_,
      Parser_ParseType_Result::default_instance_,
      Parser_ParseType_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseType_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseType_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseType_Result));
  Parser_ParseNodeExpr_descriptor_ = Parser_descriptor_->nested_type(3);
  static const int Parser_ParseNodeExpr_offsets_[1] = {
  };
  Parser_ParseNodeExpr_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseNodeExpr_descriptor_,
      Parser_ParseNodeExpr::default_instance_,
      Parser_ParseNodeExpr_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseNodeExpr, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseNodeExpr, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseNodeExpr));
  Parser_ParseNodeExpr_Args_descriptor_ = Parser_ParseNodeExpr_descriptor_->nested_type(0);
  static const int Parser_ParseNodeExpr_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseNodeExpr_Args, str_),
  };
  Parser_ParseNodeExpr_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseNodeExpr_Args_descriptor_,
      Parser_ParseNodeExpr_Args::default_instance_,
      Parser_ParseNodeExpr_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseNodeExpr_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseNodeExpr_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseNodeExpr_Args));
  Parser_ParseNodeExpr_Result_descriptor_ = Parser_ParseNodeExpr_descriptor_->nested_type(1);
  static const int Parser_ParseNodeExpr_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseNodeExpr_Result, expr_),
  };
  Parser_ParseNodeExpr_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Parser_ParseNodeExpr_Result_descriptor_,
      Parser_ParseNodeExpr_Result::default_instance_,
      Parser_ParseNodeExpr_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseNodeExpr_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Parser_ParseNodeExpr_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Parser_ParseNodeExpr_Result));
  Process_descriptor_ = file->message_type(10);
  static const int Process_offsets_[1] = {
  };
  Process_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Process_descriptor_,
      Process::default_instance_,
      Process_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Process));
  Process_Processes_descriptor_ = Process_descriptor_->nested_type(0);
  static const int Process_Processes_offsets_[1] = {
  };
  Process_Processes_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Process_Processes_descriptor_,
      Process_Processes::default_instance_,
      Process_Processes_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Processes, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Processes, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Process_Processes));
  Process_Processes_Args_descriptor_ = Process_Processes_descriptor_->nested_type(0);
  static const int Process_Processes_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Processes_Args, projectid_),
  };
  Process_Processes_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Process_Processes_Args_descriptor_,
      Process_Processes_Args::default_instance_,
      Process_Processes_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Processes_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Processes_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Process_Processes_Args));
  Process_Processes_Result_descriptor_ = Process_Processes_descriptor_->nested_type(1);
  static const int Process_Processes_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Processes_Result, processes_),
  };
  Process_Processes_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Process_Processes_Result_descriptor_,
      Process_Processes_Result::default_instance_,
      Process_Processes_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Processes_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Processes_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Process_Processes_Result));
  Process_Terminate_descriptor_ = Process_descriptor_->nested_type(1);
  static const int Process_Terminate_offsets_[1] = {
  };
  Process_Terminate_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Process_Terminate_descriptor_,
      Process_Terminate::default_instance_,
      Process_Terminate_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Terminate, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Terminate, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Process_Terminate));
  Process_Terminate_Args_descriptor_ = Process_Terminate_descriptor_->nested_type(0);
  static const int Process_Terminate_Args_offsets_[2] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Terminate_Args, projectid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Terminate_Args, processid_),
  };
  Process_Terminate_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Process_Terminate_Args_descriptor_,
      Process_Terminate_Args::default_instance_,
      Process_Terminate_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Terminate_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Terminate_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Process_Terminate_Args));
  Process_Terminate_Result_descriptor_ = Process_Terminate_descriptor_->nested_type(1);
  static const int Process_Terminate_Result_offsets_[1] = {
  };
  Process_Terminate_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Process_Terminate_Result_descriptor_,
      Process_Terminate_Result::default_instance_,
      Process_Terminate_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Terminate_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Process_Terminate_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Process_Terminate_Result));
  Project_descriptor_ = file->message_type(11);
  static const int Project_offsets_[1] = {
  };
  Project_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_descriptor_,
      Project::default_instance_,
      Project_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project));
  Project_Projects_descriptor_ = Project_descriptor_->nested_type(0);
  static const int Project_Projects_offsets_[1] = {
  };
  Project_Projects_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Projects_descriptor_,
      Project_Projects::default_instance_,
      Project_Projects_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Projects));
  Project_Projects_Args_descriptor_ = Project_Projects_descriptor_->nested_type(0);
  static const int Project_Projects_Args_offsets_[1] = {
  };
  Project_Projects_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Projects_Args_descriptor_,
      Project_Projects_Args::default_instance_,
      Project_Projects_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Projects_Args));
  Project_Projects_Result_descriptor_ = Project_Projects_descriptor_->nested_type(1);
  static const int Project_Projects_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Result, projects_),
  };
  Project_Projects_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_Projects_Result_descriptor_,
      Project_Projects_Result::default_instance_,
      Project_Projects_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_Projects_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_Projects_Result));
  Project_ProjectByID_descriptor_ = Project_descriptor_->nested_type(1);
  static const int Project_ProjectByID_offsets_[1] = {
  };
  Project_ProjectByID_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_ProjectByID_descriptor_,
      Project_ProjectByID::default_instance_,
      Project_ProjectByID_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_ProjectByID));
  Project_ProjectByID_Args_descriptor_ = Project_ProjectByID_descriptor_->nested_type(0);
  static const int Project_ProjectByID_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Args, projectid_),
  };
  Project_ProjectByID_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_ProjectByID_Args_descriptor_,
      Project_ProjectByID_Args::default_instance_,
      Project_ProjectByID_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_ProjectByID_Args));
  Project_ProjectByID_Result_descriptor_ = Project_ProjectByID_descriptor_->nested_type(1);
  static const int Project_ProjectByID_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Result, project_),
  };
  Project_ProjectByID_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_ProjectByID_Result_descriptor_,
      Project_ProjectByID_Result::default_instance_,
      Project_ProjectByID_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_ProjectByID_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_ProjectByID_Result));
  Project_CreateProject_descriptor_ = Project_descriptor_->nested_type(2);
  static const int Project_CreateProject_offsets_[1] = {
  };
  Project_CreateProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CreateProject_descriptor_,
      Project_CreateProject::default_instance_,
      Project_CreateProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CreateProject));
  Project_CreateProject_Args_descriptor_ = Project_CreateProject_descriptor_->nested_type(0);
  static const int Project_CreateProject_Args_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Args, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Args, path_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Args, attributes_),
  };
  Project_CreateProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CreateProject_Args_descriptor_,
      Project_CreateProject_Args::default_instance_,
      Project_CreateProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CreateProject_Args));
  Project_CreateProject_Result_descriptor_ = Project_CreateProject_descriptor_->nested_type(1);
  static const int Project_CreateProject_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Result, project_),
  };
  Project_CreateProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CreateProject_Result_descriptor_,
      Project_CreateProject_Result::default_instance_,
      Project_CreateProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CreateProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CreateProject_Result));
  Project_OpenProject_descriptor_ = Project_descriptor_->nested_type(3);
  static const int Project_OpenProject_offsets_[1] = {
  };
  Project_OpenProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_OpenProject_descriptor_,
      Project_OpenProject::default_instance_,
      Project_OpenProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_OpenProject));
  Project_OpenProject_Args_descriptor_ = Project_OpenProject_descriptor_->nested_type(0);
  static const int Project_OpenProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Args, path_),
  };
  Project_OpenProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_OpenProject_Args_descriptor_,
      Project_OpenProject_Args::default_instance_,
      Project_OpenProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_OpenProject_Args));
  Project_OpenProject_Result_descriptor_ = Project_OpenProject_descriptor_->nested_type(1);
  static const int Project_OpenProject_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Result, project_),
  };
  Project_OpenProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_OpenProject_Result_descriptor_,
      Project_OpenProject_Result::default_instance_,
      Project_OpenProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_OpenProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_OpenProject_Result));
  Project_UpdateProject_descriptor_ = Project_descriptor_->nested_type(4);
  static const int Project_UpdateProject_offsets_[1] = {
  };
  Project_UpdateProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_UpdateProject_descriptor_,
      Project_UpdateProject::default_instance_,
      Project_UpdateProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_UpdateProject));
  Project_UpdateProject_Args_descriptor_ = Project_UpdateProject_descriptor_->nested_type(0);
  static const int Project_UpdateProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Args, project_),
  };
  Project_UpdateProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_UpdateProject_Args_descriptor_,
      Project_UpdateProject_Args::default_instance_,
      Project_UpdateProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_UpdateProject_Args));
  Project_UpdateProject_Result_descriptor_ = Project_UpdateProject_descriptor_->nested_type(1);
  static const int Project_UpdateProject_Result_offsets_[1] = {
  };
  Project_UpdateProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_UpdateProject_Result_descriptor_,
      Project_UpdateProject_Result::default_instance_,
      Project_UpdateProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_UpdateProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_UpdateProject_Result));
  Project_CloseProject_descriptor_ = Project_descriptor_->nested_type(5);
  static const int Project_CloseProject_offsets_[1] = {
  };
  Project_CloseProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CloseProject_descriptor_,
      Project_CloseProject::default_instance_,
      Project_CloseProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CloseProject));
  Project_CloseProject_Args_descriptor_ = Project_CloseProject_descriptor_->nested_type(0);
  static const int Project_CloseProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Args, projectid_),
  };
  Project_CloseProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CloseProject_Args_descriptor_,
      Project_CloseProject_Args::default_instance_,
      Project_CloseProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CloseProject_Args));
  Project_CloseProject_Result_descriptor_ = Project_CloseProject_descriptor_->nested_type(1);
  static const int Project_CloseProject_Result_offsets_[1] = {
  };
  Project_CloseProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_CloseProject_Result_descriptor_,
      Project_CloseProject_Result::default_instance_,
      Project_CloseProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_CloseProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_CloseProject_Result));
  Project_StoreProject_descriptor_ = Project_descriptor_->nested_type(6);
  static const int Project_StoreProject_offsets_[1] = {
  };
  Project_StoreProject_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_StoreProject_descriptor_,
      Project_StoreProject::default_instance_,
      Project_StoreProject_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_StoreProject));
  Project_StoreProject_Args_descriptor_ = Project_StoreProject_descriptor_->nested_type(0);
  static const int Project_StoreProject_Args_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Args, projectid_),
  };
  Project_StoreProject_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_StoreProject_Args_descriptor_,
      Project_StoreProject_Args::default_instance_,
      Project_StoreProject_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_StoreProject_Args));
  Project_StoreProject_Result_descriptor_ = Project_StoreProject_descriptor_->nested_type(1);
  static const int Project_StoreProject_Result_offsets_[1] = {
  };
  Project_StoreProject_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Project_StoreProject_Result_descriptor_,
      Project_StoreProject_Result::default_instance_,
      Project_StoreProject_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Project_StoreProject_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Project_StoreProject_Result));
  Properties_descriptor_ = file->message_type(12);
  static const int Properties_offsets_[1] = {
  };
  Properties_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Properties_descriptor_,
      Properties::default_instance_,
      Properties_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Properties));
  Properties_GetProperties_descriptor_ = Properties_descriptor_->nested_type(0);
  static const int Properties_GetProperties_offsets_[1] = {
  };
  Properties_GetProperties_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Properties_GetProperties_descriptor_,
      Properties_GetProperties::default_instance_,
      Properties_GetProperties_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Properties_GetProperties));
  Properties_GetProperties_Args_descriptor_ = Properties_GetProperties_descriptor_->nested_type(0);
  static const int Properties_GetProperties_Args_offsets_[3] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties_Args, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties_Args, projectid_),
  };
  Properties_GetProperties_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Properties_GetProperties_Args_descriptor_,
      Properties_GetProperties_Args::default_instance_,
      Properties_GetProperties_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Properties_GetProperties_Args));
  Properties_GetProperties_Result_descriptor_ = Properties_GetProperties_descriptor_->nested_type(1);
  static const int Properties_GetProperties_Result_offsets_[1] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties_Result, properties_),
  };
  Properties_GetProperties_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Properties_GetProperties_Result_descriptor_,
      Properties_GetProperties_Result::default_instance_,
      Properties_GetProperties_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_GetProperties_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Properties_GetProperties_Result));
  Properties_SetProperties_descriptor_ = Properties_descriptor_->nested_type(1);
  static const int Properties_SetProperties_offsets_[1] = {
  };
  Properties_SetProperties_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Properties_SetProperties_descriptor_,
      Properties_SetProperties::default_instance_,
      Properties_SetProperties_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Properties_SetProperties));
  Properties_SetProperties_Args_descriptor_ = Properties_SetProperties_descriptor_->nested_type(0);
  static const int Properties_SetProperties_Args_offsets_[4] = {
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties_Args, properties_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties_Args, nodeid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties_Args, libraryid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties_Args, projectid_),
  };
  Properties_SetProperties_Args_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Properties_SetProperties_Args_descriptor_,
      Properties_SetProperties_Args::default_instance_,
      Properties_SetProperties_Args_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties_Args, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties_Args, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Properties_SetProperties_Args));
  Properties_SetProperties_Result_descriptor_ = Properties_SetProperties_descriptor_->nested_type(1);
  static const int Properties_SetProperties_Result_offsets_[1] = {
  };
  Properties_SetProperties_Result_reflection_ =
    new ::google::protobuf::internal::GeneratedMessageReflection(
      Properties_SetProperties_Result_descriptor_,
      Properties_SetProperties_Result::default_instance_,
      Properties_SetProperties_Result_offsets_,
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties_Result, _has_bits_[0]),
      GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Properties_SetProperties_Result, _unknown_fields_),
      -1,
      ::google::protobuf::DescriptorPool::generated_pool(),
      ::google::protobuf::MessageFactory::generated_factory(),
      sizeof(Properties_SetProperties_Result));
}

namespace {

GOOGLE_PROTOBUF_DECLARE_ONCE(protobuf_AssignDescriptors_once_);
inline void protobuf_AssignDescriptorsOnce() {
  ::google::protobuf::GoogleOnceInit(&protobuf_AssignDescriptors_once_,
                 &protobuf_AssignDesc_server_2dapi_2eproto);
}

void protobuf_RegisterTypes(const ::std::string&) {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Request_descriptor_, &Request::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Response_descriptor_, &Response::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Exception_descriptor_, &Exception::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_descriptor_, &AST::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_Definitions_descriptor_, &AST_Definitions::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_Definitions_Args_descriptor_, &AST_Definitions_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_Definitions_Result_descriptor_, &AST_Definitions_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddModule_descriptor_, &AST_AddModule::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddModule_Args_descriptor_, &AST_AddModule_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddModule_Result_descriptor_, &AST_AddModule_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddClass_descriptor_, &AST_AddClass::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddClass_Args_descriptor_, &AST_AddClass_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddClass_Result_descriptor_, &AST_AddClass_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddFunction_descriptor_, &AST_AddFunction::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddFunction_Args_descriptor_, &AST_AddFunction_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_AddFunction_Result_descriptor_, &AST_AddFunction_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleCls_descriptor_, &AST_UpdateModuleCls::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleCls_Args_descriptor_, &AST_UpdateModuleCls_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleCls_Result_descriptor_, &AST_UpdateModuleCls_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleImports_descriptor_, &AST_UpdateModuleImports::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleImports_Args_descriptor_, &AST_UpdateModuleImports_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleImports_Result_descriptor_, &AST_UpdateModuleImports_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleFields_descriptor_, &AST_UpdateModuleFields::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleFields_Args_descriptor_, &AST_UpdateModuleFields_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateModuleFields_Result_descriptor_, &AST_UpdateModuleFields_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataCls_descriptor_, &AST_UpdateDataCls::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataCls_Args_descriptor_, &AST_UpdateDataCls_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataCls_Result_descriptor_, &AST_UpdateDataCls_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataCons_descriptor_, &AST_UpdateDataCons::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataCons_Args_descriptor_, &AST_UpdateDataCons_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataCons_Result_descriptor_, &AST_UpdateDataCons_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataClasses_descriptor_, &AST_UpdateDataClasses::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataClasses_Args_descriptor_, &AST_UpdateDataClasses_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataClasses_Result_descriptor_, &AST_UpdateDataClasses_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataMethods_descriptor_, &AST_UpdateDataMethods::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataMethods_Args_descriptor_, &AST_UpdateDataMethods_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateDataMethods_Result_descriptor_, &AST_UpdateDataMethods_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionName_descriptor_, &AST_UpdateFunctionName::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionName_Args_descriptor_, &AST_UpdateFunctionName_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionName_Result_descriptor_, &AST_UpdateFunctionName_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionPath_descriptor_, &AST_UpdateFunctionPath::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionPath_Args_descriptor_, &AST_UpdateFunctionPath_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionPath_Result_descriptor_, &AST_UpdateFunctionPath_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionInputs_descriptor_, &AST_UpdateFunctionInputs::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionInputs_Args_descriptor_, &AST_UpdateFunctionInputs_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionInputs_Result_descriptor_, &AST_UpdateFunctionInputs_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionOutput_descriptor_, &AST_UpdateFunctionOutput::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionOutput_Args_descriptor_, &AST_UpdateFunctionOutput_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_UpdateFunctionOutput_Result_descriptor_, &AST_UpdateFunctionOutput_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_Remove_descriptor_, &AST_Remove::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_Remove_Args_descriptor_, &AST_Remove_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_Remove_Result_descriptor_, &AST_Remove_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_ResolveDefinition_descriptor_, &AST_ResolveDefinition::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_ResolveDefinition_Args_descriptor_, &AST_ResolveDefinition_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    AST_ResolveDefinition_Result_descriptor_, &AST_ResolveDefinition_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_descriptor_, &FileSystem::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_LS_descriptor_, &FileSystem_LS::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_LS_Args_descriptor_, &FileSystem_LS_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_LS_Result_descriptor_, &FileSystem_LS_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Stat_descriptor_, &FileSystem_Stat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Stat_Args_descriptor_, &FileSystem_Stat_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Stat_Result_descriptor_, &FileSystem_Stat_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MkDir_descriptor_, &FileSystem_MkDir::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MkDir_Args_descriptor_, &FileSystem_MkDir_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MkDir_Result_descriptor_, &FileSystem_MkDir_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Touch_descriptor_, &FileSystem_Touch::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Touch_Args_descriptor_, &FileSystem_Touch_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_Touch_Result_descriptor_, &FileSystem_Touch_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_RM_descriptor_, &FileSystem_RM::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_RM_Args_descriptor_, &FileSystem_RM_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_RM_Result_descriptor_, &FileSystem_RM_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_CP_descriptor_, &FileSystem_CP::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_CP_Args_descriptor_, &FileSystem_CP_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_CP_Result_descriptor_, &FileSystem_CP_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MV_descriptor_, &FileSystem_MV::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MV_Args_descriptor_, &FileSystem_MV_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    FileSystem_MV_Result_descriptor_, &FileSystem_MV_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_descriptor_, &Graph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_NodesGraph_descriptor_, &Graph_NodesGraph::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_NodesGraph_Args_descriptor_, &Graph_NodesGraph_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_NodesGraph_Result_descriptor_, &Graph_NodesGraph_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_NodeByID_descriptor_, &Graph_NodeByID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_NodeByID_Args_descriptor_, &Graph_NodeByID_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_NodeByID_Result_descriptor_, &Graph_NodeByID_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_AddNode_descriptor_, &Graph_AddNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_AddNode_Args_descriptor_, &Graph_AddNode_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_AddNode_Result_descriptor_, &Graph_AddNode_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_UpdateNode_descriptor_, &Graph_UpdateNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_UpdateNode_Args_descriptor_, &Graph_UpdateNode_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_UpdateNode_Result_descriptor_, &Graph_UpdateNode_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_UpdateNodeInPlace_descriptor_, &Graph_UpdateNodeInPlace::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_UpdateNodeInPlace_Args_descriptor_, &Graph_UpdateNodeInPlace_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_UpdateNodeInPlace_Result_descriptor_, &Graph_UpdateNodeInPlace_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_RemoveNode_descriptor_, &Graph_RemoveNode::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_RemoveNode_Args_descriptor_, &Graph_RemoveNode_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_RemoveNode_Result_descriptor_, &Graph_RemoveNode_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_Connect_descriptor_, &Graph_Connect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_Connect_Args_descriptor_, &Graph_Connect_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_Connect_Result_descriptor_, &Graph_Connect_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_Disconnect_descriptor_, &Graph_Disconnect::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_Disconnect_Args_descriptor_, &Graph_Disconnect_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Graph_Disconnect_Result_descriptor_, &Graph_Disconnect_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_descriptor_, &Library::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_Libraries_descriptor_, &Library_Libraries::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_Libraries_Args_descriptor_, &Library_Libraries_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_Libraries_Result_descriptor_, &Library_Libraries_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LibraryByID_descriptor_, &Library_LibraryByID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LibraryByID_Args_descriptor_, &Library_LibraryByID_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LibraryByID_Result_descriptor_, &Library_LibraryByID_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_CreateLibrary_descriptor_, &Library_CreateLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_CreateLibrary_Args_descriptor_, &Library_CreateLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_CreateLibrary_Result_descriptor_, &Library_CreateLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LoadLibrary_descriptor_, &Library_LoadLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LoadLibrary_Args_descriptor_, &Library_LoadLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_LoadLibrary_Result_descriptor_, &Library_LoadLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_UnloadLibrary_descriptor_, &Library_UnloadLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_UnloadLibrary_Args_descriptor_, &Library_UnloadLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_UnloadLibrary_Result_descriptor_, &Library_UnloadLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_StoreLibrary_descriptor_, &Library_StoreLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_StoreLibrary_Args_descriptor_, &Library_StoreLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_StoreLibrary_Result_descriptor_, &Library_StoreLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_BuildLibrary_descriptor_, &Library_BuildLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_BuildLibrary_Args_descriptor_, &Library_BuildLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_BuildLibrary_Result_descriptor_, &Library_BuildLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_RunLibrary_descriptor_, &Library_RunLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_RunLibrary_Args_descriptor_, &Library_RunLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_RunLibrary_Result_descriptor_, &Library_RunLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_InterpretLibrary_descriptor_, &Library_InterpretLibrary::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_InterpretLibrary_Args_descriptor_, &Library_InterpretLibrary_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Library_InterpretLibrary_Result_descriptor_, &Library_InterpretLibrary_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_descriptor_, &Maintenance::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Initialize_descriptor_, &Maintenance_Initialize::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Initialize_Args_descriptor_, &Maintenance_Initialize_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Initialize_Result_descriptor_, &Maintenance_Initialize_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Ping_descriptor_, &Maintenance_Ping::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Ping_Args_descriptor_, &Maintenance_Ping_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Ping_Result_descriptor_, &Maintenance_Ping_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Dump_descriptor_, &Maintenance_Dump::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Dump_Args_descriptor_, &Maintenance_Dump_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Dump_Result_descriptor_, &Maintenance_Dump_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Shutdown_descriptor_, &Maintenance_Shutdown::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Shutdown_Args_descriptor_, &Maintenance_Shutdown_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Maintenance_Shutdown_Result_descriptor_, &Maintenance_Shutdown_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_descriptor_, &NodeDefault::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_NodeDefaults_descriptor_, &NodeDefault_NodeDefaults::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_NodeDefaults_Args_descriptor_, &NodeDefault_NodeDefaults_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_NodeDefaults_Result_descriptor_, &NodeDefault_NodeDefaults_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_SetNodeDefault_descriptor_, &NodeDefault_SetNodeDefault::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_SetNodeDefault_Args_descriptor_, &NodeDefault_SetNodeDefault_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_SetNodeDefault_Result_descriptor_, &NodeDefault_SetNodeDefault_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_RemoveNodeDefault_descriptor_, &NodeDefault_RemoveNodeDefault::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_RemoveNodeDefault_Args_descriptor_, &NodeDefault_RemoveNodeDefault_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    NodeDefault_RemoveNodeDefault_Result_descriptor_, &NodeDefault_RemoveNodeDefault_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_descriptor_, &Parser::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseExpr_descriptor_, &Parser_ParseExpr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseExpr_Args_descriptor_, &Parser_ParseExpr_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseExpr_Result_descriptor_, &Parser_ParseExpr_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParsePat_descriptor_, &Parser_ParsePat::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParsePat_Args_descriptor_, &Parser_ParsePat_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParsePat_Result_descriptor_, &Parser_ParsePat_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseType_descriptor_, &Parser_ParseType::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseType_Args_descriptor_, &Parser_ParseType_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseType_Result_descriptor_, &Parser_ParseType_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseNodeExpr_descriptor_, &Parser_ParseNodeExpr::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseNodeExpr_Args_descriptor_, &Parser_ParseNodeExpr_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Parser_ParseNodeExpr_Result_descriptor_, &Parser_ParseNodeExpr_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Process_descriptor_, &Process::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Process_Processes_descriptor_, &Process_Processes::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Process_Processes_Args_descriptor_, &Process_Processes_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Process_Processes_Result_descriptor_, &Process_Processes_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Process_Terminate_descriptor_, &Process_Terminate::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Process_Terminate_Args_descriptor_, &Process_Terminate_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Process_Terminate_Result_descriptor_, &Process_Terminate_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_descriptor_, &Project::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Projects_descriptor_, &Project_Projects::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Projects_Args_descriptor_, &Project_Projects_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_Projects_Result_descriptor_, &Project_Projects_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_ProjectByID_descriptor_, &Project_ProjectByID::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_ProjectByID_Args_descriptor_, &Project_ProjectByID_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_ProjectByID_Result_descriptor_, &Project_ProjectByID_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CreateProject_descriptor_, &Project_CreateProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CreateProject_Args_descriptor_, &Project_CreateProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CreateProject_Result_descriptor_, &Project_CreateProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_OpenProject_descriptor_, &Project_OpenProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_OpenProject_Args_descriptor_, &Project_OpenProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_OpenProject_Result_descriptor_, &Project_OpenProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_UpdateProject_descriptor_, &Project_UpdateProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_UpdateProject_Args_descriptor_, &Project_UpdateProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_UpdateProject_Result_descriptor_, &Project_UpdateProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CloseProject_descriptor_, &Project_CloseProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CloseProject_Args_descriptor_, &Project_CloseProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_CloseProject_Result_descriptor_, &Project_CloseProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_StoreProject_descriptor_, &Project_StoreProject::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_StoreProject_Args_descriptor_, &Project_StoreProject_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Project_StoreProject_Result_descriptor_, &Project_StoreProject_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Properties_descriptor_, &Properties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Properties_GetProperties_descriptor_, &Properties_GetProperties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Properties_GetProperties_Args_descriptor_, &Properties_GetProperties_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Properties_GetProperties_Result_descriptor_, &Properties_GetProperties_Result::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Properties_SetProperties_descriptor_, &Properties_SetProperties::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Properties_SetProperties_Args_descriptor_, &Properties_SetProperties_Args::default_instance());
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedMessage(
    Properties_SetProperties_Result_descriptor_, &Properties_SetProperties_Result::default_instance());
}

}  // namespace

void protobuf_ShutdownFile_server_2dapi_2eproto() {
  delete Request::default_instance_;
  delete Request_reflection_;
  delete Response::default_instance_;
  delete Response_reflection_;
  delete Exception::default_instance_;
  delete Exception_reflection_;
  delete AST::default_instance_;
  delete AST_reflection_;
  delete AST_Definitions::default_instance_;
  delete AST_Definitions_reflection_;
  delete AST_Definitions_Args::default_instance_;
  delete AST_Definitions_Args_reflection_;
  delete AST_Definitions_Result::default_instance_;
  delete AST_Definitions_Result_reflection_;
  delete AST_AddModule::default_instance_;
  delete AST_AddModule_reflection_;
  delete AST_AddModule_Args::default_instance_;
  delete AST_AddModule_Args_reflection_;
  delete AST_AddModule_Result::default_instance_;
  delete AST_AddModule_Result_reflection_;
  delete AST_AddClass::default_instance_;
  delete AST_AddClass_reflection_;
  delete AST_AddClass_Args::default_instance_;
  delete AST_AddClass_Args_reflection_;
  delete AST_AddClass_Result::default_instance_;
  delete AST_AddClass_Result_reflection_;
  delete AST_AddFunction::default_instance_;
  delete AST_AddFunction_reflection_;
  delete AST_AddFunction_Args::default_instance_;
  delete AST_AddFunction_Args_reflection_;
  delete AST_AddFunction_Result::default_instance_;
  delete AST_AddFunction_Result_reflection_;
  delete AST_UpdateModuleCls::default_instance_;
  delete AST_UpdateModuleCls_reflection_;
  delete AST_UpdateModuleCls_Args::default_instance_;
  delete AST_UpdateModuleCls_Args_reflection_;
  delete AST_UpdateModuleCls_Result::default_instance_;
  delete AST_UpdateModuleCls_Result_reflection_;
  delete AST_UpdateModuleImports::default_instance_;
  delete AST_UpdateModuleImports_reflection_;
  delete AST_UpdateModuleImports_Args::default_instance_;
  delete AST_UpdateModuleImports_Args_reflection_;
  delete AST_UpdateModuleImports_Result::default_instance_;
  delete AST_UpdateModuleImports_Result_reflection_;
  delete AST_UpdateModuleFields::default_instance_;
  delete AST_UpdateModuleFields_reflection_;
  delete AST_UpdateModuleFields_Args::default_instance_;
  delete AST_UpdateModuleFields_Args_reflection_;
  delete AST_UpdateModuleFields_Result::default_instance_;
  delete AST_UpdateModuleFields_Result_reflection_;
  delete AST_UpdateDataCls::default_instance_;
  delete AST_UpdateDataCls_reflection_;
  delete AST_UpdateDataCls_Args::default_instance_;
  delete AST_UpdateDataCls_Args_reflection_;
  delete AST_UpdateDataCls_Result::default_instance_;
  delete AST_UpdateDataCls_Result_reflection_;
  delete AST_UpdateDataCons::default_instance_;
  delete AST_UpdateDataCons_reflection_;
  delete AST_UpdateDataCons_Args::default_instance_;
  delete AST_UpdateDataCons_Args_reflection_;
  delete AST_UpdateDataCons_Result::default_instance_;
  delete AST_UpdateDataCons_Result_reflection_;
  delete AST_UpdateDataClasses::default_instance_;
  delete AST_UpdateDataClasses_reflection_;
  delete AST_UpdateDataClasses_Args::default_instance_;
  delete AST_UpdateDataClasses_Args_reflection_;
  delete AST_UpdateDataClasses_Result::default_instance_;
  delete AST_UpdateDataClasses_Result_reflection_;
  delete AST_UpdateDataMethods::default_instance_;
  delete AST_UpdateDataMethods_reflection_;
  delete AST_UpdateDataMethods_Args::default_instance_;
  delete AST_UpdateDataMethods_Args_reflection_;
  delete AST_UpdateDataMethods_Result::default_instance_;
  delete AST_UpdateDataMethods_Result_reflection_;
  delete AST_UpdateFunctionName::default_instance_;
  delete AST_UpdateFunctionName_reflection_;
  delete AST_UpdateFunctionName_Args::default_instance_;
  delete AST_UpdateFunctionName_Args_reflection_;
  delete AST_UpdateFunctionName_Result::default_instance_;
  delete AST_UpdateFunctionName_Result_reflection_;
  delete AST_UpdateFunctionPath::default_instance_;
  delete AST_UpdateFunctionPath_reflection_;
  delete AST_UpdateFunctionPath_Args::default_instance_;
  delete AST_UpdateFunctionPath_Args_reflection_;
  delete AST_UpdateFunctionPath_Result::default_instance_;
  delete AST_UpdateFunctionPath_Result_reflection_;
  delete AST_UpdateFunctionInputs::default_instance_;
  delete AST_UpdateFunctionInputs_reflection_;
  delete AST_UpdateFunctionInputs_Args::default_instance_;
  delete AST_UpdateFunctionInputs_Args_reflection_;
  delete AST_UpdateFunctionInputs_Result::default_instance_;
  delete AST_UpdateFunctionInputs_Result_reflection_;
  delete AST_UpdateFunctionOutput::default_instance_;
  delete AST_UpdateFunctionOutput_reflection_;
  delete AST_UpdateFunctionOutput_Args::default_instance_;
  delete AST_UpdateFunctionOutput_Args_reflection_;
  delete AST_UpdateFunctionOutput_Result::default_instance_;
  delete AST_UpdateFunctionOutput_Result_reflection_;
  delete AST_Remove::default_instance_;
  delete AST_Remove_reflection_;
  delete AST_Remove_Args::default_instance_;
  delete AST_Remove_Args_reflection_;
  delete AST_Remove_Result::default_instance_;
  delete AST_Remove_Result_reflection_;
  delete AST_ResolveDefinition::default_instance_;
  delete AST_ResolveDefinition_reflection_;
  delete AST_ResolveDefinition_Args::default_instance_;
  delete AST_ResolveDefinition_Args_reflection_;
  delete AST_ResolveDefinition_Result::default_instance_;
  delete AST_ResolveDefinition_Result_reflection_;
  delete FileSystem::default_instance_;
  delete FileSystem_reflection_;
  delete FileSystem_LS::default_instance_;
  delete FileSystem_LS_reflection_;
  delete FileSystem_LS_Args::default_instance_;
  delete FileSystem_LS_Args_reflection_;
  delete FileSystem_LS_Result::default_instance_;
  delete FileSystem_LS_Result_reflection_;
  delete FileSystem_Stat::default_instance_;
  delete FileSystem_Stat_reflection_;
  delete FileSystem_Stat_Args::default_instance_;
  delete FileSystem_Stat_Args_reflection_;
  delete FileSystem_Stat_Result::default_instance_;
  delete FileSystem_Stat_Result_reflection_;
  delete FileSystem_MkDir::default_instance_;
  delete FileSystem_MkDir_reflection_;
  delete FileSystem_MkDir_Args::default_instance_;
  delete FileSystem_MkDir_Args_reflection_;
  delete FileSystem_MkDir_Result::default_instance_;
  delete FileSystem_MkDir_Result_reflection_;
  delete FileSystem_Touch::default_instance_;
  delete FileSystem_Touch_reflection_;
  delete FileSystem_Touch_Args::default_instance_;
  delete FileSystem_Touch_Args_reflection_;
  delete FileSystem_Touch_Result::default_instance_;
  delete FileSystem_Touch_Result_reflection_;
  delete FileSystem_RM::default_instance_;
  delete FileSystem_RM_reflection_;
  delete FileSystem_RM_Args::default_instance_;
  delete FileSystem_RM_Args_reflection_;
  delete FileSystem_RM_Result::default_instance_;
  delete FileSystem_RM_Result_reflection_;
  delete FileSystem_CP::default_instance_;
  delete FileSystem_CP_reflection_;
  delete FileSystem_CP_Args::default_instance_;
  delete FileSystem_CP_Args_reflection_;
  delete FileSystem_CP_Result::default_instance_;
  delete FileSystem_CP_Result_reflection_;
  delete FileSystem_MV::default_instance_;
  delete FileSystem_MV_reflection_;
  delete FileSystem_MV_Args::default_instance_;
  delete FileSystem_MV_Args_reflection_;
  delete FileSystem_MV_Result::default_instance_;
  delete FileSystem_MV_Result_reflection_;
  delete Graph::default_instance_;
  delete Graph_reflection_;
  delete Graph_NodesGraph::default_instance_;
  delete Graph_NodesGraph_reflection_;
  delete Graph_NodesGraph_Args::default_instance_;
  delete Graph_NodesGraph_Args_reflection_;
  delete Graph_NodesGraph_Result::default_instance_;
  delete Graph_NodesGraph_Result_reflection_;
  delete Graph_NodeByID::default_instance_;
  delete Graph_NodeByID_reflection_;
  delete Graph_NodeByID_Args::default_instance_;
  delete Graph_NodeByID_Args_reflection_;
  delete Graph_NodeByID_Result::default_instance_;
  delete Graph_NodeByID_Result_reflection_;
  delete Graph_AddNode::default_instance_;
  delete Graph_AddNode_reflection_;
  delete Graph_AddNode_Args::default_instance_;
  delete Graph_AddNode_Args_reflection_;
  delete Graph_AddNode_Result::default_instance_;
  delete Graph_AddNode_Result_reflection_;
  delete Graph_UpdateNode::default_instance_;
  delete Graph_UpdateNode_reflection_;
  delete Graph_UpdateNode_Args::default_instance_;
  delete Graph_UpdateNode_Args_reflection_;
  delete Graph_UpdateNode_Result::default_instance_;
  delete Graph_UpdateNode_Result_reflection_;
  delete Graph_UpdateNodeInPlace::default_instance_;
  delete Graph_UpdateNodeInPlace_reflection_;
  delete Graph_UpdateNodeInPlace_Args::default_instance_;
  delete Graph_UpdateNodeInPlace_Args_reflection_;
  delete Graph_UpdateNodeInPlace_Result::default_instance_;
  delete Graph_UpdateNodeInPlace_Result_reflection_;
  delete Graph_RemoveNode::default_instance_;
  delete Graph_RemoveNode_reflection_;
  delete Graph_RemoveNode_Args::default_instance_;
  delete Graph_RemoveNode_Args_reflection_;
  delete Graph_RemoveNode_Result::default_instance_;
  delete Graph_RemoveNode_Result_reflection_;
  delete Graph_Connect::default_instance_;
  delete Graph_Connect_reflection_;
  delete Graph_Connect_Args::default_instance_;
  delete Graph_Connect_Args_reflection_;
  delete Graph_Connect_Result::default_instance_;
  delete Graph_Connect_Result_reflection_;
  delete Graph_Disconnect::default_instance_;
  delete Graph_Disconnect_reflection_;
  delete Graph_Disconnect_Args::default_instance_;
  delete Graph_Disconnect_Args_reflection_;
  delete Graph_Disconnect_Result::default_instance_;
  delete Graph_Disconnect_Result_reflection_;
  delete Library::default_instance_;
  delete Library_reflection_;
  delete Library_Libraries::default_instance_;
  delete Library_Libraries_reflection_;
  delete Library_Libraries_Args::default_instance_;
  delete Library_Libraries_Args_reflection_;
  delete Library_Libraries_Result::default_instance_;
  delete Library_Libraries_Result_reflection_;
  delete Library_LibraryByID::default_instance_;
  delete Library_LibraryByID_reflection_;
  delete Library_LibraryByID_Args::default_instance_;
  delete Library_LibraryByID_Args_reflection_;
  delete Library_LibraryByID_Result::default_instance_;
  delete Library_LibraryByID_Result_reflection_;
  delete Library_CreateLibrary::default_instance_;
  delete Library_CreateLibrary_reflection_;
  delete Library_CreateLibrary_Args::default_instance_;
  delete Library_CreateLibrary_Args_reflection_;
  delete Library_CreateLibrary_Result::default_instance_;
  delete Library_CreateLibrary_Result_reflection_;
  delete Library_LoadLibrary::default_instance_;
  delete Library_LoadLibrary_reflection_;
  delete Library_LoadLibrary_Args::default_instance_;
  delete Library_LoadLibrary_Args_reflection_;
  delete Library_LoadLibrary_Result::default_instance_;
  delete Library_LoadLibrary_Result_reflection_;
  delete Library_UnloadLibrary::default_instance_;
  delete Library_UnloadLibrary_reflection_;
  delete Library_UnloadLibrary_Args::default_instance_;
  delete Library_UnloadLibrary_Args_reflection_;
  delete Library_UnloadLibrary_Result::default_instance_;
  delete Library_UnloadLibrary_Result_reflection_;
  delete Library_StoreLibrary::default_instance_;
  delete Library_StoreLibrary_reflection_;
  delete Library_StoreLibrary_Args::default_instance_;
  delete Library_StoreLibrary_Args_reflection_;
  delete Library_StoreLibrary_Result::default_instance_;
  delete Library_StoreLibrary_Result_reflection_;
  delete Library_BuildLibrary::default_instance_;
  delete Library_BuildLibrary_reflection_;
  delete Library_BuildLibrary_Args::default_instance_;
  delete Library_BuildLibrary_Args_reflection_;
  delete Library_BuildLibrary_Result::default_instance_;
  delete Library_BuildLibrary_Result_reflection_;
  delete Library_RunLibrary::default_instance_;
  delete Library_RunLibrary_reflection_;
  delete Library_RunLibrary_Args::default_instance_;
  delete Library_RunLibrary_Args_reflection_;
  delete Library_RunLibrary_Result::default_instance_;
  delete Library_RunLibrary_Result_reflection_;
  delete Library_InterpretLibrary::default_instance_;
  delete Library_InterpretLibrary_reflection_;
  delete Library_InterpretLibrary_Args::default_instance_;
  delete Library_InterpretLibrary_Args_reflection_;
  delete Library_InterpretLibrary_Result::default_instance_;
  delete Library_InterpretLibrary_Result_reflection_;
  delete Maintenance::default_instance_;
  delete Maintenance_reflection_;
  delete Maintenance_Initialize::default_instance_;
  delete Maintenance_Initialize_reflection_;
  delete Maintenance_Initialize_Args::default_instance_;
  delete Maintenance_Initialize_Args_reflection_;
  delete Maintenance_Initialize_Result::default_instance_;
  delete Maintenance_Initialize_Result_reflection_;
  delete Maintenance_Ping::default_instance_;
  delete Maintenance_Ping_reflection_;
  delete Maintenance_Ping_Args::default_instance_;
  delete Maintenance_Ping_Args_reflection_;
  delete Maintenance_Ping_Result::default_instance_;
  delete Maintenance_Ping_Result_reflection_;
  delete Maintenance_Dump::default_instance_;
  delete Maintenance_Dump_reflection_;
  delete Maintenance_Dump_Args::default_instance_;
  delete Maintenance_Dump_Args_reflection_;
  delete Maintenance_Dump_Result::default_instance_;
  delete Maintenance_Dump_Result_reflection_;
  delete Maintenance_Shutdown::default_instance_;
  delete Maintenance_Shutdown_reflection_;
  delete Maintenance_Shutdown_Args::default_instance_;
  delete Maintenance_Shutdown_Args_reflection_;
  delete Maintenance_Shutdown_Result::default_instance_;
  delete Maintenance_Shutdown_Result_reflection_;
  delete NodeDefault::default_instance_;
  delete NodeDefault_reflection_;
  delete NodeDefault_NodeDefaults::default_instance_;
  delete NodeDefault_NodeDefaults_reflection_;
  delete NodeDefault_NodeDefaults_Args::default_instance_;
  delete NodeDefault_NodeDefaults_Args_reflection_;
  delete NodeDefault_NodeDefaults_Result::default_instance_;
  delete NodeDefault_NodeDefaults_Result_reflection_;
  delete NodeDefault_SetNodeDefault::default_instance_;
  delete NodeDefault_SetNodeDefault_reflection_;
  delete NodeDefault_SetNodeDefault_Args::default_instance_;
  delete NodeDefault_SetNodeDefault_Args_reflection_;
  delete NodeDefault_SetNodeDefault_Result::default_instance_;
  delete NodeDefault_SetNodeDefault_Result_reflection_;
  delete NodeDefault_RemoveNodeDefault::default_instance_;
  delete NodeDefault_RemoveNodeDefault_reflection_;
  delete NodeDefault_RemoveNodeDefault_Args::default_instance_;
  delete NodeDefault_RemoveNodeDefault_Args_reflection_;
  delete NodeDefault_RemoveNodeDefault_Result::default_instance_;
  delete NodeDefault_RemoveNodeDefault_Result_reflection_;
  delete Parser::default_instance_;
  delete Parser_reflection_;
  delete Parser_ParseExpr::default_instance_;
  delete Parser_ParseExpr_reflection_;
  delete Parser_ParseExpr_Args::default_instance_;
  delete Parser_ParseExpr_Args_reflection_;
  delete Parser_ParseExpr_Result::default_instance_;
  delete Parser_ParseExpr_Result_reflection_;
  delete Parser_ParsePat::default_instance_;
  delete Parser_ParsePat_reflection_;
  delete Parser_ParsePat_Args::default_instance_;
  delete Parser_ParsePat_Args_reflection_;
  delete Parser_ParsePat_Result::default_instance_;
  delete Parser_ParsePat_Result_reflection_;
  delete Parser_ParseType::default_instance_;
  delete Parser_ParseType_reflection_;
  delete Parser_ParseType_Args::default_instance_;
  delete Parser_ParseType_Args_reflection_;
  delete Parser_ParseType_Result::default_instance_;
  delete Parser_ParseType_Result_reflection_;
  delete Parser_ParseNodeExpr::default_instance_;
  delete Parser_ParseNodeExpr_reflection_;
  delete Parser_ParseNodeExpr_Args::default_instance_;
  delete Parser_ParseNodeExpr_Args_reflection_;
  delete Parser_ParseNodeExpr_Result::default_instance_;
  delete Parser_ParseNodeExpr_Result_reflection_;
  delete Process::default_instance_;
  delete Process_reflection_;
  delete Process_Processes::default_instance_;
  delete Process_Processes_reflection_;
  delete Process_Processes_Args::default_instance_;
  delete Process_Processes_Args_reflection_;
  delete Process_Processes_Result::default_instance_;
  delete Process_Processes_Result_reflection_;
  delete Process_Terminate::default_instance_;
  delete Process_Terminate_reflection_;
  delete Process_Terminate_Args::default_instance_;
  delete Process_Terminate_Args_reflection_;
  delete Process_Terminate_Result::default_instance_;
  delete Process_Terminate_Result_reflection_;
  delete Project::default_instance_;
  delete Project_reflection_;
  delete Project_Projects::default_instance_;
  delete Project_Projects_reflection_;
  delete Project_Projects_Args::default_instance_;
  delete Project_Projects_Args_reflection_;
  delete Project_Projects_Result::default_instance_;
  delete Project_Projects_Result_reflection_;
  delete Project_ProjectByID::default_instance_;
  delete Project_ProjectByID_reflection_;
  delete Project_ProjectByID_Args::default_instance_;
  delete Project_ProjectByID_Args_reflection_;
  delete Project_ProjectByID_Result::default_instance_;
  delete Project_ProjectByID_Result_reflection_;
  delete Project_CreateProject::default_instance_;
  delete Project_CreateProject_reflection_;
  delete Project_CreateProject_Args::default_instance_;
  delete Project_CreateProject_Args_reflection_;
  delete Project_CreateProject_Result::default_instance_;
  delete Project_CreateProject_Result_reflection_;
  delete Project_OpenProject::default_instance_;
  delete Project_OpenProject_reflection_;
  delete Project_OpenProject_Args::default_instance_;
  delete Project_OpenProject_Args_reflection_;
  delete Project_OpenProject_Result::default_instance_;
  delete Project_OpenProject_Result_reflection_;
  delete Project_UpdateProject::default_instance_;
  delete Project_UpdateProject_reflection_;
  delete Project_UpdateProject_Args::default_instance_;
  delete Project_UpdateProject_Args_reflection_;
  delete Project_UpdateProject_Result::default_instance_;
  delete Project_UpdateProject_Result_reflection_;
  delete Project_CloseProject::default_instance_;
  delete Project_CloseProject_reflection_;
  delete Project_CloseProject_Args::default_instance_;
  delete Project_CloseProject_Args_reflection_;
  delete Project_CloseProject_Result::default_instance_;
  delete Project_CloseProject_Result_reflection_;
  delete Project_StoreProject::default_instance_;
  delete Project_StoreProject_reflection_;
  delete Project_StoreProject_Args::default_instance_;
  delete Project_StoreProject_Args_reflection_;
  delete Project_StoreProject_Result::default_instance_;
  delete Project_StoreProject_Result_reflection_;
  delete Properties::default_instance_;
  delete Properties_reflection_;
  delete Properties_GetProperties::default_instance_;
  delete Properties_GetProperties_reflection_;
  delete Properties_GetProperties_Args::default_instance_;
  delete Properties_GetProperties_Args_reflection_;
  delete Properties_GetProperties_Result::default_instance_;
  delete Properties_GetProperties_Result_reflection_;
  delete Properties_SetProperties::default_instance_;
  delete Properties_SetProperties_reflection_;
  delete Properties_SetProperties_Args::default_instance_;
  delete Properties_SetProperties_Args_reflection_;
  delete Properties_SetProperties_Result::default_instance_;
  delete Properties_SetProperties_Result_reflection_;
}

void protobuf_AddDesc_server_2dapi_2eproto() {
  static bool already_here = false;
  if (already_here) return;
  already_here = true;
  GOOGLE_PROTOBUF_VERIFY_VERSION;

  ::generated::proto::attributes::protobuf_AddDesc_attributes_2eproto();
  ::generated::proto::crumb::protobuf_AddDesc_crumb_2eproto();
  ::generated::proto::expr::protobuf_AddDesc_expr_2eproto();
  ::generated::proto::filesystem::protobuf_AddDesc_file_2dsystem_2eproto();
  ::generated::proto::graph::protobuf_AddDesc_graph_2eproto();
  ::generated::proto::graphview::protobuf_AddDesc_graphview_2eproto();
  ::generated::proto::library::protobuf_AddDesc_library_2eproto();
  ::generated::proto::module::protobuf_AddDesc_module_2eproto();
  ::generated::proto::nodedefault::protobuf_AddDesc_nodedefault_2eproto();
  ::generated::proto::pat::protobuf_AddDesc_pat_2eproto();
  ::generated::proto::project::protobuf_AddDesc_project_2eproto();
  ::generated::proto::type::protobuf_AddDesc_type_2eproto();
  ::generated::proto::focus::protobuf_AddDesc_focus_2eproto();
  ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(
    "\n\020server-api.proto\022\025generated.proto.batc"
    "h\032\020attributes.proto\032\013crumb.proto\032\nexpr.p"
    "roto\032\021file-system.proto\032\013graph.proto\032\017gr"
    "aphview.proto\032\rlibrary.proto\032\014module.pro"
    "to\032\021nodedefault.proto\032\tpat.proto\032\rprojec"
    "t.proto\032\ntype.proto\032\013focus.proto\"\257\r\n\007Req"
    "uest\0225\n\006method\030\001 \002(\0162%.generated.proto.b"
    "atch.Request.Method\022\024\n\005async\030\002 \001(\010:\005fals"
    "e\"\313\014\n\006Method\022\024\n\017AST_Definitions\020\314\010\022\022\n\rAS"
    "T_AddModule\020\315\010\022\021\n\014AST_AddClass\020\316\010\022\024\n\017AST"
    "_AddFunction\020\317\010\022\030\n\023AST_UpdateModuleCls\020\320"
    "\010\022\034\n\027AST_UpdateModuleImports\020\321\010\022\033\n\026AST_U"
    "pdateModuleFields\020\322\010\022\026\n\021AST_UpdateDataCl"
    "s\020\323\010\022\027\n\022AST_UpdateDataCons\020\324\010\022\032\n\025AST_Upd"
    "ateDataClasses\020\333\010\022\032\n\025AST_UpdateDataMetho"
    "ds\020\334\010\022\033\n\026AST_UpdateFunctionName\020\325\010\022\033\n\026AS"
    "T_UpdateFunctionPath\020\326\010\022\035\n\030AST_UpdateFun"
    "ctionInputs\020\327\010\022\035\n\030AST_UpdateFunctionOutp"
    "ut\020\330\010\022\017\n\nAST_Remove\020\331\010\022\032\n\025AST_ResolveDef"
    "inition\020\332\010\022\022\n\rFileSystem_LS\020\260\t\022\024\n\017FileSy"
    "stem_Stat\020\261\t\022\025\n\020FileSystem_MkDir\020\262\t\022\025\n\020F"
    "ileSystem_Touch\020\263\t\022\022\n\rFileSystem_RM\020\264\t\022\022"
    "\n\rFileSystem_CP\020\265\t\022\022\n\rFileSystem_MV\020\266\t\022\025"
    "\n\020Graph_NodesGraph\020\224\n\022\023\n\016Graph_NodeByID\020"
    "\225\n\022\022\n\rGraph_AddNode\020\226\n\022\025\n\020Graph_UpdateNo"
    "de\020\232\n\022\034\n\027Graph_UpdateNodeInPlace\020\233\n\022\025\n\020G"
    "raph_RemoveNode\020\227\n\022\022\n\rGraph_Connect\020\230\n\022\025"
    "\n\020Graph_Disconnect\020\231\n\022\026\n\021Library_Librari"
    "es\020\370\n\022\030\n\023Library_LibraryByID\020\371\n\022\032\n\025Libra"
    "ry_CreateLibrary\020\372\n\022\030\n\023Library_LoadLibra"
    "ry\020\373\n\022\032\n\025Library_UnloadLibrary\020\374\n\022\031\n\024Lib"
    "rary_StoreLibrary\020\375\n\022\031\n\024Library_BuildLib"
    "rary\020\376\n\022\027\n\022Library_RunLibrary\020\377\n\022\035\n\030Libr"
    "ary_InterpretLibrary\020\200\013\022\033\n\026Maintenance_I"
    "nitialize\020\334\013\022\025\n\020Maintenance_Ping\020\335\013\022\025\n\020M"
    "aintenance_Dump\020\336\013\022\031\n\024Maintenance_Shutdo"
    "wn\020\337\013\022\035\n\030NodeDefault_NodeDefaults\020\300\014\022\037\n\032"
    "NodeDefault_SetNodeDefault\020\301\014\022\"\n\035NodeDef"
    "ault_RemoveNodeDefault\020\302\014\022\025\n\020Parser_Pars"
    "eExpr\020\244\r\022\024\n\017Parser_ParsePat\020\245\r\022\025\n\020Parser"
    "_ParseType\020\246\r\022\031\n\024Parser_ParseNodeExpr\020\247\r"
    "\022\026\n\021Process_Processes\020\320\017\022\026\n\021Process_Term"
    "inate\020\321\017\022\025\n\020Project_Projects\020\210\016\022\030\n\023Proje"
    "ct_ProjectByID\020\211\016\022\032\n\025Project_CreateProje"
    "ct\020\212\016\022\030\n\023Project_OpenProject\020\213\016\022\032\n\025Proje"
    "ct_UpdateProject\020\214\016\022\031\n\024Project_CloseProj"
    "ect\020\215\016\022\031\n\024Project_StoreProject\020\216\016\022\035\n\030Pro"
    "perties_GetProperties\020\354\016\022\035\n\030Properties_S"
    "etProperties\020\355\016*\t\010\350\007\020\200\200\200\200\002\"\204\001\n\010Response\022"
    "2\n\004type\030\001 \002(\0162$.generated.proto.batch.Re"
    "sponse.Type\022\n\n\002id\030\002 \001(\005\"-\n\004Type\022\n\n\006Resul"
    "t\020\000\022\r\n\tException\020\001\022\n\n\006Accept\020\002*\t\010\350\007\020\200\200\200\200"
    "\002\"m\n\tException\022\017\n\007message\030\001 \001(\t2O\n\003rsp\022\037"
    ".generated.proto.batch.Response\030\350\007 \001(\0132 "
    ".generated.proto.batch.Exception\"\3470\n\003AST"
    "\032\357\002\n\013Definitions\032\311\001\n\004Args\022\020\n\010maxDepth\030\001 "
    "\001(\005\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb."
    "Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojec"
    "tID\030\004 \002(\0052Y\n\003req\022\036.generated.proto.batch"
    ".Request\030\314\010 \001(\0132+.generated.proto.batch."
    "AST.Definitions.Args\032\223\001\n\006Result\022+\n\005focus"
    "\030\001 \002(\0132\034.generated.proto.focus.Focus2\\\n\003"
    "rsp\022\037.generated.proto.batch.Response\030\314\010 "
    "\001(\0132-.generated.proto.batch.AST.Definiti"
    "ons.Result\032\220\003\n\tAddModule\032\353\001\n\004Args\022.\n\006mod"
    "ule\030\001 \002(\0132\036.generated.proto.module.Modul"
    "e\0224\n\010parentbc\030\002 \002(\0132\".generated.proto.cr"
    "umb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tpr"
    "ojectID\030\004 \002(\0052W\n\003req\022\036.generated.proto.b"
    "atch.Request\030\315\010 \001(\0132).generated.proto.ba"
    "tch.AST.AddModule.Args\032\224\001\n\006Result\022.\n\006mod"
    "ule\030\001 \002(\0132\036.generated.proto.module.Modul"
    "e2Z\n\003rsp\022\037.generated.proto.batch.Respons"
    "e\030\315\010 \001(\0132+.generated.proto.batch.AST.Add"
    "Module.Result\032\205\003\n\010AddClass\032\346\001\n\004Args\022*\n\006c"
    "lass_\030\001 \002(\0132\032.generated.proto.expr.Expr\022"
    "4\n\010parentbc\030\002 \002(\0132\".generated.proto.crum"
    "b.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tproj"
    "ectID\030\004 \002(\0052V\n\003req\022\036.generated.proto.bat"
    "ch.Request\030\316\010 \001(\0132(.generated.proto.batc"
    "h.AST.AddClass.Args\032\217\001\n\006Result\022*\n\006class_"
    "\030\001 \002(\0132\032.generated.proto.expr.Expr2Y\n\003rs"
    "p\022\037.generated.proto.batch.Response\030\316\010 \001("
    "\0132*.generated.proto.batch.AST.AddClass.R"
    "esult\032\222\003\n\013AddFunction\032\353\001\n\004Args\022,\n\010functi"
    "on\030\001 \002(\0132\032.generated.proto.expr.Expr\0224\n\010"
    "parentbc\030\002 \002(\0132\".generated.proto.crumb.B"
    "readcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tproject"
    "ID\030\004 \002(\0052Y\n\003req\022\036.generated.proto.batch."
    "Request\030\317\010 \001(\0132+.generated.proto.batch.A"
    "ST.AddFunction.Args\032\224\001\n\006Result\022,\n\010functi"
    "on\030\001 \002(\0132\032.generated.proto.expr.Expr2\\\n\003"
    "rsp\022\037.generated.proto.batch.Response\030\317\010 "
    "\001(\0132-.generated.proto.batch.AST.AddFunct"
    "ion.Result\032\344\002\n\017UpdateModuleCls\032\344\001\n\004Args\022"
    "\'\n\003cls\030\001 \002(\0132\032.generated.proto.type.Type"
    "\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb.Bre"
    "adcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID"
    "\030\004 \002(\0052]\n\003req\022\036.generated.proto.batch.Re"
    "quest\030\320\010 \001(\0132/.generated.proto.batch.AST"
    ".UpdateModuleCls.Args\032j\n\006Result2`\n\003rsp\022\037"
    ".generated.proto.batch.Response\030\320\010 \001(\01321"
    ".generated.proto.batch.AST.UpdateModuleC"
    "ls.Result\032\364\002\n\023UpdateModuleImports\032\354\001\n\004Ar"
    "gs\022+\n\007imports\030\001 \003(\0132\032.generated.proto.ex"
    "pr.Expr\022.\n\002bc\030\002 \002(\0132\".generated.proto.cr"
    "umb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tpr"
    "ojectID\030\004 \002(\0052a\n\003req\022\036.generated.proto.b"
    "atch.Request\030\321\010 \001(\01323.generated.proto.ba"
    "tch.AST.UpdateModuleImports.Args\032n\n\006Resu"
    "lt2d\n\003rsp\022\037.generated.proto.batch.Respon"
    "se\030\321\010 \001(\01325.generated.proto.batch.AST.Up"
    "dateModuleImports.Result\032\360\002\n\022UpdateModul"
    "eFields\032\352\001\n\004Args\022*\n\006fields\030\001 \003(\0132\032.gener"
    "ated.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\".gener"
    "ated.proto.crumb.Breadcrumbs\022\021\n\tlibraryI"
    "D\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052`\n\003req\022\036.gene"
    "rated.proto.batch.Request\030\322\010 \001(\01322.gener"
    "ated.proto.batch.AST.UpdateModuleFields."
    "Args\032m\n\006Result2c\n\003rsp\022\037.generated.proto."
    "batch.Response\030\322\010 \001(\01324.generated.proto."
    "batch.AST.UpdateModuleFields.Result\032\336\002\n\r"
    "UpdateDataCls\032\342\001\n\004Args\022\'\n\003cls\030\001 \002(\0132\032.ge"
    "nerated.proto.type.Type\022.\n\002bc\030\002 \002(\0132\".ge"
    "nerated.proto.crumb.Breadcrumbs\022\021\n\tlibra"
    "ryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052[\n\003req\022\036.g"
    "enerated.proto.batch.Request\030\323\010 \001(\0132-.ge"
    "nerated.proto.batch.AST.UpdateDataCls.Ar"
    "gs\032h\n\006Result2^\n\003rsp\022\037.generated.proto.ba"
    "tch.Response\030\323\010 \001(\0132/.generated.proto.ba"
    "tch.AST.UpdateDataCls.Result\032\342\002\n\016UpdateD"
    "ataCons\032\344\001\n\004Args\022(\n\004cons\030\001 \003(\0132\032.generat"
    "ed.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\".generat"
    "ed.proto.crumb.Breadcrumbs\022\021\n\tlibraryID\030"
    "\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052\\\n\003req\022\036.genera"
    "ted.proto.batch.Request\030\324\010 \001(\0132..generat"
    "ed.proto.batch.AST.UpdateDataCons.Args\032i"
    "\n\006Result2_\n\003rsp\022\037.generated.proto.batch."
    "Response\030\324\010 \001(\01320.generated.proto.batch."
    "AST.UpdateDataCons.Result\032\356\002\n\021UpdateData"
    "Classes\032\352\001\n\004Args\022+\n\007classes\030\001 \003(\0132\032.gene"
    "rated.proto.expr.Expr\022.\n\002bc\030\002 \002(\0132\".gene"
    "rated.proto.crumb.Breadcrumbs\022\021\n\tlibrary"
    "ID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052_\n\003req\022\036.gen"
    "erated.proto.batch.Request\030\333\010 \001(\01321.gene"
    "rated.proto.batch.AST.UpdateDataClasses."
    "Args\032l\n\006Result2b\n\003rsp\022\037.generated.proto."
    "batch.Response\030\333\010 \001(\01323.generated.proto."
    "batch.AST.UpdateDataClasses.Result\032\356\002\n\021U"
    "pdateDataMethods\032\352\001\n\004Args\022+\n\007methods\030\001 \003"
    "(\0132\032.generated.proto.expr.Expr\022.\n\002bc\030\002 \002"
    "(\0132\".generated.proto.crumb.Breadcrumbs\022\021"
    "\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052_\n\003"
    "req\022\036.generated.proto.batch.Request\030\334\010 \001"
    "(\01321.generated.proto.batch.AST.UpdateDat"
    "aMethods.Args\032l\n\006Result2b\n\003rsp\022\037.generat"
    "ed.proto.batch.Response\030\334\010 \001(\01323.generat"
    "ed.proto.batch.AST.UpdateDataMethods.Res"
    "ult\032\322\002\n\022UpdateFunctionName\032\314\001\n\004Args\022\014\n\004n"
    "ame\030\001 \002(\t\022.\n\002bc\030\002 \002(\0132\".generated.proto."
    "crumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\t"
    "projectID\030\004 \002(\0052`\n\003req\022\036.generated.proto"
    ".batch.Request\030\325\010 \001(\01322.generated.proto."
    "batch.AST.UpdateFunctionName.Args\032m\n\006Res"
    "ult2c\n\003rsp\022\037.generated.proto.batch.Respo"
    "nse\030\325\010 \001(\01324.generated.proto.batch.AST.U"
    "pdateFunctionName.Result\032\322\002\n\022UpdateFunct"
    "ionPath\032\314\001\n\004Args\022\014\n\004path\030\001 \003(\t\022.\n\002bc\030\002 \002"
    "(\0132\".generated.proto.crumb.Breadcrumbs\022\021"
    "\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052`\n\003"
    "req\022\036.generated.proto.batch.Request\030\326\010 \001"
    "(\01322.generated.proto.batch.AST.UpdateFun"
    "ctionPath.Args\032m\n\006Result2c\n\003rsp\022\037.genera"
    "ted.proto.batch.Response\030\326\010 \001(\01324.genera"
    "ted.proto.batch.AST.UpdateFunctionPath.R"
    "esult\032\366\002\n\024UpdateFunctionInputs\032\354\001\n\004Args\022"
    "*\n\006inputs\030\001 \003(\0132\032.generated.proto.expr.E"
    "xpr\022.\n\002bc\030\002 \002(\0132\".generated.proto.crumb."
    "Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojec"
    "tID\030\004 \002(\0052b\n\003req\022\036.generated.proto.batch"
    ".Request\030\327\010 \001(\01324.generated.proto.batch."
    "AST.UpdateFunctionInputs.Args\032o\n\006Result2"
    "e\n\003rsp\022\037.generated.proto.batch.Response\030"
    "\327\010 \001(\01326.generated.proto.batch.AST.Updat"
    "eFunctionInputs.Result\032\366\002\n\024UpdateFunctio"
    "nOutput\032\354\001\n\004Args\022*\n\006output\030\001 \002(\0132\032.gener"
    "ated.proto.type.Type\022.\n\002bc\030\002 \002(\0132\".gener"
    "ated.proto.crumb.Breadcrumbs\022\021\n\tlibraryI"
    "D\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052b\n\003req\022\036.gene"
    "rated.proto.batch.Request\030\330\010 \001(\01324.gener"
    "ated.proto.batch.AST.UpdateFunctionOutpu"
    "t.Args\032o\n\006Result2e\n\003rsp\022\037.generated.prot"
    "o.batch.Response\030\330\010 \001(\01326.generated.prot"
    "o.batch.AST.UpdateFunctionOutput.Result\032"
    "\240\002\n\006Remove\032\262\001\n\004Args\022.\n\002bc\030\001 \002(\0132\".genera"
    "ted.proto.crumb.Breadcrumbs\022\021\n\tlibraryID"
    "\030\002 \002(\005\022\021\n\tprojectID\030\003 \002(\0052T\n\003req\022\036.gener"
    "ated.proto.batch.Request\030\331\010 \001(\0132&.genera"
    "ted.proto.batch.AST.Remove.Args\032a\n\006Resul"
    "t2W\n\003rsp\022\037.generated.proto.batch.Respons"
    "e\030\331\010 \001(\0132(.generated.proto.batch.AST.Rem"
    "ove.Result\032\205\003\n\021ResolveDefinition\032\321\001\n\004Arg"
    "s\022\014\n\004name\030\001 \002(\t\0224\n\010parentbc\030\002 \002(\0132\".gene"
    "rated.proto.crumb.Breadcrumbs\022\021\n\tlibrary"
    "ID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052_\n\003req\022\036.gen"
    "erated.proto.batch.Request\030\332\010 \001(\01321.gene"
    "rated.proto.batch.AST.ResolveDefinition."
    "Args\032\233\001\n\006Result\022-\n\006astptr\030\001 \003(\0132\035.genera"
    "ted.proto.crumb.ASTPtr2b\n\003rsp\022\037.generate"
    "d.proto.batch.Response\030\332\010 \001(\01323.generate"
    "d.proto.batch.AST.ResolveDefinition.Resu"
    "lt\"\243\r\n\nFileSystem\032\213\002\n\002LS\032m\n\004Args\022\014\n\004path"
    "\030\001 \002(\t2W\n\003req\022\036.generated.proto.batch.Re"
    "quest\030\260\t \001(\0132).generated.proto.batch.Fil"
    "eSystem.LS.Args\032\225\001\n\006Result\022/\n\005items\030\001 \003("
    "\0132 .generated.proto.filesystem.Item2Z\n\003r"
    "sp\022\037.generated.proto.batch.Response\030\260\t \001"
    "(\0132+.generated.proto.batch.FileSystem.LS"
    ".Result\032\220\002\n\004Stat\032o\n\004Args\022\014\n\004path\030\001 \002(\t2Y"
    "\n\003req\022\036.generated.proto.batch.Request\030\261\t"
    " \001(\0132+.generated.proto.batch.FileSystem."
    "Stat.Args\032\226\001\n\006Result\022.\n\004item\030\001 \002(\0132 .gen"
    "erated.proto.filesystem.Item2\\\n\003rsp\022\037.ge"
    "nerated.proto.batch.Response\030\261\t \001(\0132-.ge"
    "nerated.proto.batch.FileSystem.Stat.Resu"
    "lt\032\342\001\n\005MkDir\032p\n\004Args\022\014\n\004path\030\001 \002(\t2Z\n\003re"
    "q\022\036.generated.proto.batch.Request\030\262\t \001(\013"
    "2,.generated.proto.batch.FileSystem.MkDi"
    "r.Args\032g\n\006Result2]\n\003rsp\022\037.generated.prot"
    "o.batch.Response\030\262\t \001(\0132..generated.prot"
    "o.batch.FileSystem.MkDir.Result\032\342\001\n\005Touc"
    "h\032p\n\004Args\022\014\n\004path\030\001 \002(\t2Z\n\003req\022\036.generat"
    "ed.proto.batch.Request\030\263\t \001(\0132,.generate"
    "d.proto.batch.FileSystem.Touch.Args\032g\n\006R"
    "esult2]\n\003rsp\022\037.generated.proto.batch.Res"
    "ponse\030\263\t \001(\0132..generated.proto.batch.Fil"
    "eSystem.Touch.Result\032\331\001\n\002RM\032m\n\004Args\022\014\n\004p"
    "ath\030\001 \002(\t2W\n\003req\022\036.generated.proto.batch"
    ".Request\030\264\t \001(\0132).generated.proto.batch."
    "FileSystem.RM.Args\032d\n\006Result2Z\n\003rsp\022\037.ge"
    "nerated.proto.batch.Response\030\264\t \001(\0132+.ge"
    "nerated.proto.batch.FileSystem.RM.Result"
    "\032\345\001\n\002CP\032y\n\004Args\022\013\n\003src\030\001 \002(\t\022\013\n\003dst\030\002 \002("
    "\t2W\n\003req\022\036.generated.proto.batch.Request"
    "\030\265\t \001(\0132).generated.proto.batch.FileSyst"
    "em.CP.Args\032d\n\006Result2Z\n\003rsp\022\037.generated."
    "proto.batch.Response\030\265\t \001(\0132+.generated."
    "proto.batch.FileSystem.CP.Result\032\345\001\n\002MV\032"
    "y\n\004Args\022\013\n\003src\030\001 \002(\t\022\013\n\003dst\030\002 \002(\t2W\n\003req"
    "\022\036.generated.proto.batch.Request\030\266\t \001(\0132"
    ").generated.proto.batch.FileSystem.MV.Ar"
    "gs\032d\n\006Result2Z\n\003rsp\022\037.generated.proto.ba"
    "tch.Response\030\266\t \001(\0132+.generated.proto.ba"
    "tch.FileSystem.MV.Result\"\317\026\n\005Graph\032\346\002\n\nN"
    "odesGraph\032\270\001\n\004Args\022.\n\002bc\030\001 \002(\0132\".generat"
    "ed.proto.crumb.Breadcrumbs\022\021\n\tlibraryID\030"
    "\002 \002(\005\022\021\n\tprojectID\030\003 \002(\0052Z\n\003req\022\036.genera"
    "ted.proto.batch.Request\030\224\n \001(\0132,.generat"
    "ed.proto.batch.Graph.NodesGraph.Args\032\234\001\n"
    "\006Result\0223\n\005graph\030\001 \002(\0132$.generated.proto"
    ".graphview.GraphView2]\n\003rsp\022\037.generated."
    "proto.batch.Response\030\224\n \001(\0132..generated."
    "proto.batch.Graph.NodesGraph.Result\032\346\002\n\010"
    "NodeByID\032\306\001\n\004Args\022\016\n\006nodeID\030\001 \002(\005\022.\n\002bc\030"
    "\002 \002(\0132\".generated.proto.crumb.Breadcrumb"
    "s\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052"
    "X\n\003req\022\036.generated.proto.batch.Request\030\225"
    "\n \001(\0132*.generated.proto.batch.Graph.Node"
    "ByID.Args\032\220\001\n\006Result\022)\n\004node\030\001 \002(\0132\033.gen"
    "erated.proto.graph.Node2[\n\003rsp\022\037.generat"
    "ed.proto.batch.Response\030\225\n \001(\0132,.generat"
    "ed.proto.batch.Graph.NodeByID.Result\032\342\002\n"
    "\007AddNode\032\340\001\n\004Args\022)\n\004node\030\001 \002(\0132\033.genera"
    "ted.proto.graph.Node\022.\n\002bc\030\002 \002(\0132\".gener"
    "ated.proto.crumb.Breadcrumbs\022\021\n\tlibraryI"
    "D\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052W\n\003req\022\036.gene"
    "rated.proto.batch.Request\030\226\n \001(\0132).gener"
    "ated.proto.batch.Graph.AddNode.Args\032t\n\006R"
    "esult\022\016\n\006nodeID\030\001 \002(\0052Z\n\003rsp\022\037.generated"
    ".proto.batch.Response\030\226\n \001(\0132+.generated"
    ".proto.batch.Graph.AddNode.Result\032\353\002\n\nUp"
    "dateNode\032\343\001\n\004Args\022)\n\004node\030\001 \002(\0132\033.genera"
    "ted.proto.graph.Node\022.\n\002bc\030\002 \002(\0132\".gener"
    "ated.proto.crumb.Breadcrumbs\022\021\n\tlibraryI"
    "D\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052Z\n\003req\022\036.gene"
    "rated.proto.batch.Request\030\232\n \001(\0132,.gener"
    "ated.proto.batch.Graph.UpdateNode.Args\032w"
    "\n\006Result\022\016\n\006nodeID\030\001 \002(\0052]\n\003rsp\022\037.genera"
    "ted.proto.batch.Response\030\232\n \001(\0132..genera"
    "ted.proto.batch.Graph.UpdateNode.Result\032"
    "\360\002\n\021UpdateNodeInPlace\032\352\001\n\004Args\022)\n\004node\030\001"
    " \002(\0132\033.generated.proto.graph.Node\022.\n\002bc\030"
    "\002 \002(\0132\".generated.proto.crumb.Breadcrumb"
    "s\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052"
    "a\n\003req\022\036.generated.proto.batch.Request\030\233"
    "\n \001(\01323.generated.proto.batch.Graph.Upda"
    "teNodeInPlace.Args\032n\n\006Result2d\n\003rsp\022\037.ge"
    "nerated.proto.batch.Response\030\233\n \001(\01325.ge"
    "nerated.proto.batch.Graph.UpdateNodeInPl"
    "ace.Result\032\300\002\n\nRemoveNode\032\310\001\n\004Args\022\016\n\006no"
    "deID\030\001 \002(\005\022.\n\002bc\030\002 \002(\0132\".generated.proto"
    ".crumb.Breadcrumbs\022\021\n\tlibraryID\030\003 \002(\005\022\021\n"
    "\tprojectID\030\004 \002(\0052Z\n\003req\022\036.generated.prot"
    "o.batch.Request\030\227\n \001(\0132,.generated.proto"
    ".batch.Graph.RemoveNode.Args\032g\n\006Result2]"
    "\n\003rsp\022\037.generated.proto.batch.Response\030\227"
    "\n \001(\0132..generated.proto.batch.Graph.Remo"
    "veNode.Result\032\357\002\n\007Connect\032\375\001\n\004Args\022\021\n\tsr"
    "cNodeID\030\001 \002(\005\022\017\n\007srcPort\030\002 \003(\005\022\021\n\tdstNod"
    "eID\030\003 \002(\005\022\017\n\007dstPort\030\004 \003(\005\022.\n\002bc\030\005 \002(\0132\""
    ".generated.proto.crumb.Breadcrumbs\022\021\n\tli"
    "braryID\030\006 \002(\005\022\021\n\tprojectID\030\007 \002(\0052W\n\003req\022"
    "\036.generated.proto.batch.Request\030\230\n \001(\0132)"
    ".generated.proto.batch.Graph.Connect.Arg"
    "s\032d\n\006Result2Z\n\003rsp\022\037.generated.proto.bat"
    "ch.Response\030\230\n \001(\0132+.generated.proto.bat"
    "ch.Graph.Connect.Result\032\370\002\n\nDisconnect\032\200"
    "\002\n\004Args\022\021\n\tsrcNodeID\030\001 \002(\005\022\017\n\007srcPort\030\002 "
    "\003(\005\022\021\n\tdstNodeID\030\003 \002(\005\022\017\n\007dstPort\030\004 \003(\005\022"
    ".\n\002bc\030\005 \002(\0132\".generated.proto.crumb.Brea"
    "dcrumbs\022\021\n\tlibraryID\030\006 \002(\005\022\021\n\tprojectID\030"
    "\007 \002(\0052Z\n\003req\022\036.generated.proto.batch.Req"
    "uest\030\231\n \001(\0132,.generated.proto.batch.Grap"
    "h.Disconnect.Args\032g\n\006Result2]\n\003rsp\022\037.gen"
    "erated.proto.batch.Response\030\231\n \001(\0132..gen"
    "erated.proto.batch.Graph.Disconnect.Resu"
    "lt\"\320\024\n\007Library\032\243\002\n\tLibraries\032v\n\004Args\022\021\n\t"
    "projectID\030\001 \002(\0052[\n\003req\022\036.generated.proto"
    ".batch.Request\030\370\n \001(\0132-.generated.proto."
    "batch.Library.Libraries.Args\032\235\001\n\006Result\022"
    "3\n\tlibraries\030\001 \003(\0132 .generated.proto.lib"
    "rary.Library2^\n\003rsp\022\037.generated.proto.ba"
    "tch.Response\030\370\n \001(\0132/.generated.proto.ba"
    "tch.Library.Libraries.Result\032\273\002\n\013Library"
    "ByID\032\213\001\n\004Args\022\021\n\tlibraryID\030\001 \002(\005\022\021\n\tproj"
    "ectID\030\002 \002(\0052]\n\003req\022\036.generated.proto.bat"
    "ch.Request\030\371\n \001(\0132/.generated.proto.batc"
    "h.Library.LibraryByID.Args\032\235\001\n\006Result\0221\n"
    "\007library\030\001 \002(\0132 .generated.proto.library"
    ".Library2`\n\003rsp\022\037.generated.proto.batch."
    "Response\030\371\n \001(\01321.generated.proto.batch."
    "Library.LibraryByID.Result\032\312\002\n\rCreateLib"
    "rary\032\226\001\n\004Args\022\014\n\004name\030\001 \002(\t\022\014\n\004path\030\002 \002("
    "\t\022\021\n\tprojectID\030\003 \002(\0052_\n\003req\022\036.generated."
    "proto.batch.Request\030\372\n \001(\01321.generated.p"
    "roto.batch.Library.CreateLibrary.Args\032\237\001"
    "\n\006Result\0221\n\007library\030\001 \002(\0132 .generated.pr"
    "oto.library.Library2b\n\003rsp\022\037.generated.p"
    "roto.batch.Response\030\372\n \001(\01323.generated.p"
    "roto.batch.Library.CreateLibrary.Result\032"
    "\266\002\n\013LoadLibrary\032\206\001\n\004Args\022\014\n\004path\030\001 \002(\t\022\021"
    "\n\tprojectID\030\002 \002(\0052]\n\003req\022\036.generated.pro"
    "to.batch.Request\030\373\n \001(\0132/.generated.prot"
    "o.batch.Library.LoadLibrary.Args\032\235\001\n\006Res"
    "ult\0221\n\007library\030\001 \002(\0132 .generated.proto.l"
    "ibrary.Library2`\n\003rsp\022\037.generated.proto."
    "batch.Response\030\373\n \001(\01321.generated.proto."
    "batch.Library.LoadLibrary.Result\032\215\002\n\rUnl"
    "oadLibrary\032\215\001\n\004Args\022\021\n\tlibraryID\030\001 \002(\005\022\021"
    "\n\tprojectID\030\002 \002(\0052_\n\003req\022\036.generated.pro"
    "to.batch.Request\030\374\n \001(\01321.generated.prot"
    "o.batch.Library.UnloadLibrary.Args\032l\n\006Re"
    "sult2b\n\003rsp\022\037.generated.proto.batch.Resp"
    "onse\030\374\n \001(\01323.generated.proto.batch.Libr"
    "ary.UnloadLibrary.Result\032\212\002\n\014StoreLibrar"
    "y\032\214\001\n\004Args\022\021\n\tlibraryID\030\001 \002(\005\022\021\n\tproject"
    "ID\030\002 \002(\0052^\n\003req\022\036.generated.proto.batch."
    "Request\030\375\n \001(\01320.generated.proto.batch.L"
    "ibrary.StoreLibrary.Args\032k\n\006Result2a\n\003rs"
    "p\022\037.generated.proto.batch.Response\030\375\n \001("
    "\01322.generated.proto.batch.Library.StoreL"
    "ibrary.Result\032\212\002\n\014BuildLibrary\032\214\001\n\004Args\022"
    "\021\n\tlibraryID\030\001 \002(\005\022\021\n\tprojectID\030\002 \002(\0052^\n"
    "\003req\022\036.generated.proto.batch.Request\030\376\n "
    "\001(\01320.generated.proto.batch.Library.Buil"
    "dLibrary.Args\032k\n\006Result2a\n\003rsp\022\037.generat"
    "ed.proto.batch.Response\030\376\n \001(\01322.generat"
    "ed.proto.batch.Library.BuildLibrary.Resu"
    "lt\032\227\002\n\nRunLibrary\032\212\001\n\004Args\022\021\n\tlibraryID\030"
    "\001 \002(\005\022\021\n\tprojectID\030\002 \002(\0052\\\n\003req\022\036.genera"
    "ted.proto.batch.Request\030\377\n \001(\0132..generat"
    "ed.proto.batch.Library.RunLibrary.Args\032|"
    "\n\006Result\022\021\n\tprocessID\030\001 \002(\0052_\n\003rsp\022\037.gen"
    "erated.proto.batch.Response\030\377\n \001(\01320.gen"
    "erated.proto.batch.Library.RunLibrary.Re"
    "sult\032\226\002\n\020InterpretLibrary\032\220\001\n\004Args\022\021\n\tli"
    "braryID\030\001 \002(\005\022\021\n\tprojectID\030\002 \002(\0052b\n\003req\022"
    "\036.generated.proto.batch.Request\030\200\013 \001(\01324"
    ".generated.proto.batch.Library.Interpret"
    "Library.Args\032o\n\006Result2e\n\003rsp\022\037.generate"
    "d.proto.batch.Response\030\200\013 \001(\01326.generate"
    "d.proto.batch.Library.InterpretLibrary.R"
    "esult\"\237\007\n\013Maintenance\032\345\001\n\nInitialize\032h\n\004"
    "Args2`\n\003req\022\036.generated.proto.batch.Requ"
    "est\030\334\013 \001(\01322.generated.proto.batch.Maint"
    "enance.Initialize.Args\032m\n\006Result2c\n\003rsp\022"
    "\037.generated.proto.batch.Response\030\334\013 \001(\0132"
    "4.generated.proto.batch.Maintenance.Init"
    "ialize.Result\032\357\001\n\004Ping\032p\n\004Args\022\014\n\004data\030\001"
    " \001(\0142Z\n\003req\022\036.generated.proto.batch.Requ"
    "est\030\335\013 \001(\0132,.generated.proto.batch.Maint"
    "enance.Ping.Args\032u\n\006Result\022\014\n\004data\030\001 \001(\014"
    "2]\n\003rsp\022\037.generated.proto.batch.Response"
    "\030\335\013 \001(\0132..generated.proto.batch.Maintena"
    "nce.Ping.Result\032\323\001\n\004Dump\032b\n\004Args2Z\n\003req\022"
    "\036.generated.proto.batch.Request\030\336\013 \001(\0132,"
    ".generated.proto.batch.Maintenance.Dump."
    "Args\032g\n\006Result2]\n\003rsp\022\037.generated.proto."
    "batch.Response\030\336\013 \001(\0132..generated.proto."
    "batch.Maintenance.Dump.Result\032\337\001\n\010Shutdo"
    "wn\032f\n\004Args2^\n\003req\022\036.generated.proto.batc"
    "h.Request\030\337\013 \001(\01320.generated.proto.batch"
    ".Maintenance.Shutdown.Args\032k\n\006Result2a\n\003"
    "rsp\022\037.generated.proto.batch.Response\030\337\013 "
    "\001(\01322.generated.proto.batch.Maintenance."
    "Shutdown.Result\"\220\t\n\013NodeDefault\032\222\003\n\014Node"
    "Defaults\032\320\001\n\004Args\022\016\n\006nodeID\030\001 \002(\005\022.\n\002bc\030"
    "\002 \002(\0132\".generated.proto.crumb.Breadcrumb"
    "s\022\021\n\tlibraryID\030\003 \002(\005\022\021\n\tprojectID\030\004 \002(\0052"
    "b\n\003req\022\036.generated.proto.batch.Request\030\300"
    "\014 \001(\01324.generated.proto.batch.NodeDefaul"
    "t.NodeDefaults.Args\032\256\001\n\006Result\022=\n\013defaul"
    "tsMap\030\001 \002(\0132(.generated.proto.nodedefaul"
    "t.DefaultsMap2e\n\003rsp\022\037.generated.proto.b"
    "atch.Response\030\300\014 \001(\01326.generated.proto.b"
    "atch.NodeDefault.NodeDefaults.Result\032\367\002\n"
    "\016SetNodeDefault\032\361\001\n\004Args\022\016\n\006inPort\030\001 \003(\005"
    "\022\r\n\005value\030\002 \002(\t\022\016\n\006nodeID\030\003 \002(\005\022.\n\002bc\030\004 "
    "\002(\0132\".generated.proto.crumb.Breadcrumbs\022"
    "\021\n\tlibraryID\030\005 \002(\005\022\021\n\tprojectID\030\006 \002(\0052d\n"
    "\003req\022\036.generated.proto.batch.Request\030\301\014 "
    "\001(\01326.generated.proto.batch.NodeDefault."
    "SetNodeDefault.Args\032q\n\006Result2g\n\003rsp\022\037.g"
    "enerated.proto.batch.Response\030\301\014 \001(\01328.g"
    "enerated.proto.batch.NodeDefault.SetNode"
    "Default.Result\032\361\002\n\021RemoveNodeDefault\032\345\001\n"
    "\004Args\022\016\n\006inPort\030\001 \003(\005\022\016\n\006nodeID\030\002 \002(\005\022.\n"
    "\002bc\030\003 \002(\0132\".generated.proto.crumb.Breadc"
    "rumbs\022\021\n\tlibraryID\030\004 \002(\005\022\021\n\tprojectID\030\005 "
    "\002(\0052g\n\003req\022\036.generated.proto.batch.Reque"
    "st\030\302\014 \001(\01329.generated.proto.batch.NodeDe"
    "fault.RemoveNodeDefault.Args\032t\n\006Result2j"
    "\n\003rsp\022\037.generated.proto.batch.Response\030\302"
    "\014 \001(\0132;.generated.proto.batch.NodeDefaul"
    "t.RemoveNodeDefault.Result\"\332\010\n\006Parser\032\220\002"
    "\n\tParseExpr\032o\n\004Args\022\013\n\003str\030\001 \002(\t2Z\n\003req\022"
    "\036.generated.proto.batch.Request\030\244\r \001(\0132,"
    ".generated.proto.batch.Parser.ParseExpr."
    "Args\032\221\001\n\006Result\022(\n\004expr\030\001 \002(\0132\032.generate"
    "d.proto.expr.Expr2]\n\003rsp\022\037.generated.pro"
    "to.batch.Response\030\244\r \001(\0132..generated.pro"
    "to.batch.Parser.ParseExpr.Result\032\212\002\n\010Par"
    "sePat\032n\n\004Args\022\013\n\003str\030\001 \002(\t2Y\n\003req\022\036.gene"
    "rated.proto.batch.Request\030\245\r \001(\0132+.gener"
    "ated.proto.batch.Parser.ParsePat.Args\032\215\001"
    "\n\006Result\022%\n\003pat\030\001 \002(\0132\030.generated.proto."
    "pat.Pat2\\\n\003rsp\022\037.generated.proto.batch.R"
    "esponse\030\245\r \001(\0132-.generated.proto.batch.P"
    "arser.ParsePat.Result\032\220\002\n\tParseType\032o\n\004A"
    "rgs\022\013\n\003str\030\001 \002(\t2Z\n\003req\022\036.generated.prot"
    "o.batch.Request\030\246\r \001(\0132,.generated.proto"
    ".batch.Parser.ParseType.Args\032\221\001\n\006Result\022"
    "(\n\004type\030\001 \002(\0132\032.generated.proto.type.Typ"
    "e2]\n\003rsp\022\037.generated.proto.batch.Respons"
    "e\030\246\r \001(\0132..generated.proto.batch.Parser."
    "ParseType.Result\032\234\002\n\rParseNodeExpr\032s\n\004Ar"
    "gs\022\013\n\003str\030\001 \002(\t2^\n\003req\022\036.generated.proto"
    ".batch.Request\030\247\r \001(\01320.generated.proto."
    "batch.Parser.ParseNodeExpr.Args\032\225\001\n\006Resu"
    "lt\022(\n\004expr\030\001 \002(\0132\032.generated.proto.expr."
    "Expr2a\n\003rsp\022\037.generated.proto.batch.Resp"
    "onse\030\247\r \001(\01322.generated.proto.batch.Pars"
    "er.ParseNodeExpr.Result\"\220\004\n\007Process\032\200\002\n\t"
    "Processes\032v\n\004Args\022\021\n\tprojectID\030\001 \002(\0052[\n\003"
    "req\022\036.generated.proto.batch.Request\030\320\017 \001"
    "(\0132-.generated.proto.batch.Process.Proce"
    "sses.Args\032{\n\006Result\022\021\n\tprocesses\030\001 \003(\0052^"
    "\n\003rsp\022\037.generated.proto.batch.Response\030\320"
    "\017 \001(\0132/.generated.proto.batch.Process.Pr"
    "ocesses.Result\032\201\002\n\tTerminate\032\211\001\n\004Args\022\021\n"
    "\tprojectID\030\001 \002(\005\022\021\n\tprocessID\030\002 \002(\0052[\n\003r"
    "eq\022\036.generated.proto.batch.Request\030\321\017 \001("
    "\0132-.generated.proto.batch.Process.Termin"
    "ate.Args\032h\n\006Result2^\n\003rsp\022\037.generated.pr"
    "oto.batch.Response\030\321\017 \001(\0132/.generated.pr"
    "oto.batch.Process.Terminate.Result\"\354\017\n\007P"
    "roject\032\214\002\n\010Projects\032b\n\004Args2Z\n\003req\022\036.gen"
    "erated.proto.batch.Request\030\210\016 \001(\0132,.gene"
    "rated.proto.batch.Project.Projects.Args\032"
    "\233\001\n\006Result\0222\n\010projects\030\001 \003(\0132 .generated"
    ".proto.project.Project2]\n\003rsp\022\037.generate"
    "d.proto.batch.Response\030\210\016 \001(\0132..generate"
    "d.proto.batch.Project.Projects.Result\032\247\002"
    "\n\013ProjectByID\032x\n\004Args\022\021\n\tprojectID\030\001 \002(\005"
    "2]\n\003req\022\036.generated.proto.batch.Request\030"
    "\211\016 \001(\0132/.generated.proto.batch.Project.P"
    "rojectByID.Args\032\235\001\n\006Result\0221\n\007project\030\001 "
    "\002(\0132 .generated.proto.project.Project2`\n"
    "\003rsp\022\037.generated.proto.batch.Response\030\211\016"
    " \001(\01321.generated.proto.batch.Project.Pro"
    "jectByID.Result\032\363\002\n\rCreateProject\032\277\001\n\004Ar"
    "gs\022\014\n\004name\030\001 \002(\t\022\014\n\004path\030\002 \002(\t\022:\n\nattrib"
    "utes\030\003 \002(\0132&.generated.proto.attributes."
    "Attributes2_\n\003req\022\036.generated.proto.batc"
    "h.Request\030\212\016 \001(\01321.generated.proto.batch"
    ".Project.CreateProject.Args\032\237\001\n\006Result\0221"
    "\n\007project\030\001 \002(\0132 .generated.proto.projec"
    "t.Project2b\n\003rsp\022\037.generated.proto.batch"
    ".Response\030\212\016 \001(\01323.generated.proto.batch"
    ".Project.CreateProject.Result\032\242\002\n\013OpenPr"
    "oject\032s\n\004Args\022\014\n\004path\030\001 \002(\t2]\n\003req\022\036.gen"
    "erated.proto.batch.Request\030\213\016 \001(\0132/.gene"
    "rated.proto.batch.Project.OpenProject.Ar"
    "gs\032\235\001\n\006Result\0221\n\007project\030\001 \002(\0132 .generat"
    "ed.proto.project.Project2`\n\003rsp\022\037.genera"
    "ted.proto.batch.Response\030\213\016 \001(\01321.genera"
    "ted.proto.batch.Project.OpenProject.Resu"
    "lt\032\232\002\n\rUpdateProject\032\232\001\n\004Args\0221\n\007project"
    "\030\001 \002(\0132 .generated.proto.project.Project"
    "2_\n\003req\022\036.generated.proto.batch.Request\030"
    "\214\016 \001(\01321.generated.proto.batch.Project.U"
    "pdateProject.Args\032l\n\006Result2b\n\003rsp\022\037.gen"
    "erated.proto.batch.Response\030\214\016 \001(\01323.gen"
    "erated.proto.batch.Project.UpdateProject"
    ".Result\032\366\001\n\014CloseProject\032y\n\004Args\022\021\n\tproj"
    "ectID\030\001 \002(\0052^\n\003req\022\036.generated.proto.bat"
    "ch.Request\030\215\016 \001(\01320.generated.proto.batc"
    "h.Project.CloseProject.Args\032k\n\006Result2a\n"
    "\003rsp\022\037.generated.proto.batch.Response\030\215\016"
    " \001(\01322.generated.proto.batch.Project.Clo"
    "seProject.Result\032\366\001\n\014StoreProject\032y\n\004Arg"
    "s\022\021\n\tprojectID\030\001 \002(\0052^\n\003req\022\036.generated."
    "proto.batch.Request\030\216\016 \001(\01320.generated.p"
    "roto.batch.Project.StoreProject.Args\032k\n\006"
    "Result2a\n\003rsp\022\037.generated.proto.batch.Re"
    "sponse\030\216\016 \001(\01322.generated.proto.batch.Pr"
    "oject.StoreProject.Result\"\321\005\n\nProperties"
    "\032\340\002\n\rGetProperties\032\240\001\n\004Args\022\016\n\006nodeID\030\001 "
    "\002(\005\022\021\n\tlibraryID\030\002 \002(\005\022\021\n\tprojectID\030\003 \002("
    "\0052b\n\003req\022\036.generated.proto.batch.Request"
    "\030\354\016 \001(\01324.generated.proto.batch.Properti"
    "es.GetProperties.Args\032\253\001\n\006Result\022:\n\nprop"
    "erties\030\001 \002(\0132&.generated.proto.attribute"
    "s.Properties2e\n\003rsp\022\037.generated.proto.ba"
    "tch.Response\030\354\016 \001(\01326.generated.proto.ba"
    "tch.Properties.GetProperties.Result\032\337\002\n\r"
    "SetProperties\032\334\001\n\004Args\022:\n\nproperties\030\001 \002"
    "(\0132&.generated.proto.attributes.Properti"
    "es\022\016\n\006nodeID\030\002 \002(\005\022\021\n\tlibraryID\030\003 \002(\005\022\021\n"
    "\tprojectID\030\004 \002(\0052b\n\003req\022\036.generated.prot"
    "o.batch.Request\030\355\016 \001(\01324.generated.proto"
    ".batch.Properties.SetProperties.Args\032o\n\006"
    "Result2e\n\003rsp\022\037.generated.proto.batch.Re"
    "sponse\030\355\016 \001(\01326.generated.proto.batch.Pr"
    "operties.SetProperties.Result", 22189);
  ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile(
    "server-api.proto", &protobuf_RegisterTypes);
  Request::default_instance_ = new Request();
  Response::default_instance_ = new Response();
  Exception::default_instance_ = new Exception();
  AST::default_instance_ = new AST();
  AST_Definitions::default_instance_ = new AST_Definitions();
  AST_Definitions_Args::default_instance_ = new AST_Definitions_Args();
  AST_Definitions_Result::default_instance_ = new AST_Definitions_Result();
  AST_AddModule::default_instance_ = new AST_AddModule();
  AST_AddModule_Args::default_instance_ = new AST_AddModule_Args();
  AST_AddModule_Result::default_instance_ = new AST_AddModule_Result();
  AST_AddClass::default_instance_ = new AST_AddClass();
  AST_AddClass_Args::default_instance_ = new AST_AddClass_Args();
  AST_AddClass_Result::default_instance_ = new AST_AddClass_Result();
  AST_AddFunction::default_instance_ = new AST_AddFunction();
  AST_AddFunction_Args::default_instance_ = new AST_AddFunction_Args();
  AST_AddFunction_Result::default_instance_ = new AST_AddFunction_Result();
  AST_UpdateModuleCls::default_instance_ = new AST_UpdateModuleCls();
  AST_UpdateModuleCls_Args::default_instance_ = new AST_UpdateModuleCls_Args();
  AST_UpdateModuleCls_Result::default_instance_ = new AST_UpdateModuleCls_Result();
  AST_UpdateModuleImports::default_instance_ = new AST_UpdateModuleImports();
  AST_UpdateModuleImports_Args::default_instance_ = new AST_UpdateModuleImports_Args();
  AST_UpdateModuleImports_Result::default_instance_ = new AST_UpdateModuleImports_Result();
  AST_UpdateModuleFields::default_instance_ = new AST_UpdateModuleFields();
  AST_UpdateModuleFields_Args::default_instance_ = new AST_UpdateModuleFields_Args();
  AST_UpdateModuleFields_Result::default_instance_ = new AST_UpdateModuleFields_Result();
  AST_UpdateDataCls::default_instance_ = new AST_UpdateDataCls();
  AST_UpdateDataCls_Args::default_instance_ = new AST_UpdateDataCls_Args();
  AST_UpdateDataCls_Result::default_instance_ = new AST_UpdateDataCls_Result();
  AST_UpdateDataCons::default_instance_ = new AST_UpdateDataCons();
  AST_UpdateDataCons_Args::default_instance_ = new AST_UpdateDataCons_Args();
  AST_UpdateDataCons_Result::default_instance_ = new AST_UpdateDataCons_Result();
  AST_UpdateDataClasses::default_instance_ = new AST_UpdateDataClasses();
  AST_UpdateDataClasses_Args::default_instance_ = new AST_UpdateDataClasses_Args();
  AST_UpdateDataClasses_Result::default_instance_ = new AST_UpdateDataClasses_Result();
  AST_UpdateDataMethods::default_instance_ = new AST_UpdateDataMethods();
  AST_UpdateDataMethods_Args::default_instance_ = new AST_UpdateDataMethods_Args();
  AST_UpdateDataMethods_Result::default_instance_ = new AST_UpdateDataMethods_Result();
  AST_UpdateFunctionName::default_instance_ = new AST_UpdateFunctionName();
  AST_UpdateFunctionName_Args::default_instance_ = new AST_UpdateFunctionName_Args();
  AST_UpdateFunctionName_Result::default_instance_ = new AST_UpdateFunctionName_Result();
  AST_UpdateFunctionPath::default_instance_ = new AST_UpdateFunctionPath();
  AST_UpdateFunctionPath_Args::default_instance_ = new AST_UpdateFunctionPath_Args();
  AST_UpdateFunctionPath_Result::default_instance_ = new AST_UpdateFunctionPath_Result();
  AST_UpdateFunctionInputs::default_instance_ = new AST_UpdateFunctionInputs();
  AST_UpdateFunctionInputs_Args::default_instance_ = new AST_UpdateFunctionInputs_Args();
  AST_UpdateFunctionInputs_Result::default_instance_ = new AST_UpdateFunctionInputs_Result();
  AST_UpdateFunctionOutput::default_instance_ = new AST_UpdateFunctionOutput();
  AST_UpdateFunctionOutput_Args::default_instance_ = new AST_UpdateFunctionOutput_Args();
  AST_UpdateFunctionOutput_Result::default_instance_ = new AST_UpdateFunctionOutput_Result();
  AST_Remove::default_instance_ = new AST_Remove();
  AST_Remove_Args::default_instance_ = new AST_Remove_Args();
  AST_Remove_Result::default_instance_ = new AST_Remove_Result();
  AST_ResolveDefinition::default_instance_ = new AST_ResolveDefinition();
  AST_ResolveDefinition_Args::default_instance_ = new AST_ResolveDefinition_Args();
  AST_ResolveDefinition_Result::default_instance_ = new AST_ResolveDefinition_Result();
  FileSystem::default_instance_ = new FileSystem();
  FileSystem_LS::default_instance_ = new FileSystem_LS();
  FileSystem_LS_Args::default_instance_ = new FileSystem_LS_Args();
  FileSystem_LS_Result::default_instance_ = new FileSystem_LS_Result();
  FileSystem_Stat::default_instance_ = new FileSystem_Stat();
  FileSystem_Stat_Args::default_instance_ = new FileSystem_Stat_Args();
  FileSystem_Stat_Result::default_instance_ = new FileSystem_Stat_Result();
  FileSystem_MkDir::default_instance_ = new FileSystem_MkDir();
  FileSystem_MkDir_Args::default_instance_ = new FileSystem_MkDir_Args();
  FileSystem_MkDir_Result::default_instance_ = new FileSystem_MkDir_Result();
  FileSystem_Touch::default_instance_ = new FileSystem_Touch();
  FileSystem_Touch_Args::default_instance_ = new FileSystem_Touch_Args();
  FileSystem_Touch_Result::default_instance_ = new FileSystem_Touch_Result();
  FileSystem_RM::default_instance_ = new FileSystem_RM();
  FileSystem_RM_Args::default_instance_ = new FileSystem_RM_Args();
  FileSystem_RM_Result::default_instance_ = new FileSystem_RM_Result();
  FileSystem_CP::default_instance_ = new FileSystem_CP();
  FileSystem_CP_Args::default_instance_ = new FileSystem_CP_Args();
  FileSystem_CP_Result::default_instance_ = new FileSystem_CP_Result();
  FileSystem_MV::default_instance_ = new FileSystem_MV();
  FileSystem_MV_Args::default_instance_ = new FileSystem_MV_Args();
  FileSystem_MV_Result::default_instance_ = new FileSystem_MV_Result();
  Graph::default_instance_ = new Graph();
  Graph_NodesGraph::default_instance_ = new Graph_NodesGraph();
  Graph_NodesGraph_Args::default_instance_ = new Graph_NodesGraph_Args();
  Graph_NodesGraph_Result::default_instance_ = new Graph_NodesGraph_Result();
  Graph_NodeByID::default_instance_ = new Graph_NodeByID();
  Graph_NodeByID_Args::default_instance_ = new Graph_NodeByID_Args();
  Graph_NodeByID_Result::default_instance_ = new Graph_NodeByID_Result();
  Graph_AddNode::default_instance_ = new Graph_AddNode();
  Graph_AddNode_Args::default_instance_ = new Graph_AddNode_Args();
  Graph_AddNode_Result::default_instance_ = new Graph_AddNode_Result();
  Graph_UpdateNode::default_instance_ = new Graph_UpdateNode();
  Graph_UpdateNode_Args::default_instance_ = new Graph_UpdateNode_Args();
  Graph_UpdateNode_Result::default_instance_ = new Graph_UpdateNode_Result();
  Graph_UpdateNodeInPlace::default_instance_ = new Graph_UpdateNodeInPlace();
  Graph_UpdateNodeInPlace_Args::default_instance_ = new Graph_UpdateNodeInPlace_Args();
  Graph_UpdateNodeInPlace_Result::default_instance_ = new Graph_UpdateNodeInPlace_Result();
  Graph_RemoveNode::default_instance_ = new Graph_RemoveNode();
  Graph_RemoveNode_Args::default_instance_ = new Graph_RemoveNode_Args();
  Graph_RemoveNode_Result::default_instance_ = new Graph_RemoveNode_Result();
  Graph_Connect::default_instance_ = new Graph_Connect();
  Graph_Connect_Args::default_instance_ = new Graph_Connect_Args();
  Graph_Connect_Result::default_instance_ = new Graph_Connect_Result();
  Graph_Disconnect::default_instance_ = new Graph_Disconnect();
  Graph_Disconnect_Args::default_instance_ = new Graph_Disconnect_Args();
  Graph_Disconnect_Result::default_instance_ = new Graph_Disconnect_Result();
  Library::default_instance_ = new Library();
  Library_Libraries::default_instance_ = new Library_Libraries();
  Library_Libraries_Args::default_instance_ = new Library_Libraries_Args();
  Library_Libraries_Result::default_instance_ = new Library_Libraries_Result();
  Library_LibraryByID::default_instance_ = new Library_LibraryByID();
  Library_LibraryByID_Args::default_instance_ = new Library_LibraryByID_Args();
  Library_LibraryByID_Result::default_instance_ = new Library_LibraryByID_Result();
  Library_CreateLibrary::default_instance_ = new Library_CreateLibrary();
  Library_CreateLibrary_Args::default_instance_ = new Library_CreateLibrary_Args();
  Library_CreateLibrary_Result::default_instance_ = new Library_CreateLibrary_Result();
  Library_LoadLibrary::default_instance_ = new Library_LoadLibrary();
  Library_LoadLibrary_Args::default_instance_ = new Library_LoadLibrary_Args();
  Library_LoadLibrary_Result::default_instance_ = new Library_LoadLibrary_Result();
  Library_UnloadLibrary::default_instance_ = new Library_UnloadLibrary();
  Library_UnloadLibrary_Args::default_instance_ = new Library_UnloadLibrary_Args();
  Library_UnloadLibrary_Result::default_instance_ = new Library_UnloadLibrary_Result();
  Library_StoreLibrary::default_instance_ = new Library_StoreLibrary();
  Library_StoreLibrary_Args::default_instance_ = new Library_StoreLibrary_Args();
  Library_StoreLibrary_Result::default_instance_ = new Library_StoreLibrary_Result();
  Library_BuildLibrary::default_instance_ = new Library_BuildLibrary();
  Library_BuildLibrary_Args::default_instance_ = new Library_BuildLibrary_Args();
  Library_BuildLibrary_Result::default_instance_ = new Library_BuildLibrary_Result();
  Library_RunLibrary::default_instance_ = new Library_RunLibrary();
  Library_RunLibrary_Args::default_instance_ = new Library_RunLibrary_Args();
  Library_RunLibrary_Result::default_instance_ = new Library_RunLibrary_Result();
  Library_InterpretLibrary::default_instance_ = new Library_InterpretLibrary();
  Library_InterpretLibrary_Args::default_instance_ = new Library_InterpretLibrary_Args();
  Library_InterpretLibrary_Result::default_instance_ = new Library_InterpretLibrary_Result();
  Maintenance::default_instance_ = new Maintenance();
  Maintenance_Initialize::default_instance_ = new Maintenance_Initialize();
  Maintenance_Initialize_Args::default_instance_ = new Maintenance_Initialize_Args();
  Maintenance_Initialize_Result::default_instance_ = new Maintenance_Initialize_Result();
  Maintenance_Ping::default_instance_ = new Maintenance_Ping();
  Maintenance_Ping_Args::default_instance_ = new Maintenance_Ping_Args();
  Maintenance_Ping_Result::default_instance_ = new Maintenance_Ping_Result();
  Maintenance_Dump::default_instance_ = new Maintenance_Dump();
  Maintenance_Dump_Args::default_instance_ = new Maintenance_Dump_Args();
  Maintenance_Dump_Result::default_instance_ = new Maintenance_Dump_Result();
  Maintenance_Shutdown::default_instance_ = new Maintenance_Shutdown();
  Maintenance_Shutdown_Args::default_instance_ = new Maintenance_Shutdown_Args();
  Maintenance_Shutdown_Result::default_instance_ = new Maintenance_Shutdown_Result();
  NodeDefault::default_instance_ = new NodeDefault();
  NodeDefault_NodeDefaults::default_instance_ = new NodeDefault_NodeDefaults();
  NodeDefault_NodeDefaults_Args::default_instance_ = new NodeDefault_NodeDefaults_Args();
  NodeDefault_NodeDefaults_Result::default_instance_ = new NodeDefault_NodeDefaults_Result();
  NodeDefault_SetNodeDefault::default_instance_ = new NodeDefault_SetNodeDefault();
  NodeDefault_SetNodeDefault_Args::default_instance_ = new NodeDefault_SetNodeDefault_Args();
  NodeDefault_SetNodeDefault_Result::default_instance_ = new NodeDefault_SetNodeDefault_Result();
  NodeDefault_RemoveNodeDefault::default_instance_ = new NodeDefault_RemoveNodeDefault();
  NodeDefault_RemoveNodeDefault_Args::default_instance_ = new NodeDefault_RemoveNodeDefault_Args();
  NodeDefault_RemoveNodeDefault_Result::default_instance_ = new NodeDefault_RemoveNodeDefault_Result();
  Parser::default_instance_ = new Parser();
  Parser_ParseExpr::default_instance_ = new Parser_ParseExpr();
  Parser_ParseExpr_Args::default_instance_ = new Parser_ParseExpr_Args();
  Parser_ParseExpr_Result::default_instance_ = new Parser_ParseExpr_Result();
  Parser_ParsePat::default_instance_ = new Parser_ParsePat();
  Parser_ParsePat_Args::default_instance_ = new Parser_ParsePat_Args();
  Parser_ParsePat_Result::default_instance_ = new Parser_ParsePat_Result();
  Parser_ParseType::default_instance_ = new Parser_ParseType();
  Parser_ParseType_Args::default_instance_ = new Parser_ParseType_Args();
  Parser_ParseType_Result::default_instance_ = new Parser_ParseType_Result();
  Parser_ParseNodeExpr::default_instance_ = new Parser_ParseNodeExpr();
  Parser_ParseNodeExpr_Args::default_instance_ = new Parser_ParseNodeExpr_Args();
  Parser_ParseNodeExpr_Result::default_instance_ = new Parser_ParseNodeExpr_Result();
  Process::default_instance_ = new Process();
  Process_Processes::default_instance_ = new Process_Processes();
  Process_Processes_Args::default_instance_ = new Process_Processes_Args();
  Process_Processes_Result::default_instance_ = new Process_Processes_Result();
  Process_Terminate::default_instance_ = new Process_Terminate();
  Process_Terminate_Args::default_instance_ = new Process_Terminate_Args();
  Process_Terminate_Result::default_instance_ = new Process_Terminate_Result();
  Project::default_instance_ = new Project();
  Project_Projects::default_instance_ = new Project_Projects();
  Project_Projects_Args::default_instance_ = new Project_Projects_Args();
  Project_Projects_Result::default_instance_ = new Project_Projects_Result();
  Project_ProjectByID::default_instance_ = new Project_ProjectByID();
  Project_ProjectByID_Args::default_instance_ = new Project_ProjectByID_Args();
  Project_ProjectByID_Result::default_instance_ = new Project_ProjectByID_Result();
  Project_CreateProject::default_instance_ = new Project_CreateProject();
  Project_CreateProject_Args::default_instance_ = new Project_CreateProject_Args();
  Project_CreateProject_Result::default_instance_ = new Project_CreateProject_Result();
  Project_OpenProject::default_instance_ = new Project_OpenProject();
  Project_OpenProject_Args::default_instance_ = new Project_OpenProject_Args();
  Project_OpenProject_Result::default_instance_ = new Project_OpenProject_Result();
  Project_UpdateProject::default_instance_ = new Project_UpdateProject();
  Project_UpdateProject_Args::default_instance_ = new Project_UpdateProject_Args();
  Project_UpdateProject_Result::default_instance_ = new Project_UpdateProject_Result();
  Project_CloseProject::default_instance_ = new Project_CloseProject();
  Project_CloseProject_Args::default_instance_ = new Project_CloseProject_Args();
  Project_CloseProject_Result::default_instance_ = new Project_CloseProject_Result();
  Project_StoreProject::default_instance_ = new Project_StoreProject();
  Project_StoreProject_Args::default_instance_ = new Project_StoreProject_Args();
  Project_StoreProject_Result::default_instance_ = new Project_StoreProject_Result();
  Properties::default_instance_ = new Properties();
  Properties_GetProperties::default_instance_ = new Properties_GetProperties();
  Properties_GetProperties_Args::default_instance_ = new Properties_GetProperties_Args();
  Properties_GetProperties_Result::default_instance_ = new Properties_GetProperties_Result();
  Properties_SetProperties::default_instance_ = new Properties_SetProperties();
  Properties_SetProperties_Args::default_instance_ = new Properties_SetProperties_Args();
  Properties_SetProperties_Result::default_instance_ = new Properties_SetProperties_Result();
  Request::default_instance_->InitAsDefaultInstance();
  Response::default_instance_->InitAsDefaultInstance();
  Exception::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1000, 11, false, false,
    &::generated::proto::batch::Exception::default_instance());
  AST::default_instance_->InitAsDefaultInstance();
  AST_Definitions::default_instance_->InitAsDefaultInstance();
  AST_Definitions_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1100, 11, false, false,
    &::generated::proto::batch::AST_Definitions_Args::default_instance());
  AST_Definitions_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1100, 11, false, false,
    &::generated::proto::batch::AST_Definitions_Result::default_instance());
  AST_AddModule::default_instance_->InitAsDefaultInstance();
  AST_AddModule_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1101, 11, false, false,
    &::generated::proto::batch::AST_AddModule_Args::default_instance());
  AST_AddModule_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1101, 11, false, false,
    &::generated::proto::batch::AST_AddModule_Result::default_instance());
  AST_AddClass::default_instance_->InitAsDefaultInstance();
  AST_AddClass_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1102, 11, false, false,
    &::generated::proto::batch::AST_AddClass_Args::default_instance());
  AST_AddClass_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1102, 11, false, false,
    &::generated::proto::batch::AST_AddClass_Result::default_instance());
  AST_AddFunction::default_instance_->InitAsDefaultInstance();
  AST_AddFunction_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1103, 11, false, false,
    &::generated::proto::batch::AST_AddFunction_Args::default_instance());
  AST_AddFunction_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1103, 11, false, false,
    &::generated::proto::batch::AST_AddFunction_Result::default_instance());
  AST_UpdateModuleCls::default_instance_->InitAsDefaultInstance();
  AST_UpdateModuleCls_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1104, 11, false, false,
    &::generated::proto::batch::AST_UpdateModuleCls_Args::default_instance());
  AST_UpdateModuleCls_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1104, 11, false, false,
    &::generated::proto::batch::AST_UpdateModuleCls_Result::default_instance());
  AST_UpdateModuleImports::default_instance_->InitAsDefaultInstance();
  AST_UpdateModuleImports_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1105, 11, false, false,
    &::generated::proto::batch::AST_UpdateModuleImports_Args::default_instance());
  AST_UpdateModuleImports_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1105, 11, false, false,
    &::generated::proto::batch::AST_UpdateModuleImports_Result::default_instance());
  AST_UpdateModuleFields::default_instance_->InitAsDefaultInstance();
  AST_UpdateModuleFields_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1106, 11, false, false,
    &::generated::proto::batch::AST_UpdateModuleFields_Args::default_instance());
  AST_UpdateModuleFields_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1106, 11, false, false,
    &::generated::proto::batch::AST_UpdateModuleFields_Result::default_instance());
  AST_UpdateDataCls::default_instance_->InitAsDefaultInstance();
  AST_UpdateDataCls_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1107, 11, false, false,
    &::generated::proto::batch::AST_UpdateDataCls_Args::default_instance());
  AST_UpdateDataCls_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1107, 11, false, false,
    &::generated::proto::batch::AST_UpdateDataCls_Result::default_instance());
  AST_UpdateDataCons::default_instance_->InitAsDefaultInstance();
  AST_UpdateDataCons_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1108, 11, false, false,
    &::generated::proto::batch::AST_UpdateDataCons_Args::default_instance());
  AST_UpdateDataCons_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1108, 11, false, false,
    &::generated::proto::batch::AST_UpdateDataCons_Result::default_instance());
  AST_UpdateDataClasses::default_instance_->InitAsDefaultInstance();
  AST_UpdateDataClasses_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1115, 11, false, false,
    &::generated::proto::batch::AST_UpdateDataClasses_Args::default_instance());
  AST_UpdateDataClasses_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1115, 11, false, false,
    &::generated::proto::batch::AST_UpdateDataClasses_Result::default_instance());
  AST_UpdateDataMethods::default_instance_->InitAsDefaultInstance();
  AST_UpdateDataMethods_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1116, 11, false, false,
    &::generated::proto::batch::AST_UpdateDataMethods_Args::default_instance());
  AST_UpdateDataMethods_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1116, 11, false, false,
    &::generated::proto::batch::AST_UpdateDataMethods_Result::default_instance());
  AST_UpdateFunctionName::default_instance_->InitAsDefaultInstance();
  AST_UpdateFunctionName_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1109, 11, false, false,
    &::generated::proto::batch::AST_UpdateFunctionName_Args::default_instance());
  AST_UpdateFunctionName_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1109, 11, false, false,
    &::generated::proto::batch::AST_UpdateFunctionName_Result::default_instance());
  AST_UpdateFunctionPath::default_instance_->InitAsDefaultInstance();
  AST_UpdateFunctionPath_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1110, 11, false, false,
    &::generated::proto::batch::AST_UpdateFunctionPath_Args::default_instance());
  AST_UpdateFunctionPath_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1110, 11, false, false,
    &::generated::proto::batch::AST_UpdateFunctionPath_Result::default_instance());
  AST_UpdateFunctionInputs::default_instance_->InitAsDefaultInstance();
  AST_UpdateFunctionInputs_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1111, 11, false, false,
    &::generated::proto::batch::AST_UpdateFunctionInputs_Args::default_instance());
  AST_UpdateFunctionInputs_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1111, 11, false, false,
    &::generated::proto::batch::AST_UpdateFunctionInputs_Result::default_instance());
  AST_UpdateFunctionOutput::default_instance_->InitAsDefaultInstance();
  AST_UpdateFunctionOutput_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1112, 11, false, false,
    &::generated::proto::batch::AST_UpdateFunctionOutput_Args::default_instance());
  AST_UpdateFunctionOutput_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1112, 11, false, false,
    &::generated::proto::batch::AST_UpdateFunctionOutput_Result::default_instance());
  AST_Remove::default_instance_->InitAsDefaultInstance();
  AST_Remove_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1113, 11, false, false,
    &::generated::proto::batch::AST_Remove_Args::default_instance());
  AST_Remove_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1113, 11, false, false,
    &::generated::proto::batch::AST_Remove_Result::default_instance());
  AST_ResolveDefinition::default_instance_->InitAsDefaultInstance();
  AST_ResolveDefinition_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1114, 11, false, false,
    &::generated::proto::batch::AST_ResolveDefinition_Args::default_instance());
  AST_ResolveDefinition_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1114, 11, false, false,
    &::generated::proto::batch::AST_ResolveDefinition_Result::default_instance());
  FileSystem::default_instance_->InitAsDefaultInstance();
  FileSystem_LS::default_instance_->InitAsDefaultInstance();
  FileSystem_LS_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1200, 11, false, false,
    &::generated::proto::batch::FileSystem_LS_Args::default_instance());
  FileSystem_LS_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1200, 11, false, false,
    &::generated::proto::batch::FileSystem_LS_Result::default_instance());
  FileSystem_Stat::default_instance_->InitAsDefaultInstance();
  FileSystem_Stat_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1201, 11, false, false,
    &::generated::proto::batch::FileSystem_Stat_Args::default_instance());
  FileSystem_Stat_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1201, 11, false, false,
    &::generated::proto::batch::FileSystem_Stat_Result::default_instance());
  FileSystem_MkDir::default_instance_->InitAsDefaultInstance();
  FileSystem_MkDir_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1202, 11, false, false,
    &::generated::proto::batch::FileSystem_MkDir_Args::default_instance());
  FileSystem_MkDir_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1202, 11, false, false,
    &::generated::proto::batch::FileSystem_MkDir_Result::default_instance());
  FileSystem_Touch::default_instance_->InitAsDefaultInstance();
  FileSystem_Touch_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1203, 11, false, false,
    &::generated::proto::batch::FileSystem_Touch_Args::default_instance());
  FileSystem_Touch_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1203, 11, false, false,
    &::generated::proto::batch::FileSystem_Touch_Result::default_instance());
  FileSystem_RM::default_instance_->InitAsDefaultInstance();
  FileSystem_RM_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1204, 11, false, false,
    &::generated::proto::batch::FileSystem_RM_Args::default_instance());
  FileSystem_RM_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1204, 11, false, false,
    &::generated::proto::batch::FileSystem_RM_Result::default_instance());
  FileSystem_CP::default_instance_->InitAsDefaultInstance();
  FileSystem_CP_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1205, 11, false, false,
    &::generated::proto::batch::FileSystem_CP_Args::default_instance());
  FileSystem_CP_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1205, 11, false, false,
    &::generated::proto::batch::FileSystem_CP_Result::default_instance());
  FileSystem_MV::default_instance_->InitAsDefaultInstance();
  FileSystem_MV_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1206, 11, false, false,
    &::generated::proto::batch::FileSystem_MV_Args::default_instance());
  FileSystem_MV_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1206, 11, false, false,
    &::generated::proto::batch::FileSystem_MV_Result::default_instance());
  Graph::default_instance_->InitAsDefaultInstance();
  Graph_NodesGraph::default_instance_->InitAsDefaultInstance();
  Graph_NodesGraph_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1300, 11, false, false,
    &::generated::proto::batch::Graph_NodesGraph_Args::default_instance());
  Graph_NodesGraph_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1300, 11, false, false,
    &::generated::proto::batch::Graph_NodesGraph_Result::default_instance());
  Graph_NodeByID::default_instance_->InitAsDefaultInstance();
  Graph_NodeByID_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1301, 11, false, false,
    &::generated::proto::batch::Graph_NodeByID_Args::default_instance());
  Graph_NodeByID_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1301, 11, false, false,
    &::generated::proto::batch::Graph_NodeByID_Result::default_instance());
  Graph_AddNode::default_instance_->InitAsDefaultInstance();
  Graph_AddNode_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1302, 11, false, false,
    &::generated::proto::batch::Graph_AddNode_Args::default_instance());
  Graph_AddNode_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1302, 11, false, false,
    &::generated::proto::batch::Graph_AddNode_Result::default_instance());
  Graph_UpdateNode::default_instance_->InitAsDefaultInstance();
  Graph_UpdateNode_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1306, 11, false, false,
    &::generated::proto::batch::Graph_UpdateNode_Args::default_instance());
  Graph_UpdateNode_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1306, 11, false, false,
    &::generated::proto::batch::Graph_UpdateNode_Result::default_instance());
  Graph_UpdateNodeInPlace::default_instance_->InitAsDefaultInstance();
  Graph_UpdateNodeInPlace_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1307, 11, false, false,
    &::generated::proto::batch::Graph_UpdateNodeInPlace_Args::default_instance());
  Graph_UpdateNodeInPlace_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1307, 11, false, false,
    &::generated::proto::batch::Graph_UpdateNodeInPlace_Result::default_instance());
  Graph_RemoveNode::default_instance_->InitAsDefaultInstance();
  Graph_RemoveNode_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1303, 11, false, false,
    &::generated::proto::batch::Graph_RemoveNode_Args::default_instance());
  Graph_RemoveNode_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1303, 11, false, false,
    &::generated::proto::batch::Graph_RemoveNode_Result::default_instance());
  Graph_Connect::default_instance_->InitAsDefaultInstance();
  Graph_Connect_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1304, 11, false, false,
    &::generated::proto::batch::Graph_Connect_Args::default_instance());
  Graph_Connect_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1304, 11, false, false,
    &::generated::proto::batch::Graph_Connect_Result::default_instance());
  Graph_Disconnect::default_instance_->InitAsDefaultInstance();
  Graph_Disconnect_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1305, 11, false, false,
    &::generated::proto::batch::Graph_Disconnect_Args::default_instance());
  Graph_Disconnect_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1305, 11, false, false,
    &::generated::proto::batch::Graph_Disconnect_Result::default_instance());
  Library::default_instance_->InitAsDefaultInstance();
  Library_Libraries::default_instance_->InitAsDefaultInstance();
  Library_Libraries_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1400, 11, false, false,
    &::generated::proto::batch::Library_Libraries_Args::default_instance());
  Library_Libraries_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1400, 11, false, false,
    &::generated::proto::batch::Library_Libraries_Result::default_instance());
  Library_LibraryByID::default_instance_->InitAsDefaultInstance();
  Library_LibraryByID_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1401, 11, false, false,
    &::generated::proto::batch::Library_LibraryByID_Args::default_instance());
  Library_LibraryByID_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1401, 11, false, false,
    &::generated::proto::batch::Library_LibraryByID_Result::default_instance());
  Library_CreateLibrary::default_instance_->InitAsDefaultInstance();
  Library_CreateLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1402, 11, false, false,
    &::generated::proto::batch::Library_CreateLibrary_Args::default_instance());
  Library_CreateLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1402, 11, false, false,
    &::generated::proto::batch::Library_CreateLibrary_Result::default_instance());
  Library_LoadLibrary::default_instance_->InitAsDefaultInstance();
  Library_LoadLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1403, 11, false, false,
    &::generated::proto::batch::Library_LoadLibrary_Args::default_instance());
  Library_LoadLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1403, 11, false, false,
    &::generated::proto::batch::Library_LoadLibrary_Result::default_instance());
  Library_UnloadLibrary::default_instance_->InitAsDefaultInstance();
  Library_UnloadLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1404, 11, false, false,
    &::generated::proto::batch::Library_UnloadLibrary_Args::default_instance());
  Library_UnloadLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1404, 11, false, false,
    &::generated::proto::batch::Library_UnloadLibrary_Result::default_instance());
  Library_StoreLibrary::default_instance_->InitAsDefaultInstance();
  Library_StoreLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1405, 11, false, false,
    &::generated::proto::batch::Library_StoreLibrary_Args::default_instance());
  Library_StoreLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1405, 11, false, false,
    &::generated::proto::batch::Library_StoreLibrary_Result::default_instance());
  Library_BuildLibrary::default_instance_->InitAsDefaultInstance();
  Library_BuildLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1406, 11, false, false,
    &::generated::proto::batch::Library_BuildLibrary_Args::default_instance());
  Library_BuildLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1406, 11, false, false,
    &::generated::proto::batch::Library_BuildLibrary_Result::default_instance());
  Library_RunLibrary::default_instance_->InitAsDefaultInstance();
  Library_RunLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1407, 11, false, false,
    &::generated::proto::batch::Library_RunLibrary_Args::default_instance());
  Library_RunLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1407, 11, false, false,
    &::generated::proto::batch::Library_RunLibrary_Result::default_instance());
  Library_InterpretLibrary::default_instance_->InitAsDefaultInstance();
  Library_InterpretLibrary_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1408, 11, false, false,
    &::generated::proto::batch::Library_InterpretLibrary_Args::default_instance());
  Library_InterpretLibrary_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1408, 11, false, false,
    &::generated::proto::batch::Library_InterpretLibrary_Result::default_instance());
  Maintenance::default_instance_->InitAsDefaultInstance();
  Maintenance_Initialize::default_instance_->InitAsDefaultInstance();
  Maintenance_Initialize_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1500, 11, false, false,
    &::generated::proto::batch::Maintenance_Initialize_Args::default_instance());
  Maintenance_Initialize_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1500, 11, false, false,
    &::generated::proto::batch::Maintenance_Initialize_Result::default_instance());
  Maintenance_Ping::default_instance_->InitAsDefaultInstance();
  Maintenance_Ping_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1501, 11, false, false,
    &::generated::proto::batch::Maintenance_Ping_Args::default_instance());
  Maintenance_Ping_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1501, 11, false, false,
    &::generated::proto::batch::Maintenance_Ping_Result::default_instance());
  Maintenance_Dump::default_instance_->InitAsDefaultInstance();
  Maintenance_Dump_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1502, 11, false, false,
    &::generated::proto::batch::Maintenance_Dump_Args::default_instance());
  Maintenance_Dump_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1502, 11, false, false,
    &::generated::proto::batch::Maintenance_Dump_Result::default_instance());
  Maintenance_Shutdown::default_instance_->InitAsDefaultInstance();
  Maintenance_Shutdown_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1503, 11, false, false,
    &::generated::proto::batch::Maintenance_Shutdown_Args::default_instance());
  Maintenance_Shutdown_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1503, 11, false, false,
    &::generated::proto::batch::Maintenance_Shutdown_Result::default_instance());
  NodeDefault::default_instance_->InitAsDefaultInstance();
  NodeDefault_NodeDefaults::default_instance_->InitAsDefaultInstance();
  NodeDefault_NodeDefaults_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1600, 11, false, false,
    &::generated::proto::batch::NodeDefault_NodeDefaults_Args::default_instance());
  NodeDefault_NodeDefaults_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1600, 11, false, false,
    &::generated::proto::batch::NodeDefault_NodeDefaults_Result::default_instance());
  NodeDefault_SetNodeDefault::default_instance_->InitAsDefaultInstance();
  NodeDefault_SetNodeDefault_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1601, 11, false, false,
    &::generated::proto::batch::NodeDefault_SetNodeDefault_Args::default_instance());
  NodeDefault_SetNodeDefault_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1601, 11, false, false,
    &::generated::proto::batch::NodeDefault_SetNodeDefault_Result::default_instance());
  NodeDefault_RemoveNodeDefault::default_instance_->InitAsDefaultInstance();
  NodeDefault_RemoveNodeDefault_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1602, 11, false, false,
    &::generated::proto::batch::NodeDefault_RemoveNodeDefault_Args::default_instance());
  NodeDefault_RemoveNodeDefault_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1602, 11, false, false,
    &::generated::proto::batch::NodeDefault_RemoveNodeDefault_Result::default_instance());
  Parser::default_instance_->InitAsDefaultInstance();
  Parser_ParseExpr::default_instance_->InitAsDefaultInstance();
  Parser_ParseExpr_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1700, 11, false, false,
    &::generated::proto::batch::Parser_ParseExpr_Args::default_instance());
  Parser_ParseExpr_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1700, 11, false, false,
    &::generated::proto::batch::Parser_ParseExpr_Result::default_instance());
  Parser_ParsePat::default_instance_->InitAsDefaultInstance();
  Parser_ParsePat_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1701, 11, false, false,
    &::generated::proto::batch::Parser_ParsePat_Args::default_instance());
  Parser_ParsePat_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1701, 11, false, false,
    &::generated::proto::batch::Parser_ParsePat_Result::default_instance());
  Parser_ParseType::default_instance_->InitAsDefaultInstance();
  Parser_ParseType_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1702, 11, false, false,
    &::generated::proto::batch::Parser_ParseType_Args::default_instance());
  Parser_ParseType_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1702, 11, false, false,
    &::generated::proto::batch::Parser_ParseType_Result::default_instance());
  Parser_ParseNodeExpr::default_instance_->InitAsDefaultInstance();
  Parser_ParseNodeExpr_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1703, 11, false, false,
    &::generated::proto::batch::Parser_ParseNodeExpr_Args::default_instance());
  Parser_ParseNodeExpr_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1703, 11, false, false,
    &::generated::proto::batch::Parser_ParseNodeExpr_Result::default_instance());
  Process::default_instance_->InitAsDefaultInstance();
  Process_Processes::default_instance_->InitAsDefaultInstance();
  Process_Processes_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    2000, 11, false, false,
    &::generated::proto::batch::Process_Processes_Args::default_instance());
  Process_Processes_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    2000, 11, false, false,
    &::generated::proto::batch::Process_Processes_Result::default_instance());
  Process_Terminate::default_instance_->InitAsDefaultInstance();
  Process_Terminate_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    2001, 11, false, false,
    &::generated::proto::batch::Process_Terminate_Args::default_instance());
  Process_Terminate_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    2001, 11, false, false,
    &::generated::proto::batch::Process_Terminate_Result::default_instance());
  Project::default_instance_->InitAsDefaultInstance();
  Project_Projects::default_instance_->InitAsDefaultInstance();
  Project_Projects_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1800, 11, false, false,
    &::generated::proto::batch::Project_Projects_Args::default_instance());
  Project_Projects_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1800, 11, false, false,
    &::generated::proto::batch::Project_Projects_Result::default_instance());
  Project_ProjectByID::default_instance_->InitAsDefaultInstance();
  Project_ProjectByID_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1801, 11, false, false,
    &::generated::proto::batch::Project_ProjectByID_Args::default_instance());
  Project_ProjectByID_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1801, 11, false, false,
    &::generated::proto::batch::Project_ProjectByID_Result::default_instance());
  Project_CreateProject::default_instance_->InitAsDefaultInstance();
  Project_CreateProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1802, 11, false, false,
    &::generated::proto::batch::Project_CreateProject_Args::default_instance());
  Project_CreateProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1802, 11, false, false,
    &::generated::proto::batch::Project_CreateProject_Result::default_instance());
  Project_OpenProject::default_instance_->InitAsDefaultInstance();
  Project_OpenProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1803, 11, false, false,
    &::generated::proto::batch::Project_OpenProject_Args::default_instance());
  Project_OpenProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1803, 11, false, false,
    &::generated::proto::batch::Project_OpenProject_Result::default_instance());
  Project_UpdateProject::default_instance_->InitAsDefaultInstance();
  Project_UpdateProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1804, 11, false, false,
    &::generated::proto::batch::Project_UpdateProject_Args::default_instance());
  Project_UpdateProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1804, 11, false, false,
    &::generated::proto::batch::Project_UpdateProject_Result::default_instance());
  Project_CloseProject::default_instance_->InitAsDefaultInstance();
  Project_CloseProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1805, 11, false, false,
    &::generated::proto::batch::Project_CloseProject_Args::default_instance());
  Project_CloseProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1805, 11, false, false,
    &::generated::proto::batch::Project_CloseProject_Result::default_instance());
  Project_StoreProject::default_instance_->InitAsDefaultInstance();
  Project_StoreProject_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1806, 11, false, false,
    &::generated::proto::batch::Project_StoreProject_Args::default_instance());
  Project_StoreProject_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1806, 11, false, false,
    &::generated::proto::batch::Project_StoreProject_Result::default_instance());
  Properties::default_instance_->InitAsDefaultInstance();
  Properties_GetProperties::default_instance_->InitAsDefaultInstance();
  Properties_GetProperties_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1900, 11, false, false,
    &::generated::proto::batch::Properties_GetProperties_Args::default_instance());
  Properties_GetProperties_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1900, 11, false, false,
    &::generated::proto::batch::Properties_GetProperties_Result::default_instance());
  Properties_SetProperties::default_instance_->InitAsDefaultInstance();
  Properties_SetProperties_Args::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Request::default_instance(),
    1901, 11, false, false,
    &::generated::proto::batch::Properties_SetProperties_Args::default_instance());
  Properties_SetProperties_Result::default_instance_->InitAsDefaultInstance();
  ::google::protobuf::internal::ExtensionSet::RegisterMessageExtension(
    &::generated::proto::batch::Response::default_instance(),
    1901, 11, false, false,
    &::generated::proto::batch::Properties_SetProperties_Result::default_instance());
  ::google::protobuf::internal::OnShutdown(&protobuf_ShutdownFile_server_2dapi_2eproto);
}

// Force AddDescriptors() to be called at static initialization time.
struct StaticDescriptorInitializer_server_2dapi_2eproto {
  StaticDescriptorInitializer_server_2dapi_2eproto() {
    protobuf_AddDesc_server_2dapi_2eproto();
  }
} static_descriptor_initializer_server_2dapi_2eproto_;

// ===================================================================

const ::google::protobuf::EnumDescriptor* Request_Method_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_Method_descriptor_;
}
bool Request_Method_IsValid(int value) {
  switch(value) {
    case 1100:
    case 1101:
    case 1102:
    case 1103:
    case 1104:
    case 1105:
    case 1106:
    case 1107:
    case 1108:
    case 1109:
    case 1110:
    case 1111:
    case 1112:
    case 1113:
    case 1114:
    case 1115:
    case 1116:
    case 1200:
    case 1201:
    case 1202:
    case 1203:
    case 1204:
    case 1205:
    case 1206:
    case 1300:
    case 1301:
    case 1302:
    case 1303:
    case 1304:
    case 1305:
    case 1306:
    case 1307:
    case 1400:
    case 1401:
    case 1402:
    case 1403:
    case 1404:
    case 1405:
    case 1406:
    case 1407:
    case 1408:
    case 1500:
    case 1501:
    case 1502:
    case 1503:
    case 1600:
    case 1601:
    case 1602:
    case 1700:
    case 1701:
    case 1702:
    case 1703:
    case 1800:
    case 1801:
    case 1802:
    case 1803:
    case 1804:
    case 1805:
    case 1806:
    case 1900:
    case 1901:
    case 2000:
    case 2001:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Request_Method Request::AST_Definitions;
const Request_Method Request::AST_AddModule;
const Request_Method Request::AST_AddClass;
const Request_Method Request::AST_AddFunction;
const Request_Method Request::AST_UpdateModuleCls;
const Request_Method Request::AST_UpdateModuleImports;
const Request_Method Request::AST_UpdateModuleFields;
const Request_Method Request::AST_UpdateDataCls;
const Request_Method Request::AST_UpdateDataCons;
const Request_Method Request::AST_UpdateDataClasses;
const Request_Method Request::AST_UpdateDataMethods;
const Request_Method Request::AST_UpdateFunctionName;
const Request_Method Request::AST_UpdateFunctionPath;
const Request_Method Request::AST_UpdateFunctionInputs;
const Request_Method Request::AST_UpdateFunctionOutput;
const Request_Method Request::AST_Remove;
const Request_Method Request::AST_ResolveDefinition;
const Request_Method Request::FileSystem_LS;
const Request_Method Request::FileSystem_Stat;
const Request_Method Request::FileSystem_MkDir;
const Request_Method Request::FileSystem_Touch;
const Request_Method Request::FileSystem_RM;
const Request_Method Request::FileSystem_CP;
const Request_Method Request::FileSystem_MV;
const Request_Method Request::Graph_NodesGraph;
const Request_Method Request::Graph_NodeByID;
const Request_Method Request::Graph_AddNode;
const Request_Method Request::Graph_UpdateNode;
const Request_Method Request::Graph_UpdateNodeInPlace;
const Request_Method Request::Graph_RemoveNode;
const Request_Method Request::Graph_Connect;
const Request_Method Request::Graph_Disconnect;
const Request_Method Request::Library_Libraries;
const Request_Method Request::Library_LibraryByID;
const Request_Method Request::Library_CreateLibrary;
const Request_Method Request::Library_LoadLibrary;
const Request_Method Request::Library_UnloadLibrary;
const Request_Method Request::Library_StoreLibrary;
const Request_Method Request::Library_BuildLibrary;
const Request_Method Request::Library_RunLibrary;
const Request_Method Request::Library_InterpretLibrary;
const Request_Method Request::Maintenance_Initialize;
const Request_Method Request::Maintenance_Ping;
const Request_Method Request::Maintenance_Dump;
const Request_Method Request::Maintenance_Shutdown;
const Request_Method Request::NodeDefault_NodeDefaults;
const Request_Method Request::NodeDefault_SetNodeDefault;
const Request_Method Request::NodeDefault_RemoveNodeDefault;
const Request_Method Request::Parser_ParseExpr;
const Request_Method Request::Parser_ParsePat;
const Request_Method Request::Parser_ParseType;
const Request_Method Request::Parser_ParseNodeExpr;
const Request_Method Request::Process_Processes;
const Request_Method Request::Process_Terminate;
const Request_Method Request::Project_Projects;
const Request_Method Request::Project_ProjectByID;
const Request_Method Request::Project_CreateProject;
const Request_Method Request::Project_OpenProject;
const Request_Method Request::Project_UpdateProject;
const Request_Method Request::Project_CloseProject;
const Request_Method Request::Project_StoreProject;
const Request_Method Request::Properties_GetProperties;
const Request_Method Request::Properties_SetProperties;
const Request_Method Request::Method_MIN;
const Request_Method Request::Method_MAX;
const int Request::Method_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Request::kMethodFieldNumber;
const int Request::kAsyncFieldNumber;
#endif  // !_MSC_VER

Request::Request()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Request::InitAsDefaultInstance() {
}

Request::Request(const Request& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Request::SharedCtor() {
  _cached_size_ = 0;
  method_ = 1100;
  async_ = false;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Request::~Request() {
  SharedDtor();
}

void Request::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Request::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Request::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Request_descriptor_;
}

const Request& Request::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Request* Request::default_instance_ = NULL;

Request* Request::New() const {
  return new Request;
}

void Request::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    method_ = 1100;
    async_ = false;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Request::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.batch.Request.Method method = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::generated::proto::batch::Request_Method_IsValid(value)) {
            set_method(static_cast< ::generated::proto::batch::Request_Method >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_async;
        break;
      }

      // optional bool async = 2 [default = false];
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_async:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   bool, ::google::protobuf::internal::WireFormatLite::TYPE_BOOL>(
                 input, &async_)));
          set_has_async();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Request::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.batch.Request.Method method = 1;
  if (has_method()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->method(), output);
  }

  // optional bool async = 2 [default = false];
  if (has_async()) {
    ::google::protobuf::internal::WireFormatLite::WriteBool(2, this->async(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Request::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.batch.Request.Method method = 1;
  if (has_method()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->method(), target);
  }

  // optional bool async = 2 [default = false];
  if (has_async()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteBoolToArray(2, this->async(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Request::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.batch.Request.Method method = 1;
    if (has_method()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->method());
    }

    // optional bool async = 2 [default = false];
    if (has_async()) {
      total_size += 1 + 1;
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Request::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Request* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Request*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Request::MergeFrom(const Request& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_method()) {
      set_method(from.method());
    }
    if (from.has_async()) {
      set_async(from.async());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Request::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Request::CopyFrom(const Request& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Request::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Request::Swap(Request* other) {
  if (other != this) {
    std::swap(method_, other->method_);
    std::swap(async_, other->async_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Request::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Request_descriptor_;
  metadata.reflection = Request_reflection_;
  return metadata;
}


// ===================================================================

const ::google::protobuf::EnumDescriptor* Response_Type_descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_Type_descriptor_;
}
bool Response_Type_IsValid(int value) {
  switch(value) {
    case 0:
    case 1:
    case 2:
      return true;
    default:
      return false;
  }
}

#ifndef _MSC_VER
const Response_Type Response::Result;
const Response_Type Response::Exception;
const Response_Type Response::Accept;
const Response_Type Response::Type_MIN;
const Response_Type Response::Type_MAX;
const int Response::Type_ARRAYSIZE;
#endif  // _MSC_VER
#ifndef _MSC_VER
const int Response::kTypeFieldNumber;
const int Response::kIdFieldNumber;
#endif  // !_MSC_VER

Response::Response()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Response::InitAsDefaultInstance() {
}

Response::Response(const Response& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Response::SharedCtor() {
  _cached_size_ = 0;
  type_ = 0;
  id_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Response::~Response() {
  SharedDtor();
}

void Response::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Response::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Response::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Response_descriptor_;
}

const Response& Response::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Response* Response::default_instance_ = NULL;

Response* Response::New() const {
  return new Response;
}

void Response::Clear() {
  _extensions_.Clear();
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    type_ = 0;
    id_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Response::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.batch.Response.Type type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          int value;
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(
                 input, &value)));
          if (::generated::proto::batch::Response_Type_IsValid(value)) {
            set_type(static_cast< ::generated::proto::batch::Response_Type >(value));
          } else {
            mutable_unknown_fields()->AddVarint(1, value);
          }
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_id;
        break;
      }

      // optional int32 id = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_id:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &id_)));
          set_has_id();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        if ((8000u <= tag)) {
          DO_(_extensions_.ParseField(tag, input, default_instance_,
                                      mutable_unknown_fields()));
          continue;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Response::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.batch.Response.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteEnum(
      1, this->type(), output);
  }

  // optional int32 id = 2;
  if (has_id()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->id(), output);
  }

  // Extension range [1000, 536870912)
  _extensions_.SerializeWithCachedSizes(
      1000, 536870912, output);

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Response::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.batch.Response.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(
      1, this->type(), target);
  }

  // optional int32 id = 2;
  if (has_id()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->id(), target);
  }

  // Extension range [1000, 536870912)
  target = _extensions_.SerializeWithCachedSizesToArray(
      1000, 536870912, target);

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Response::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.batch.Response.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::EnumSize(this->type());
    }

    // optional int32 id = 2;
    if (has_id()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->id());
    }

  }
  total_size += _extensions_.ByteSize();

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Response::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Response* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Response*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Response::MergeFrom(const Response& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      set_type(from.type());
    }
    if (from.has_id()) {
      set_id(from.id());
    }
  }
  _extensions_.MergeFrom(from._extensions_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Response::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Response::CopyFrom(const Response& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Response::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;


  if (!_extensions_.IsInitialized()) return false;  return true;
}

void Response::Swap(Response* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(id_, other->id_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
    _extensions_.Swap(&other->_extensions_);
  }
}

::google::protobuf::Metadata Response::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Response_descriptor_;
  metadata.reflection = Response_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Exception::kMessageFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Exception::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Exception >, 11, false >
  Exception::rsp(kRspFieldNumber, ::generated::proto::batch::Exception::default_instance());
Exception::Exception()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Exception::InitAsDefaultInstance() {
}

Exception::Exception(const Exception& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Exception::SharedCtor() {
  _cached_size_ = 0;
  message_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Exception::~Exception() {
  SharedDtor();
}

void Exception::SharedDtor() {
  if (message_ != &::google::protobuf::internal::kEmptyString) {
    delete message_;
  }
  if (this != default_instance_) {
  }
}

void Exception::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Exception::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Exception_descriptor_;
}

const Exception& Exception::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Exception* Exception::default_instance_ = NULL;

Exception* Exception::New() const {
  return new Exception;
}

void Exception::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_message()) {
      if (message_ != &::google::protobuf::internal::kEmptyString) {
        message_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Exception::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional string message = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_message()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->message().data(), this->message().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Exception::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->message(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Exception::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional string message = 1;
  if (has_message()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->message().data(), this->message().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->message(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Exception::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional string message = 1;
    if (has_message()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->message());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Exception::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Exception* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Exception*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Exception::MergeFrom(const Exception& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_message()) {
      set_message(from.message());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Exception::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Exception::CopyFrom(const Exception& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Exception::IsInitialized() const {

  return true;
}

void Exception::Swap(Exception* other) {
  if (other != this) {
    std::swap(message_, other->message_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Exception::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Exception_descriptor_;
  metadata.reflection = Exception_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int AST_Definitions_Args::kMaxDepthFieldNumber;
const int AST_Definitions_Args::kBcFieldNumber;
const int AST_Definitions_Args::kLibraryIDFieldNumber;
const int AST_Definitions_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_Definitions_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_Definitions_Args >, 11, false >
  AST_Definitions_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_Definitions_Args::default_instance());
AST_Definitions_Args::AST_Definitions_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_Definitions_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_Definitions_Args::AST_Definitions_Args(const AST_Definitions_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_Definitions_Args::SharedCtor() {
  _cached_size_ = 0;
  maxdepth_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_Definitions_Args::~AST_Definitions_Args() {
  SharedDtor();
}

void AST_Definitions_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_Definitions_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_Definitions_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_Definitions_Args_descriptor_;
}

const AST_Definitions_Args& AST_Definitions_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_Definitions_Args* AST_Definitions_Args::default_instance_ = NULL;

AST_Definitions_Args* AST_Definitions_Args::New() const {
  return new AST_Definitions_Args;
}

void AST_Definitions_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    maxdepth_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_Definitions_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional int32 maxDepth = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &maxdepth_)));
          set_has_maxdepth();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_Definitions_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional int32 maxDepth = 1;
  if (has_maxdepth()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->maxdepth(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_Definitions_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional int32 maxDepth = 1;
  if (has_maxdepth()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->maxdepth(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_Definitions_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional int32 maxDepth = 1;
    if (has_maxdepth()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->maxdepth());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_Definitions_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_Definitions_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_Definitions_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_Definitions_Args::MergeFrom(const AST_Definitions_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_maxdepth()) {
      set_maxdepth(from.maxdepth());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_Definitions_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_Definitions_Args::CopyFrom(const AST_Definitions_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_Definitions_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_Definitions_Args::Swap(AST_Definitions_Args* other) {
  if (other != this) {
    std::swap(maxdepth_, other->maxdepth_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_Definitions_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_Definitions_Args_descriptor_;
  metadata.reflection = AST_Definitions_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_Definitions_Result::kFocusFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_Definitions_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_Definitions_Result >, 11, false >
  AST_Definitions_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_Definitions_Result::default_instance());
AST_Definitions_Result::AST_Definitions_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_Definitions_Result::InitAsDefaultInstance() {
  focus_ = const_cast< ::generated::proto::focus::Focus*>(&::generated::proto::focus::Focus::default_instance());
}

AST_Definitions_Result::AST_Definitions_Result(const AST_Definitions_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_Definitions_Result::SharedCtor() {
  _cached_size_ = 0;
  focus_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_Definitions_Result::~AST_Definitions_Result() {
  SharedDtor();
}

void AST_Definitions_Result::SharedDtor() {
  if (this != default_instance_) {
    delete focus_;
  }
}

void AST_Definitions_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_Definitions_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_Definitions_Result_descriptor_;
}

const AST_Definitions_Result& AST_Definitions_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_Definitions_Result* AST_Definitions_Result::default_instance_ = NULL;

AST_Definitions_Result* AST_Definitions_Result::New() const {
  return new AST_Definitions_Result;
}

void AST_Definitions_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_focus()) {
      if (focus_ != NULL) focus_->::generated::proto::focus::Focus::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_Definitions_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.focus.Focus focus = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_focus()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_Definitions_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.focus.Focus focus = 1;
  if (has_focus()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->focus(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_Definitions_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.focus.Focus focus = 1;
  if (has_focus()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->focus(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_Definitions_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.focus.Focus focus = 1;
    if (has_focus()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->focus());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_Definitions_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_Definitions_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_Definitions_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_Definitions_Result::MergeFrom(const AST_Definitions_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_focus()) {
      mutable_focus()->::generated::proto::focus::Focus::MergeFrom(from.focus());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_Definitions_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_Definitions_Result::CopyFrom(const AST_Definitions_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_Definitions_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_focus()) {
    if (!this->focus().IsInitialized()) return false;
  }
  return true;
}

void AST_Definitions_Result::Swap(AST_Definitions_Result* other) {
  if (other != this) {
    std::swap(focus_, other->focus_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_Definitions_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_Definitions_Result_descriptor_;
  metadata.reflection = AST_Definitions_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_Definitions::AST_Definitions()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_Definitions::InitAsDefaultInstance() {
}

AST_Definitions::AST_Definitions(const AST_Definitions& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_Definitions::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_Definitions::~AST_Definitions() {
  SharedDtor();
}

void AST_Definitions::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_Definitions::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_Definitions::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_Definitions_descriptor_;
}

const AST_Definitions& AST_Definitions::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_Definitions* AST_Definitions::default_instance_ = NULL;

AST_Definitions* AST_Definitions::New() const {
  return new AST_Definitions;
}

void AST_Definitions::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_Definitions::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_Definitions::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_Definitions::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_Definitions::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_Definitions::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_Definitions* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_Definitions*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_Definitions::MergeFrom(const AST_Definitions& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_Definitions::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_Definitions::CopyFrom(const AST_Definitions& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_Definitions::IsInitialized() const {

  return true;
}

void AST_Definitions::Swap(AST_Definitions* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_Definitions::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_Definitions_descriptor_;
  metadata.reflection = AST_Definitions_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_AddModule_Args::kModuleFieldNumber;
const int AST_AddModule_Args::kParentbcFieldNumber;
const int AST_AddModule_Args::kLibraryIDFieldNumber;
const int AST_AddModule_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_AddModule_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_AddModule_Args >, 11, false >
  AST_AddModule_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_AddModule_Args::default_instance());
AST_AddModule_Args::AST_AddModule_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddModule_Args::InitAsDefaultInstance() {
  module_ = const_cast< ::generated::proto::module::Module*>(&::generated::proto::module::Module::default_instance());
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_AddModule_Args::AST_AddModule_Args(const AST_AddModule_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddModule_Args::SharedCtor() {
  _cached_size_ = 0;
  module_ = NULL;
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddModule_Args::~AST_AddModule_Args() {
  SharedDtor();
}

void AST_AddModule_Args::SharedDtor() {
  if (this != default_instance_) {
    delete module_;
    delete parentbc_;
  }
}

void AST_AddModule_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddModule_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddModule_Args_descriptor_;
}

const AST_AddModule_Args& AST_AddModule_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddModule_Args* AST_AddModule_Args::default_instance_ = NULL;

AST_AddModule_Args* AST_AddModule_Args::New() const {
  return new AST_AddModule_Args;
}

void AST_AddModule_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_module()) {
      if (module_ != NULL) module_->::generated::proto::module::Module::Clear();
    }
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddModule_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.module.Module module = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_module()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_AddModule_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.module.Module module = 1;
  if (has_module()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddModule_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.module.Module module = 1;
  if (has_module()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->module(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddModule_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.module.Module module = 1;
    if (has_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module());
    }

    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddModule_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddModule_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddModule_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddModule_Args::MergeFrom(const AST_AddModule_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_module()) {
      mutable_module()->::generated::proto::module::Module::MergeFrom(from.module());
    }
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddModule_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddModule_Args::CopyFrom(const AST_AddModule_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddModule_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_module()) {
    if (!this->module().IsInitialized()) return false;
  }
  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void AST_AddModule_Args::Swap(AST_AddModule_Args* other) {
  if (other != this) {
    std::swap(module_, other->module_);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddModule_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddModule_Args_descriptor_;
  metadata.reflection = AST_AddModule_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_AddModule_Result::kModuleFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_AddModule_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_AddModule_Result >, 11, false >
  AST_AddModule_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_AddModule_Result::default_instance());
AST_AddModule_Result::AST_AddModule_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddModule_Result::InitAsDefaultInstance() {
  module_ = const_cast< ::generated::proto::module::Module*>(&::generated::proto::module::Module::default_instance());
}

AST_AddModule_Result::AST_AddModule_Result(const AST_AddModule_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddModule_Result::SharedCtor() {
  _cached_size_ = 0;
  module_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddModule_Result::~AST_AddModule_Result() {
  SharedDtor();
}

void AST_AddModule_Result::SharedDtor() {
  if (this != default_instance_) {
    delete module_;
  }
}

void AST_AddModule_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddModule_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddModule_Result_descriptor_;
}

const AST_AddModule_Result& AST_AddModule_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddModule_Result* AST_AddModule_Result::default_instance_ = NULL;

AST_AddModule_Result* AST_AddModule_Result::New() const {
  return new AST_AddModule_Result;
}

void AST_AddModule_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_module()) {
      if (module_ != NULL) module_->::generated::proto::module::Module::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddModule_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.module.Module module = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_module()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_AddModule_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.module.Module module = 1;
  if (has_module()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->module(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddModule_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.module.Module module = 1;
  if (has_module()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->module(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddModule_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.module.Module module = 1;
    if (has_module()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->module());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddModule_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddModule_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddModule_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddModule_Result::MergeFrom(const AST_AddModule_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_module()) {
      mutable_module()->::generated::proto::module::Module::MergeFrom(from.module());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddModule_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddModule_Result::CopyFrom(const AST_AddModule_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddModule_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_module()) {
    if (!this->module().IsInitialized()) return false;
  }
  return true;
}

void AST_AddModule_Result::Swap(AST_AddModule_Result* other) {
  if (other != this) {
    std::swap(module_, other->module_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddModule_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddModule_Result_descriptor_;
  metadata.reflection = AST_AddModule_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_AddModule::AST_AddModule()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddModule::InitAsDefaultInstance() {
}

AST_AddModule::AST_AddModule(const AST_AddModule& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddModule::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddModule::~AST_AddModule() {
  SharedDtor();
}

void AST_AddModule::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_AddModule::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddModule::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddModule_descriptor_;
}

const AST_AddModule& AST_AddModule::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddModule* AST_AddModule::default_instance_ = NULL;

AST_AddModule* AST_AddModule::New() const {
  return new AST_AddModule;
}

void AST_AddModule::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddModule::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_AddModule::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddModule::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddModule::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddModule::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddModule* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddModule*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddModule::MergeFrom(const AST_AddModule& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddModule::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddModule::CopyFrom(const AST_AddModule& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddModule::IsInitialized() const {

  return true;
}

void AST_AddModule::Swap(AST_AddModule* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddModule::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddModule_descriptor_;
  metadata.reflection = AST_AddModule_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_AddClass_Args::kClassFieldNumber;
const int AST_AddClass_Args::kParentbcFieldNumber;
const int AST_AddClass_Args::kLibraryIDFieldNumber;
const int AST_AddClass_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_AddClass_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_AddClass_Args >, 11, false >
  AST_AddClass_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_AddClass_Args::default_instance());
AST_AddClass_Args::AST_AddClass_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddClass_Args::InitAsDefaultInstance() {
  class__ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_AddClass_Args::AST_AddClass_Args(const AST_AddClass_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddClass_Args::SharedCtor() {
  _cached_size_ = 0;
  class__ = NULL;
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddClass_Args::~AST_AddClass_Args() {
  SharedDtor();
}

void AST_AddClass_Args::SharedDtor() {
  if (this != default_instance_) {
    delete class__;
    delete parentbc_;
  }
}

void AST_AddClass_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddClass_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddClass_Args_descriptor_;
}

const AST_AddClass_Args& AST_AddClass_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddClass_Args* AST_AddClass_Args::default_instance_ = NULL;

AST_AddClass_Args* AST_AddClass_Args::New() const {
  return new AST_AddClass_Args;
}

void AST_AddClass_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_class_()) {
      if (class__ != NULL) class__->::generated::proto::expr::Expr::Clear();
    }
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddClass_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr class_ = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_class_()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_AddClass_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr class_ = 1;
  if (has_class_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->class_(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddClass_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr class_ = 1;
  if (has_class_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->class_(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddClass_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr class_ = 1;
    if (has_class_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->class_());
    }

    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddClass_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddClass_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddClass_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddClass_Args::MergeFrom(const AST_AddClass_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_class_()) {
      mutable_class_()->::generated::proto::expr::Expr::MergeFrom(from.class_());
    }
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddClass_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddClass_Args::CopyFrom(const AST_AddClass_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddClass_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_class_()) {
    if (!this->class_().IsInitialized()) return false;
  }
  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void AST_AddClass_Args::Swap(AST_AddClass_Args* other) {
  if (other != this) {
    std::swap(class__, other->class__);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddClass_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddClass_Args_descriptor_;
  metadata.reflection = AST_AddClass_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_AddClass_Result::kClassFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_AddClass_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_AddClass_Result >, 11, false >
  AST_AddClass_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_AddClass_Result::default_instance());
AST_AddClass_Result::AST_AddClass_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddClass_Result::InitAsDefaultInstance() {
  class__ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
}

AST_AddClass_Result::AST_AddClass_Result(const AST_AddClass_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddClass_Result::SharedCtor() {
  _cached_size_ = 0;
  class__ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddClass_Result::~AST_AddClass_Result() {
  SharedDtor();
}

void AST_AddClass_Result::SharedDtor() {
  if (this != default_instance_) {
    delete class__;
  }
}

void AST_AddClass_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddClass_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddClass_Result_descriptor_;
}

const AST_AddClass_Result& AST_AddClass_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddClass_Result* AST_AddClass_Result::default_instance_ = NULL;

AST_AddClass_Result* AST_AddClass_Result::New() const {
  return new AST_AddClass_Result;
}

void AST_AddClass_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_class_()) {
      if (class__ != NULL) class__->::generated::proto::expr::Expr::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddClass_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr class_ = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_class_()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_AddClass_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr class_ = 1;
  if (has_class_()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->class_(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddClass_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr class_ = 1;
  if (has_class_()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->class_(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddClass_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr class_ = 1;
    if (has_class_()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->class_());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddClass_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddClass_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddClass_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddClass_Result::MergeFrom(const AST_AddClass_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_class_()) {
      mutable_class_()->::generated::proto::expr::Expr::MergeFrom(from.class_());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddClass_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddClass_Result::CopyFrom(const AST_AddClass_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddClass_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_class_()) {
    if (!this->class_().IsInitialized()) return false;
  }
  return true;
}

void AST_AddClass_Result::Swap(AST_AddClass_Result* other) {
  if (other != this) {
    std::swap(class__, other->class__);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddClass_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddClass_Result_descriptor_;
  metadata.reflection = AST_AddClass_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_AddClass::AST_AddClass()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddClass::InitAsDefaultInstance() {
}

AST_AddClass::AST_AddClass(const AST_AddClass& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddClass::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddClass::~AST_AddClass() {
  SharedDtor();
}

void AST_AddClass::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_AddClass::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddClass::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddClass_descriptor_;
}

const AST_AddClass& AST_AddClass::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddClass* AST_AddClass::default_instance_ = NULL;

AST_AddClass* AST_AddClass::New() const {
  return new AST_AddClass;
}

void AST_AddClass::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddClass::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_AddClass::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddClass::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddClass::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddClass::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddClass* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddClass*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddClass::MergeFrom(const AST_AddClass& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddClass::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddClass::CopyFrom(const AST_AddClass& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddClass::IsInitialized() const {

  return true;
}

void AST_AddClass::Swap(AST_AddClass* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddClass::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddClass_descriptor_;
  metadata.reflection = AST_AddClass_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_AddFunction_Args::kFunctionFieldNumber;
const int AST_AddFunction_Args::kParentbcFieldNumber;
const int AST_AddFunction_Args::kLibraryIDFieldNumber;
const int AST_AddFunction_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_AddFunction_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_AddFunction_Args >, 11, false >
  AST_AddFunction_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_AddFunction_Args::default_instance());
AST_AddFunction_Args::AST_AddFunction_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddFunction_Args::InitAsDefaultInstance() {
  function_ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_AddFunction_Args::AST_AddFunction_Args(const AST_AddFunction_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddFunction_Args::SharedCtor() {
  _cached_size_ = 0;
  function_ = NULL;
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddFunction_Args::~AST_AddFunction_Args() {
  SharedDtor();
}

void AST_AddFunction_Args::SharedDtor() {
  if (this != default_instance_) {
    delete function_;
    delete parentbc_;
  }
}

void AST_AddFunction_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddFunction_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddFunction_Args_descriptor_;
}

const AST_AddFunction_Args& AST_AddFunction_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddFunction_Args* AST_AddFunction_Args::default_instance_ = NULL;

AST_AddFunction_Args* AST_AddFunction_Args::New() const {
  return new AST_AddFunction_Args;
}

void AST_AddFunction_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_function()) {
      if (function_ != NULL) function_->::generated::proto::expr::Expr::Clear();
    }
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddFunction_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr function = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_AddFunction_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr function = 1;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->function(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddFunction_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr function = 1;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->function(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddFunction_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr function = 1;
    if (has_function()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->function());
    }

    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddFunction_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddFunction_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddFunction_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddFunction_Args::MergeFrom(const AST_AddFunction_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_function()) {
      mutable_function()->::generated::proto::expr::Expr::MergeFrom(from.function());
    }
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddFunction_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddFunction_Args::CopyFrom(const AST_AddFunction_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddFunction_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_function()) {
    if (!this->function().IsInitialized()) return false;
  }
  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void AST_AddFunction_Args::Swap(AST_AddFunction_Args* other) {
  if (other != this) {
    std::swap(function_, other->function_);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddFunction_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddFunction_Args_descriptor_;
  metadata.reflection = AST_AddFunction_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_AddFunction_Result::kFunctionFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_AddFunction_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_AddFunction_Result >, 11, false >
  AST_AddFunction_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_AddFunction_Result::default_instance());
AST_AddFunction_Result::AST_AddFunction_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddFunction_Result::InitAsDefaultInstance() {
  function_ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
}

AST_AddFunction_Result::AST_AddFunction_Result(const AST_AddFunction_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddFunction_Result::SharedCtor() {
  _cached_size_ = 0;
  function_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddFunction_Result::~AST_AddFunction_Result() {
  SharedDtor();
}

void AST_AddFunction_Result::SharedDtor() {
  if (this != default_instance_) {
    delete function_;
  }
}

void AST_AddFunction_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddFunction_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddFunction_Result_descriptor_;
}

const AST_AddFunction_Result& AST_AddFunction_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddFunction_Result* AST_AddFunction_Result::default_instance_ = NULL;

AST_AddFunction_Result* AST_AddFunction_Result::New() const {
  return new AST_AddFunction_Result;
}

void AST_AddFunction_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_function()) {
      if (function_ != NULL) function_->::generated::proto::expr::Expr::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddFunction_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr function = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_function()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_AddFunction_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr function = 1;
  if (has_function()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->function(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddFunction_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr function = 1;
  if (has_function()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->function(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddFunction_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr function = 1;
    if (has_function()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->function());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddFunction_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddFunction_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddFunction_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddFunction_Result::MergeFrom(const AST_AddFunction_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_function()) {
      mutable_function()->::generated::proto::expr::Expr::MergeFrom(from.function());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddFunction_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddFunction_Result::CopyFrom(const AST_AddFunction_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddFunction_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_function()) {
    if (!this->function().IsInitialized()) return false;
  }
  return true;
}

void AST_AddFunction_Result::Swap(AST_AddFunction_Result* other) {
  if (other != this) {
    std::swap(function_, other->function_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddFunction_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddFunction_Result_descriptor_;
  metadata.reflection = AST_AddFunction_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_AddFunction::AST_AddFunction()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_AddFunction::InitAsDefaultInstance() {
}

AST_AddFunction::AST_AddFunction(const AST_AddFunction& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_AddFunction::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_AddFunction::~AST_AddFunction() {
  SharedDtor();
}

void AST_AddFunction::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_AddFunction::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_AddFunction::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_AddFunction_descriptor_;
}

const AST_AddFunction& AST_AddFunction::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_AddFunction* AST_AddFunction::default_instance_ = NULL;

AST_AddFunction* AST_AddFunction::New() const {
  return new AST_AddFunction;
}

void AST_AddFunction::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_AddFunction::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_AddFunction::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_AddFunction::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_AddFunction::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_AddFunction::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_AddFunction* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_AddFunction*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_AddFunction::MergeFrom(const AST_AddFunction& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_AddFunction::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_AddFunction::CopyFrom(const AST_AddFunction& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_AddFunction::IsInitialized() const {

  return true;
}

void AST_AddFunction::Swap(AST_AddFunction* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_AddFunction::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_AddFunction_descriptor_;
  metadata.reflection = AST_AddFunction_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateModuleCls_Args::kClsFieldNumber;
const int AST_UpdateModuleCls_Args::kBcFieldNumber;
const int AST_UpdateModuleCls_Args::kLibraryIDFieldNumber;
const int AST_UpdateModuleCls_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateModuleCls_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateModuleCls_Args >, 11, false >
  AST_UpdateModuleCls_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateModuleCls_Args::default_instance());
AST_UpdateModuleCls_Args::AST_UpdateModuleCls_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleCls_Args::InitAsDefaultInstance() {
  cls_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateModuleCls_Args::AST_UpdateModuleCls_Args(const AST_UpdateModuleCls_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleCls_Args::SharedCtor() {
  _cached_size_ = 0;
  cls_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleCls_Args::~AST_UpdateModuleCls_Args() {
  SharedDtor();
}

void AST_UpdateModuleCls_Args::SharedDtor() {
  if (this != default_instance_) {
    delete cls_;
    delete bc_;
  }
}

void AST_UpdateModuleCls_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleCls_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleCls_Args_descriptor_;
}

const AST_UpdateModuleCls_Args& AST_UpdateModuleCls_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleCls_Args* AST_UpdateModuleCls_Args::default_instance_ = NULL;

AST_UpdateModuleCls_Args* AST_UpdateModuleCls_Args::New() const {
  return new AST_UpdateModuleCls_Args;
}

void AST_UpdateModuleCls_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cls()) {
      if (cls_ != NULL) cls_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleCls_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type cls = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cls()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateModuleCls_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cls(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleCls_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cls(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleCls_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type cls = 1;
    if (has_cls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cls());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleCls_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleCls_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleCls_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleCls_Args::MergeFrom(const AST_UpdateModuleCls_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cls()) {
      mutable_cls()->::generated::proto::type::Type::MergeFrom(from.cls());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleCls_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleCls_Args::CopyFrom(const AST_UpdateModuleCls_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleCls_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_cls()) {
    if (!this->cls().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateModuleCls_Args::Swap(AST_UpdateModuleCls_Args* other) {
  if (other != this) {
    std::swap(cls_, other->cls_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleCls_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleCls_Args_descriptor_;
  metadata.reflection = AST_UpdateModuleCls_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateModuleCls_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateModuleCls_Result >, 11, false >
  AST_UpdateModuleCls_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateModuleCls_Result::default_instance());
AST_UpdateModuleCls_Result::AST_UpdateModuleCls_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleCls_Result::InitAsDefaultInstance() {
}

AST_UpdateModuleCls_Result::AST_UpdateModuleCls_Result(const AST_UpdateModuleCls_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleCls_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleCls_Result::~AST_UpdateModuleCls_Result() {
  SharedDtor();
}

void AST_UpdateModuleCls_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateModuleCls_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleCls_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleCls_Result_descriptor_;
}

const AST_UpdateModuleCls_Result& AST_UpdateModuleCls_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleCls_Result* AST_UpdateModuleCls_Result::default_instance_ = NULL;

AST_UpdateModuleCls_Result* AST_UpdateModuleCls_Result::New() const {
  return new AST_UpdateModuleCls_Result;
}

void AST_UpdateModuleCls_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleCls_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateModuleCls_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleCls_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleCls_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleCls_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleCls_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleCls_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleCls_Result::MergeFrom(const AST_UpdateModuleCls_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleCls_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleCls_Result::CopyFrom(const AST_UpdateModuleCls_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleCls_Result::IsInitialized() const {

  return true;
}

void AST_UpdateModuleCls_Result::Swap(AST_UpdateModuleCls_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleCls_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleCls_Result_descriptor_;
  metadata.reflection = AST_UpdateModuleCls_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateModuleCls::AST_UpdateModuleCls()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleCls::InitAsDefaultInstance() {
}

AST_UpdateModuleCls::AST_UpdateModuleCls(const AST_UpdateModuleCls& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleCls::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleCls::~AST_UpdateModuleCls() {
  SharedDtor();
}

void AST_UpdateModuleCls::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateModuleCls::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleCls::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleCls_descriptor_;
}

const AST_UpdateModuleCls& AST_UpdateModuleCls::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleCls* AST_UpdateModuleCls::default_instance_ = NULL;

AST_UpdateModuleCls* AST_UpdateModuleCls::New() const {
  return new AST_UpdateModuleCls;
}

void AST_UpdateModuleCls::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleCls::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateModuleCls::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleCls::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleCls::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleCls::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleCls* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleCls*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleCls::MergeFrom(const AST_UpdateModuleCls& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleCls::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleCls::CopyFrom(const AST_UpdateModuleCls& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleCls::IsInitialized() const {

  return true;
}

void AST_UpdateModuleCls::Swap(AST_UpdateModuleCls* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleCls::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleCls_descriptor_;
  metadata.reflection = AST_UpdateModuleCls_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateModuleImports_Args::kImportsFieldNumber;
const int AST_UpdateModuleImports_Args::kBcFieldNumber;
const int AST_UpdateModuleImports_Args::kLibraryIDFieldNumber;
const int AST_UpdateModuleImports_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateModuleImports_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateModuleImports_Args >, 11, false >
  AST_UpdateModuleImports_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateModuleImports_Args::default_instance());
AST_UpdateModuleImports_Args::AST_UpdateModuleImports_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleImports_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateModuleImports_Args::AST_UpdateModuleImports_Args(const AST_UpdateModuleImports_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleImports_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleImports_Args::~AST_UpdateModuleImports_Args() {
  SharedDtor();
}

void AST_UpdateModuleImports_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_UpdateModuleImports_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleImports_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleImports_Args_descriptor_;
}

const AST_UpdateModuleImports_Args& AST_UpdateModuleImports_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleImports_Args* AST_UpdateModuleImports_Args::default_instance_ = NULL;

AST_UpdateModuleImports_Args* AST_UpdateModuleImports_Args::New() const {
  return new AST_UpdateModuleImports_Args;
}

void AST_UpdateModuleImports_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  imports_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleImports_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr imports = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_imports:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_imports()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_imports;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateModuleImports_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr imports = 1;
  for (int i = 0; i < this->imports_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->imports(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleImports_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr imports = 1;
  for (int i = 0; i < this->imports_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->imports(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleImports_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr imports = 1;
  total_size += 1 * this->imports_size();
  for (int i = 0; i < this->imports_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->imports(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleImports_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleImports_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleImports_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleImports_Args::MergeFrom(const AST_UpdateModuleImports_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  imports_.MergeFrom(from.imports_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleImports_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleImports_Args::CopyFrom(const AST_UpdateModuleImports_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleImports_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < imports_size(); i++) {
    if (!this->imports(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateModuleImports_Args::Swap(AST_UpdateModuleImports_Args* other) {
  if (other != this) {
    imports_.Swap(&other->imports_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleImports_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleImports_Args_descriptor_;
  metadata.reflection = AST_UpdateModuleImports_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateModuleImports_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateModuleImports_Result >, 11, false >
  AST_UpdateModuleImports_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateModuleImports_Result::default_instance());
AST_UpdateModuleImports_Result::AST_UpdateModuleImports_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleImports_Result::InitAsDefaultInstance() {
}

AST_UpdateModuleImports_Result::AST_UpdateModuleImports_Result(const AST_UpdateModuleImports_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleImports_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleImports_Result::~AST_UpdateModuleImports_Result() {
  SharedDtor();
}

void AST_UpdateModuleImports_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateModuleImports_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleImports_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleImports_Result_descriptor_;
}

const AST_UpdateModuleImports_Result& AST_UpdateModuleImports_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleImports_Result* AST_UpdateModuleImports_Result::default_instance_ = NULL;

AST_UpdateModuleImports_Result* AST_UpdateModuleImports_Result::New() const {
  return new AST_UpdateModuleImports_Result;
}

void AST_UpdateModuleImports_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleImports_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateModuleImports_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleImports_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleImports_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleImports_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleImports_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleImports_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleImports_Result::MergeFrom(const AST_UpdateModuleImports_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleImports_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleImports_Result::CopyFrom(const AST_UpdateModuleImports_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleImports_Result::IsInitialized() const {

  return true;
}

void AST_UpdateModuleImports_Result::Swap(AST_UpdateModuleImports_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleImports_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleImports_Result_descriptor_;
  metadata.reflection = AST_UpdateModuleImports_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateModuleImports::AST_UpdateModuleImports()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleImports::InitAsDefaultInstance() {
}

AST_UpdateModuleImports::AST_UpdateModuleImports(const AST_UpdateModuleImports& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleImports::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleImports::~AST_UpdateModuleImports() {
  SharedDtor();
}

void AST_UpdateModuleImports::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateModuleImports::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleImports::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleImports_descriptor_;
}

const AST_UpdateModuleImports& AST_UpdateModuleImports::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleImports* AST_UpdateModuleImports::default_instance_ = NULL;

AST_UpdateModuleImports* AST_UpdateModuleImports::New() const {
  return new AST_UpdateModuleImports;
}

void AST_UpdateModuleImports::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleImports::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateModuleImports::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleImports::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleImports::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleImports::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleImports* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleImports*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleImports::MergeFrom(const AST_UpdateModuleImports& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleImports::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleImports::CopyFrom(const AST_UpdateModuleImports& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleImports::IsInitialized() const {

  return true;
}

void AST_UpdateModuleImports::Swap(AST_UpdateModuleImports* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleImports::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleImports_descriptor_;
  metadata.reflection = AST_UpdateModuleImports_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateModuleFields_Args::kFieldsFieldNumber;
const int AST_UpdateModuleFields_Args::kBcFieldNumber;
const int AST_UpdateModuleFields_Args::kLibraryIDFieldNumber;
const int AST_UpdateModuleFields_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateModuleFields_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateModuleFields_Args >, 11, false >
  AST_UpdateModuleFields_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateModuleFields_Args::default_instance());
AST_UpdateModuleFields_Args::AST_UpdateModuleFields_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleFields_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateModuleFields_Args::AST_UpdateModuleFields_Args(const AST_UpdateModuleFields_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleFields_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleFields_Args::~AST_UpdateModuleFields_Args() {
  SharedDtor();
}

void AST_UpdateModuleFields_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_UpdateModuleFields_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleFields_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleFields_Args_descriptor_;
}

const AST_UpdateModuleFields_Args& AST_UpdateModuleFields_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleFields_Args* AST_UpdateModuleFields_Args::default_instance_ = NULL;

AST_UpdateModuleFields_Args* AST_UpdateModuleFields_Args::New() const {
  return new AST_UpdateModuleFields_Args;
}

void AST_UpdateModuleFields_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  fields_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleFields_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr fields = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_fields:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_fields()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_fields;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateModuleFields_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr fields = 1;
  for (int i = 0; i < this->fields_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->fields(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleFields_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr fields = 1;
  for (int i = 0; i < this->fields_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->fields(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleFields_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr fields = 1;
  total_size += 1 * this->fields_size();
  for (int i = 0; i < this->fields_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->fields(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleFields_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleFields_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleFields_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleFields_Args::MergeFrom(const AST_UpdateModuleFields_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  fields_.MergeFrom(from.fields_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleFields_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleFields_Args::CopyFrom(const AST_UpdateModuleFields_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleFields_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < fields_size(); i++) {
    if (!this->fields(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateModuleFields_Args::Swap(AST_UpdateModuleFields_Args* other) {
  if (other != this) {
    fields_.Swap(&other->fields_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleFields_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleFields_Args_descriptor_;
  metadata.reflection = AST_UpdateModuleFields_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateModuleFields_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateModuleFields_Result >, 11, false >
  AST_UpdateModuleFields_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateModuleFields_Result::default_instance());
AST_UpdateModuleFields_Result::AST_UpdateModuleFields_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleFields_Result::InitAsDefaultInstance() {
}

AST_UpdateModuleFields_Result::AST_UpdateModuleFields_Result(const AST_UpdateModuleFields_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleFields_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleFields_Result::~AST_UpdateModuleFields_Result() {
  SharedDtor();
}

void AST_UpdateModuleFields_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateModuleFields_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleFields_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleFields_Result_descriptor_;
}

const AST_UpdateModuleFields_Result& AST_UpdateModuleFields_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleFields_Result* AST_UpdateModuleFields_Result::default_instance_ = NULL;

AST_UpdateModuleFields_Result* AST_UpdateModuleFields_Result::New() const {
  return new AST_UpdateModuleFields_Result;
}

void AST_UpdateModuleFields_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleFields_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateModuleFields_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleFields_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleFields_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleFields_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleFields_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleFields_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleFields_Result::MergeFrom(const AST_UpdateModuleFields_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleFields_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleFields_Result::CopyFrom(const AST_UpdateModuleFields_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleFields_Result::IsInitialized() const {

  return true;
}

void AST_UpdateModuleFields_Result::Swap(AST_UpdateModuleFields_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleFields_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleFields_Result_descriptor_;
  metadata.reflection = AST_UpdateModuleFields_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateModuleFields::AST_UpdateModuleFields()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateModuleFields::InitAsDefaultInstance() {
}

AST_UpdateModuleFields::AST_UpdateModuleFields(const AST_UpdateModuleFields& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateModuleFields::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateModuleFields::~AST_UpdateModuleFields() {
  SharedDtor();
}

void AST_UpdateModuleFields::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateModuleFields::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateModuleFields::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateModuleFields_descriptor_;
}

const AST_UpdateModuleFields& AST_UpdateModuleFields::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateModuleFields* AST_UpdateModuleFields::default_instance_ = NULL;

AST_UpdateModuleFields* AST_UpdateModuleFields::New() const {
  return new AST_UpdateModuleFields;
}

void AST_UpdateModuleFields::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateModuleFields::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateModuleFields::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateModuleFields::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateModuleFields::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateModuleFields::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateModuleFields* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateModuleFields*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateModuleFields::MergeFrom(const AST_UpdateModuleFields& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateModuleFields::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateModuleFields::CopyFrom(const AST_UpdateModuleFields& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateModuleFields::IsInitialized() const {

  return true;
}

void AST_UpdateModuleFields::Swap(AST_UpdateModuleFields* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateModuleFields::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateModuleFields_descriptor_;
  metadata.reflection = AST_UpdateModuleFields_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateDataCls_Args::kClsFieldNumber;
const int AST_UpdateDataCls_Args::kBcFieldNumber;
const int AST_UpdateDataCls_Args::kLibraryIDFieldNumber;
const int AST_UpdateDataCls_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateDataCls_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateDataCls_Args >, 11, false >
  AST_UpdateDataCls_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateDataCls_Args::default_instance());
AST_UpdateDataCls_Args::AST_UpdateDataCls_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataCls_Args::InitAsDefaultInstance() {
  cls_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateDataCls_Args::AST_UpdateDataCls_Args(const AST_UpdateDataCls_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataCls_Args::SharedCtor() {
  _cached_size_ = 0;
  cls_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataCls_Args::~AST_UpdateDataCls_Args() {
  SharedDtor();
}

void AST_UpdateDataCls_Args::SharedDtor() {
  if (this != default_instance_) {
    delete cls_;
    delete bc_;
  }
}

void AST_UpdateDataCls_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataCls_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataCls_Args_descriptor_;
}

const AST_UpdateDataCls_Args& AST_UpdateDataCls_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataCls_Args* AST_UpdateDataCls_Args::default_instance_ = NULL;

AST_UpdateDataCls_Args* AST_UpdateDataCls_Args::New() const {
  return new AST_UpdateDataCls_Args;
}

void AST_UpdateDataCls_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_cls()) {
      if (cls_ != NULL) cls_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataCls_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type cls = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_cls()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateDataCls_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cls(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataCls_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type cls = 1;
  if (has_cls()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cls(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataCls_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type cls = 1;
    if (has_cls()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->cls());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataCls_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataCls_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataCls_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataCls_Args::MergeFrom(const AST_UpdateDataCls_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_cls()) {
      mutable_cls()->::generated::proto::type::Type::MergeFrom(from.cls());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataCls_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataCls_Args::CopyFrom(const AST_UpdateDataCls_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataCls_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_cls()) {
    if (!this->cls().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateDataCls_Args::Swap(AST_UpdateDataCls_Args* other) {
  if (other != this) {
    std::swap(cls_, other->cls_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataCls_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataCls_Args_descriptor_;
  metadata.reflection = AST_UpdateDataCls_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateDataCls_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateDataCls_Result >, 11, false >
  AST_UpdateDataCls_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateDataCls_Result::default_instance());
AST_UpdateDataCls_Result::AST_UpdateDataCls_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataCls_Result::InitAsDefaultInstance() {
}

AST_UpdateDataCls_Result::AST_UpdateDataCls_Result(const AST_UpdateDataCls_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataCls_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataCls_Result::~AST_UpdateDataCls_Result() {
  SharedDtor();
}

void AST_UpdateDataCls_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateDataCls_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataCls_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataCls_Result_descriptor_;
}

const AST_UpdateDataCls_Result& AST_UpdateDataCls_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataCls_Result* AST_UpdateDataCls_Result::default_instance_ = NULL;

AST_UpdateDataCls_Result* AST_UpdateDataCls_Result::New() const {
  return new AST_UpdateDataCls_Result;
}

void AST_UpdateDataCls_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataCls_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateDataCls_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataCls_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataCls_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataCls_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataCls_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataCls_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataCls_Result::MergeFrom(const AST_UpdateDataCls_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataCls_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataCls_Result::CopyFrom(const AST_UpdateDataCls_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataCls_Result::IsInitialized() const {

  return true;
}

void AST_UpdateDataCls_Result::Swap(AST_UpdateDataCls_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataCls_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataCls_Result_descriptor_;
  metadata.reflection = AST_UpdateDataCls_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateDataCls::AST_UpdateDataCls()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataCls::InitAsDefaultInstance() {
}

AST_UpdateDataCls::AST_UpdateDataCls(const AST_UpdateDataCls& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataCls::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataCls::~AST_UpdateDataCls() {
  SharedDtor();
}

void AST_UpdateDataCls::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateDataCls::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataCls::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataCls_descriptor_;
}

const AST_UpdateDataCls& AST_UpdateDataCls::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataCls* AST_UpdateDataCls::default_instance_ = NULL;

AST_UpdateDataCls* AST_UpdateDataCls::New() const {
  return new AST_UpdateDataCls;
}

void AST_UpdateDataCls::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataCls::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateDataCls::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataCls::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataCls::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataCls::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataCls* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataCls*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataCls::MergeFrom(const AST_UpdateDataCls& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataCls::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataCls::CopyFrom(const AST_UpdateDataCls& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataCls::IsInitialized() const {

  return true;
}

void AST_UpdateDataCls::Swap(AST_UpdateDataCls* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataCls::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataCls_descriptor_;
  metadata.reflection = AST_UpdateDataCls_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateDataCons_Args::kConsFieldNumber;
const int AST_UpdateDataCons_Args::kBcFieldNumber;
const int AST_UpdateDataCons_Args::kLibraryIDFieldNumber;
const int AST_UpdateDataCons_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateDataCons_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateDataCons_Args >, 11, false >
  AST_UpdateDataCons_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateDataCons_Args::default_instance());
AST_UpdateDataCons_Args::AST_UpdateDataCons_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataCons_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateDataCons_Args::AST_UpdateDataCons_Args(const AST_UpdateDataCons_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataCons_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataCons_Args::~AST_UpdateDataCons_Args() {
  SharedDtor();
}

void AST_UpdateDataCons_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_UpdateDataCons_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataCons_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataCons_Args_descriptor_;
}

const AST_UpdateDataCons_Args& AST_UpdateDataCons_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataCons_Args* AST_UpdateDataCons_Args::default_instance_ = NULL;

AST_UpdateDataCons_Args* AST_UpdateDataCons_Args::New() const {
  return new AST_UpdateDataCons_Args;
}

void AST_UpdateDataCons_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  cons_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataCons_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr cons = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_cons:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_cons()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_cons;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateDataCons_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr cons = 1;
  for (int i = 0; i < this->cons_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->cons(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataCons_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr cons = 1;
  for (int i = 0; i < this->cons_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->cons(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataCons_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr cons = 1;
  total_size += 1 * this->cons_size();
  for (int i = 0; i < this->cons_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->cons(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataCons_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataCons_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataCons_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataCons_Args::MergeFrom(const AST_UpdateDataCons_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  cons_.MergeFrom(from.cons_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataCons_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataCons_Args::CopyFrom(const AST_UpdateDataCons_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataCons_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < cons_size(); i++) {
    if (!this->cons(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateDataCons_Args::Swap(AST_UpdateDataCons_Args* other) {
  if (other != this) {
    cons_.Swap(&other->cons_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataCons_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataCons_Args_descriptor_;
  metadata.reflection = AST_UpdateDataCons_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateDataCons_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateDataCons_Result >, 11, false >
  AST_UpdateDataCons_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateDataCons_Result::default_instance());
AST_UpdateDataCons_Result::AST_UpdateDataCons_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataCons_Result::InitAsDefaultInstance() {
}

AST_UpdateDataCons_Result::AST_UpdateDataCons_Result(const AST_UpdateDataCons_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataCons_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataCons_Result::~AST_UpdateDataCons_Result() {
  SharedDtor();
}

void AST_UpdateDataCons_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateDataCons_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataCons_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataCons_Result_descriptor_;
}

const AST_UpdateDataCons_Result& AST_UpdateDataCons_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataCons_Result* AST_UpdateDataCons_Result::default_instance_ = NULL;

AST_UpdateDataCons_Result* AST_UpdateDataCons_Result::New() const {
  return new AST_UpdateDataCons_Result;
}

void AST_UpdateDataCons_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataCons_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateDataCons_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataCons_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataCons_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataCons_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataCons_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataCons_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataCons_Result::MergeFrom(const AST_UpdateDataCons_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataCons_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataCons_Result::CopyFrom(const AST_UpdateDataCons_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataCons_Result::IsInitialized() const {

  return true;
}

void AST_UpdateDataCons_Result::Swap(AST_UpdateDataCons_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataCons_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataCons_Result_descriptor_;
  metadata.reflection = AST_UpdateDataCons_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateDataCons::AST_UpdateDataCons()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataCons::InitAsDefaultInstance() {
}

AST_UpdateDataCons::AST_UpdateDataCons(const AST_UpdateDataCons& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataCons::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataCons::~AST_UpdateDataCons() {
  SharedDtor();
}

void AST_UpdateDataCons::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateDataCons::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataCons::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataCons_descriptor_;
}

const AST_UpdateDataCons& AST_UpdateDataCons::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataCons* AST_UpdateDataCons::default_instance_ = NULL;

AST_UpdateDataCons* AST_UpdateDataCons::New() const {
  return new AST_UpdateDataCons;
}

void AST_UpdateDataCons::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataCons::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateDataCons::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataCons::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataCons::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataCons::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataCons* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataCons*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataCons::MergeFrom(const AST_UpdateDataCons& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataCons::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataCons::CopyFrom(const AST_UpdateDataCons& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataCons::IsInitialized() const {

  return true;
}

void AST_UpdateDataCons::Swap(AST_UpdateDataCons* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataCons::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataCons_descriptor_;
  metadata.reflection = AST_UpdateDataCons_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateDataClasses_Args::kClassesFieldNumber;
const int AST_UpdateDataClasses_Args::kBcFieldNumber;
const int AST_UpdateDataClasses_Args::kLibraryIDFieldNumber;
const int AST_UpdateDataClasses_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateDataClasses_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateDataClasses_Args >, 11, false >
  AST_UpdateDataClasses_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateDataClasses_Args::default_instance());
AST_UpdateDataClasses_Args::AST_UpdateDataClasses_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataClasses_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateDataClasses_Args::AST_UpdateDataClasses_Args(const AST_UpdateDataClasses_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataClasses_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataClasses_Args::~AST_UpdateDataClasses_Args() {
  SharedDtor();
}

void AST_UpdateDataClasses_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_UpdateDataClasses_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataClasses_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataClasses_Args_descriptor_;
}

const AST_UpdateDataClasses_Args& AST_UpdateDataClasses_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataClasses_Args* AST_UpdateDataClasses_Args::default_instance_ = NULL;

AST_UpdateDataClasses_Args* AST_UpdateDataClasses_Args::New() const {
  return new AST_UpdateDataClasses_Args;
}

void AST_UpdateDataClasses_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  classes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataClasses_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr classes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_classes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_classes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_classes;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateDataClasses_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr classes = 1;
  for (int i = 0; i < this->classes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->classes(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataClasses_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr classes = 1;
  for (int i = 0; i < this->classes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->classes(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataClasses_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr classes = 1;
  total_size += 1 * this->classes_size();
  for (int i = 0; i < this->classes_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->classes(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataClasses_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataClasses_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataClasses_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataClasses_Args::MergeFrom(const AST_UpdateDataClasses_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  classes_.MergeFrom(from.classes_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataClasses_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataClasses_Args::CopyFrom(const AST_UpdateDataClasses_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataClasses_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < classes_size(); i++) {
    if (!this->classes(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateDataClasses_Args::Swap(AST_UpdateDataClasses_Args* other) {
  if (other != this) {
    classes_.Swap(&other->classes_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataClasses_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataClasses_Args_descriptor_;
  metadata.reflection = AST_UpdateDataClasses_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateDataClasses_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateDataClasses_Result >, 11, false >
  AST_UpdateDataClasses_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateDataClasses_Result::default_instance());
AST_UpdateDataClasses_Result::AST_UpdateDataClasses_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataClasses_Result::InitAsDefaultInstance() {
}

AST_UpdateDataClasses_Result::AST_UpdateDataClasses_Result(const AST_UpdateDataClasses_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataClasses_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataClasses_Result::~AST_UpdateDataClasses_Result() {
  SharedDtor();
}

void AST_UpdateDataClasses_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateDataClasses_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataClasses_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataClasses_Result_descriptor_;
}

const AST_UpdateDataClasses_Result& AST_UpdateDataClasses_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataClasses_Result* AST_UpdateDataClasses_Result::default_instance_ = NULL;

AST_UpdateDataClasses_Result* AST_UpdateDataClasses_Result::New() const {
  return new AST_UpdateDataClasses_Result;
}

void AST_UpdateDataClasses_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataClasses_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateDataClasses_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataClasses_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataClasses_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataClasses_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataClasses_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataClasses_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataClasses_Result::MergeFrom(const AST_UpdateDataClasses_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataClasses_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataClasses_Result::CopyFrom(const AST_UpdateDataClasses_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataClasses_Result::IsInitialized() const {

  return true;
}

void AST_UpdateDataClasses_Result::Swap(AST_UpdateDataClasses_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataClasses_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataClasses_Result_descriptor_;
  metadata.reflection = AST_UpdateDataClasses_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateDataClasses::AST_UpdateDataClasses()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataClasses::InitAsDefaultInstance() {
}

AST_UpdateDataClasses::AST_UpdateDataClasses(const AST_UpdateDataClasses& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataClasses::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataClasses::~AST_UpdateDataClasses() {
  SharedDtor();
}

void AST_UpdateDataClasses::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateDataClasses::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataClasses::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataClasses_descriptor_;
}

const AST_UpdateDataClasses& AST_UpdateDataClasses::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataClasses* AST_UpdateDataClasses::default_instance_ = NULL;

AST_UpdateDataClasses* AST_UpdateDataClasses::New() const {
  return new AST_UpdateDataClasses;
}

void AST_UpdateDataClasses::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataClasses::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateDataClasses::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataClasses::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataClasses::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataClasses::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataClasses* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataClasses*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataClasses::MergeFrom(const AST_UpdateDataClasses& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataClasses::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataClasses::CopyFrom(const AST_UpdateDataClasses& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataClasses::IsInitialized() const {

  return true;
}

void AST_UpdateDataClasses::Swap(AST_UpdateDataClasses* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataClasses::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataClasses_descriptor_;
  metadata.reflection = AST_UpdateDataClasses_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateDataMethods_Args::kMethodsFieldNumber;
const int AST_UpdateDataMethods_Args::kBcFieldNumber;
const int AST_UpdateDataMethods_Args::kLibraryIDFieldNumber;
const int AST_UpdateDataMethods_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateDataMethods_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateDataMethods_Args >, 11, false >
  AST_UpdateDataMethods_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateDataMethods_Args::default_instance());
AST_UpdateDataMethods_Args::AST_UpdateDataMethods_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataMethods_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateDataMethods_Args::AST_UpdateDataMethods_Args(const AST_UpdateDataMethods_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataMethods_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataMethods_Args::~AST_UpdateDataMethods_Args() {
  SharedDtor();
}

void AST_UpdateDataMethods_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_UpdateDataMethods_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataMethods_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataMethods_Args_descriptor_;
}

const AST_UpdateDataMethods_Args& AST_UpdateDataMethods_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataMethods_Args* AST_UpdateDataMethods_Args::default_instance_ = NULL;

AST_UpdateDataMethods_Args* AST_UpdateDataMethods_Args::New() const {
  return new AST_UpdateDataMethods_Args;
}

void AST_UpdateDataMethods_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  methods_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataMethods_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr methods = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_methods:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_methods()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_methods;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateDataMethods_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr methods = 1;
  for (int i = 0; i < this->methods_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->methods(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataMethods_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr methods = 1;
  for (int i = 0; i < this->methods_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->methods(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataMethods_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr methods = 1;
  total_size += 1 * this->methods_size();
  for (int i = 0; i < this->methods_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->methods(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataMethods_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataMethods_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataMethods_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataMethods_Args::MergeFrom(const AST_UpdateDataMethods_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  methods_.MergeFrom(from.methods_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataMethods_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataMethods_Args::CopyFrom(const AST_UpdateDataMethods_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataMethods_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < methods_size(); i++) {
    if (!this->methods(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateDataMethods_Args::Swap(AST_UpdateDataMethods_Args* other) {
  if (other != this) {
    methods_.Swap(&other->methods_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataMethods_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataMethods_Args_descriptor_;
  metadata.reflection = AST_UpdateDataMethods_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateDataMethods_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateDataMethods_Result >, 11, false >
  AST_UpdateDataMethods_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateDataMethods_Result::default_instance());
AST_UpdateDataMethods_Result::AST_UpdateDataMethods_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataMethods_Result::InitAsDefaultInstance() {
}

AST_UpdateDataMethods_Result::AST_UpdateDataMethods_Result(const AST_UpdateDataMethods_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataMethods_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataMethods_Result::~AST_UpdateDataMethods_Result() {
  SharedDtor();
}

void AST_UpdateDataMethods_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateDataMethods_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataMethods_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataMethods_Result_descriptor_;
}

const AST_UpdateDataMethods_Result& AST_UpdateDataMethods_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataMethods_Result* AST_UpdateDataMethods_Result::default_instance_ = NULL;

AST_UpdateDataMethods_Result* AST_UpdateDataMethods_Result::New() const {
  return new AST_UpdateDataMethods_Result;
}

void AST_UpdateDataMethods_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataMethods_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateDataMethods_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataMethods_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataMethods_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataMethods_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataMethods_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataMethods_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataMethods_Result::MergeFrom(const AST_UpdateDataMethods_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataMethods_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataMethods_Result::CopyFrom(const AST_UpdateDataMethods_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataMethods_Result::IsInitialized() const {

  return true;
}

void AST_UpdateDataMethods_Result::Swap(AST_UpdateDataMethods_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataMethods_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataMethods_Result_descriptor_;
  metadata.reflection = AST_UpdateDataMethods_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateDataMethods::AST_UpdateDataMethods()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateDataMethods::InitAsDefaultInstance() {
}

AST_UpdateDataMethods::AST_UpdateDataMethods(const AST_UpdateDataMethods& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateDataMethods::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateDataMethods::~AST_UpdateDataMethods() {
  SharedDtor();
}

void AST_UpdateDataMethods::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateDataMethods::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateDataMethods::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateDataMethods_descriptor_;
}

const AST_UpdateDataMethods& AST_UpdateDataMethods::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateDataMethods* AST_UpdateDataMethods::default_instance_ = NULL;

AST_UpdateDataMethods* AST_UpdateDataMethods::New() const {
  return new AST_UpdateDataMethods;
}

void AST_UpdateDataMethods::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateDataMethods::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateDataMethods::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateDataMethods::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateDataMethods::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateDataMethods::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateDataMethods* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateDataMethods*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateDataMethods::MergeFrom(const AST_UpdateDataMethods& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateDataMethods::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateDataMethods::CopyFrom(const AST_UpdateDataMethods& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateDataMethods::IsInitialized() const {

  return true;
}

void AST_UpdateDataMethods::Swap(AST_UpdateDataMethods* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateDataMethods::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateDataMethods_descriptor_;
  metadata.reflection = AST_UpdateDataMethods_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateFunctionName_Args::kNameFieldNumber;
const int AST_UpdateFunctionName_Args::kBcFieldNumber;
const int AST_UpdateFunctionName_Args::kLibraryIDFieldNumber;
const int AST_UpdateFunctionName_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateFunctionName_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateFunctionName_Args >, 11, false >
  AST_UpdateFunctionName_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateFunctionName_Args::default_instance());
AST_UpdateFunctionName_Args::AST_UpdateFunctionName_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionName_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateFunctionName_Args::AST_UpdateFunctionName_Args(const AST_UpdateFunctionName_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionName_Args::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionName_Args::~AST_UpdateFunctionName_Args() {
  SharedDtor();
}

void AST_UpdateFunctionName_Args::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_UpdateFunctionName_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionName_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionName_Args_descriptor_;
}

const AST_UpdateFunctionName_Args& AST_UpdateFunctionName_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionName_Args* AST_UpdateFunctionName_Args::default_instance_ = NULL;

AST_UpdateFunctionName_Args* AST_UpdateFunctionName_Args::New() const {
  return new AST_UpdateFunctionName_Args;
}

void AST_UpdateFunctionName_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionName_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionName_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionName_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionName_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionName_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionName_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionName_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionName_Args::MergeFrom(const AST_UpdateFunctionName_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionName_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionName_Args::CopyFrom(const AST_UpdateFunctionName_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionName_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateFunctionName_Args::Swap(AST_UpdateFunctionName_Args* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionName_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionName_Args_descriptor_;
  metadata.reflection = AST_UpdateFunctionName_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateFunctionName_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateFunctionName_Result >, 11, false >
  AST_UpdateFunctionName_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateFunctionName_Result::default_instance());
AST_UpdateFunctionName_Result::AST_UpdateFunctionName_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionName_Result::InitAsDefaultInstance() {
}

AST_UpdateFunctionName_Result::AST_UpdateFunctionName_Result(const AST_UpdateFunctionName_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionName_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionName_Result::~AST_UpdateFunctionName_Result() {
  SharedDtor();
}

void AST_UpdateFunctionName_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateFunctionName_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionName_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionName_Result_descriptor_;
}

const AST_UpdateFunctionName_Result& AST_UpdateFunctionName_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionName_Result* AST_UpdateFunctionName_Result::default_instance_ = NULL;

AST_UpdateFunctionName_Result* AST_UpdateFunctionName_Result::New() const {
  return new AST_UpdateFunctionName_Result;
}

void AST_UpdateFunctionName_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionName_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionName_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionName_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionName_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionName_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionName_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionName_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionName_Result::MergeFrom(const AST_UpdateFunctionName_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionName_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionName_Result::CopyFrom(const AST_UpdateFunctionName_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionName_Result::IsInitialized() const {

  return true;
}

void AST_UpdateFunctionName_Result::Swap(AST_UpdateFunctionName_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionName_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionName_Result_descriptor_;
  metadata.reflection = AST_UpdateFunctionName_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateFunctionName::AST_UpdateFunctionName()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionName::InitAsDefaultInstance() {
}

AST_UpdateFunctionName::AST_UpdateFunctionName(const AST_UpdateFunctionName& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionName::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionName::~AST_UpdateFunctionName() {
  SharedDtor();
}

void AST_UpdateFunctionName::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateFunctionName::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionName::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionName_descriptor_;
}

const AST_UpdateFunctionName& AST_UpdateFunctionName::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionName* AST_UpdateFunctionName::default_instance_ = NULL;

AST_UpdateFunctionName* AST_UpdateFunctionName::New() const {
  return new AST_UpdateFunctionName;
}

void AST_UpdateFunctionName::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionName::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionName::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionName::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionName::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionName::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionName* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionName*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionName::MergeFrom(const AST_UpdateFunctionName& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionName::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionName::CopyFrom(const AST_UpdateFunctionName& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionName::IsInitialized() const {

  return true;
}

void AST_UpdateFunctionName::Swap(AST_UpdateFunctionName* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionName::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionName_descriptor_;
  metadata.reflection = AST_UpdateFunctionName_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateFunctionPath_Args::kPathFieldNumber;
const int AST_UpdateFunctionPath_Args::kBcFieldNumber;
const int AST_UpdateFunctionPath_Args::kLibraryIDFieldNumber;
const int AST_UpdateFunctionPath_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateFunctionPath_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateFunctionPath_Args >, 11, false >
  AST_UpdateFunctionPath_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateFunctionPath_Args::default_instance());
AST_UpdateFunctionPath_Args::AST_UpdateFunctionPath_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionPath_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateFunctionPath_Args::AST_UpdateFunctionPath_Args(const AST_UpdateFunctionPath_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionPath_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionPath_Args::~AST_UpdateFunctionPath_Args() {
  SharedDtor();
}

void AST_UpdateFunctionPath_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_UpdateFunctionPath_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionPath_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionPath_Args_descriptor_;
}

const AST_UpdateFunctionPath_Args& AST_UpdateFunctionPath_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionPath_Args* AST_UpdateFunctionPath_Args::default_instance_ = NULL;

AST_UpdateFunctionPath_Args* AST_UpdateFunctionPath_Args::New() const {
  return new AST_UpdateFunctionPath_Args;
}

void AST_UpdateFunctionPath_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  path_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionPath_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->add_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path(this->path_size() - 1).data(),
            this->path(this->path_size() - 1).length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_path;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionPath_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated string path = 1;
  for (int i = 0; i < this->path_size(); i++) {
  ::google::protobuf::internal::WireFormat::VerifyUTF8String(
    this->path(i).data(), this->path(i).length(),
    ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionPath_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated string path = 1;
  for (int i = 0; i < this->path_size(); i++) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path(i).data(), this->path(i).length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target = ::google::protobuf::internal::WireFormatLite::
      WriteStringToArray(1, this->path(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionPath_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated string path = 1;
  total_size += 1 * this->path_size();
  for (int i = 0; i < this->path_size(); i++) {
    total_size += ::google::protobuf::internal::WireFormatLite::StringSize(
      this->path(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionPath_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionPath_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionPath_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionPath_Args::MergeFrom(const AST_UpdateFunctionPath_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  path_.MergeFrom(from.path_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionPath_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionPath_Args::CopyFrom(const AST_UpdateFunctionPath_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionPath_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateFunctionPath_Args::Swap(AST_UpdateFunctionPath_Args* other) {
  if (other != this) {
    path_.Swap(&other->path_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionPath_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionPath_Args_descriptor_;
  metadata.reflection = AST_UpdateFunctionPath_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateFunctionPath_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateFunctionPath_Result >, 11, false >
  AST_UpdateFunctionPath_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateFunctionPath_Result::default_instance());
AST_UpdateFunctionPath_Result::AST_UpdateFunctionPath_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionPath_Result::InitAsDefaultInstance() {
}

AST_UpdateFunctionPath_Result::AST_UpdateFunctionPath_Result(const AST_UpdateFunctionPath_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionPath_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionPath_Result::~AST_UpdateFunctionPath_Result() {
  SharedDtor();
}

void AST_UpdateFunctionPath_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateFunctionPath_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionPath_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionPath_Result_descriptor_;
}

const AST_UpdateFunctionPath_Result& AST_UpdateFunctionPath_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionPath_Result* AST_UpdateFunctionPath_Result::default_instance_ = NULL;

AST_UpdateFunctionPath_Result* AST_UpdateFunctionPath_Result::New() const {
  return new AST_UpdateFunctionPath_Result;
}

void AST_UpdateFunctionPath_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionPath_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionPath_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionPath_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionPath_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionPath_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionPath_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionPath_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionPath_Result::MergeFrom(const AST_UpdateFunctionPath_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionPath_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionPath_Result::CopyFrom(const AST_UpdateFunctionPath_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionPath_Result::IsInitialized() const {

  return true;
}

void AST_UpdateFunctionPath_Result::Swap(AST_UpdateFunctionPath_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionPath_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionPath_Result_descriptor_;
  metadata.reflection = AST_UpdateFunctionPath_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateFunctionPath::AST_UpdateFunctionPath()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionPath::InitAsDefaultInstance() {
}

AST_UpdateFunctionPath::AST_UpdateFunctionPath(const AST_UpdateFunctionPath& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionPath::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionPath::~AST_UpdateFunctionPath() {
  SharedDtor();
}

void AST_UpdateFunctionPath::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateFunctionPath::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionPath::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionPath_descriptor_;
}

const AST_UpdateFunctionPath& AST_UpdateFunctionPath::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionPath* AST_UpdateFunctionPath::default_instance_ = NULL;

AST_UpdateFunctionPath* AST_UpdateFunctionPath::New() const {
  return new AST_UpdateFunctionPath;
}

void AST_UpdateFunctionPath::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionPath::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionPath::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionPath::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionPath::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionPath::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionPath* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionPath*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionPath::MergeFrom(const AST_UpdateFunctionPath& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionPath::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionPath::CopyFrom(const AST_UpdateFunctionPath& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionPath::IsInitialized() const {

  return true;
}

void AST_UpdateFunctionPath::Swap(AST_UpdateFunctionPath* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionPath::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionPath_descriptor_;
  metadata.reflection = AST_UpdateFunctionPath_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateFunctionInputs_Args::kInputsFieldNumber;
const int AST_UpdateFunctionInputs_Args::kBcFieldNumber;
const int AST_UpdateFunctionInputs_Args::kLibraryIDFieldNumber;
const int AST_UpdateFunctionInputs_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateFunctionInputs_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateFunctionInputs_Args >, 11, false >
  AST_UpdateFunctionInputs_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateFunctionInputs_Args::default_instance());
AST_UpdateFunctionInputs_Args::AST_UpdateFunctionInputs_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionInputs_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateFunctionInputs_Args::AST_UpdateFunctionInputs_Args(const AST_UpdateFunctionInputs_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionInputs_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionInputs_Args::~AST_UpdateFunctionInputs_Args() {
  SharedDtor();
}

void AST_UpdateFunctionInputs_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_UpdateFunctionInputs_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionInputs_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionInputs_Args_descriptor_;
}

const AST_UpdateFunctionInputs_Args& AST_UpdateFunctionInputs_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionInputs_Args* AST_UpdateFunctionInputs_Args::default_instance_ = NULL;

AST_UpdateFunctionInputs_Args* AST_UpdateFunctionInputs_Args::New() const {
  return new AST_UpdateFunctionInputs_Args;
}

void AST_UpdateFunctionInputs_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inputs_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionInputs_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.expr.Expr inputs = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_inputs:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_inputs()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_inputs;
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionInputs_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.expr.Expr inputs = 1;
  for (int i = 0; i < this->inputs_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->inputs(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionInputs_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.expr.Expr inputs = 1;
  for (int i = 0; i < this->inputs_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->inputs(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionInputs_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated .generated.proto.expr.Expr inputs = 1;
  total_size += 1 * this->inputs_size();
  for (int i = 0; i < this->inputs_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->inputs(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionInputs_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionInputs_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionInputs_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionInputs_Args::MergeFrom(const AST_UpdateFunctionInputs_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  inputs_.MergeFrom(from.inputs_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionInputs_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionInputs_Args::CopyFrom(const AST_UpdateFunctionInputs_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionInputs_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000e) != 0x0000000e) return false;

  for (int i = 0; i < inputs_size(); i++) {
    if (!this->inputs(i).IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateFunctionInputs_Args::Swap(AST_UpdateFunctionInputs_Args* other) {
  if (other != this) {
    inputs_.Swap(&other->inputs_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionInputs_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionInputs_Args_descriptor_;
  metadata.reflection = AST_UpdateFunctionInputs_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateFunctionInputs_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateFunctionInputs_Result >, 11, false >
  AST_UpdateFunctionInputs_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateFunctionInputs_Result::default_instance());
AST_UpdateFunctionInputs_Result::AST_UpdateFunctionInputs_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionInputs_Result::InitAsDefaultInstance() {
}

AST_UpdateFunctionInputs_Result::AST_UpdateFunctionInputs_Result(const AST_UpdateFunctionInputs_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionInputs_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionInputs_Result::~AST_UpdateFunctionInputs_Result() {
  SharedDtor();
}

void AST_UpdateFunctionInputs_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateFunctionInputs_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionInputs_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionInputs_Result_descriptor_;
}

const AST_UpdateFunctionInputs_Result& AST_UpdateFunctionInputs_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionInputs_Result* AST_UpdateFunctionInputs_Result::default_instance_ = NULL;

AST_UpdateFunctionInputs_Result* AST_UpdateFunctionInputs_Result::New() const {
  return new AST_UpdateFunctionInputs_Result;
}

void AST_UpdateFunctionInputs_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionInputs_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionInputs_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionInputs_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionInputs_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionInputs_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionInputs_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionInputs_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionInputs_Result::MergeFrom(const AST_UpdateFunctionInputs_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionInputs_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionInputs_Result::CopyFrom(const AST_UpdateFunctionInputs_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionInputs_Result::IsInitialized() const {

  return true;
}

void AST_UpdateFunctionInputs_Result::Swap(AST_UpdateFunctionInputs_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionInputs_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionInputs_Result_descriptor_;
  metadata.reflection = AST_UpdateFunctionInputs_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateFunctionInputs::AST_UpdateFunctionInputs()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionInputs::InitAsDefaultInstance() {
}

AST_UpdateFunctionInputs::AST_UpdateFunctionInputs(const AST_UpdateFunctionInputs& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionInputs::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionInputs::~AST_UpdateFunctionInputs() {
  SharedDtor();
}

void AST_UpdateFunctionInputs::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateFunctionInputs::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionInputs::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionInputs_descriptor_;
}

const AST_UpdateFunctionInputs& AST_UpdateFunctionInputs::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionInputs* AST_UpdateFunctionInputs::default_instance_ = NULL;

AST_UpdateFunctionInputs* AST_UpdateFunctionInputs::New() const {
  return new AST_UpdateFunctionInputs;
}

void AST_UpdateFunctionInputs::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionInputs::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionInputs::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionInputs::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionInputs::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionInputs::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionInputs* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionInputs*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionInputs::MergeFrom(const AST_UpdateFunctionInputs& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionInputs::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionInputs::CopyFrom(const AST_UpdateFunctionInputs& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionInputs::IsInitialized() const {

  return true;
}

void AST_UpdateFunctionInputs::Swap(AST_UpdateFunctionInputs* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionInputs::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionInputs_descriptor_;
  metadata.reflection = AST_UpdateFunctionInputs_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_UpdateFunctionOutput_Args::kOutputFieldNumber;
const int AST_UpdateFunctionOutput_Args::kBcFieldNumber;
const int AST_UpdateFunctionOutput_Args::kLibraryIDFieldNumber;
const int AST_UpdateFunctionOutput_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateFunctionOutput_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateFunctionOutput_Args >, 11, false >
  AST_UpdateFunctionOutput_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_UpdateFunctionOutput_Args::default_instance());
AST_UpdateFunctionOutput_Args::AST_UpdateFunctionOutput_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionOutput_Args::InitAsDefaultInstance() {
  output_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_UpdateFunctionOutput_Args::AST_UpdateFunctionOutput_Args(const AST_UpdateFunctionOutput_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionOutput_Args::SharedCtor() {
  _cached_size_ = 0;
  output_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionOutput_Args::~AST_UpdateFunctionOutput_Args() {
  SharedDtor();
}

void AST_UpdateFunctionOutput_Args::SharedDtor() {
  if (this != default_instance_) {
    delete output_;
    delete bc_;
  }
}

void AST_UpdateFunctionOutput_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionOutput_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionOutput_Args_descriptor_;
}

const AST_UpdateFunctionOutput_Args& AST_UpdateFunctionOutput_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionOutput_Args* AST_UpdateFunctionOutput_Args::default_instance_ = NULL;

AST_UpdateFunctionOutput_Args* AST_UpdateFunctionOutput_Args::New() const {
  return new AST_UpdateFunctionOutput_Args;
}

void AST_UpdateFunctionOutput_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_output()) {
      if (output_ != NULL) output_->::generated::proto::type::Type::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionOutput_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type output = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_output()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionOutput_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type output = 1;
  if (has_output()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->output(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionOutput_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type output = 1;
  if (has_output()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->output(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionOutput_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type output = 1;
    if (has_output()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->output());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionOutput_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionOutput_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionOutput_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionOutput_Args::MergeFrom(const AST_UpdateFunctionOutput_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_output()) {
      mutable_output()->::generated::proto::type::Type::MergeFrom(from.output());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionOutput_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionOutput_Args::CopyFrom(const AST_UpdateFunctionOutput_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionOutput_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_output()) {
    if (!this->output().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_UpdateFunctionOutput_Args::Swap(AST_UpdateFunctionOutput_Args* other) {
  if (other != this) {
    std::swap(output_, other->output_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionOutput_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionOutput_Args_descriptor_;
  metadata.reflection = AST_UpdateFunctionOutput_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_UpdateFunctionOutput_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_UpdateFunctionOutput_Result >, 11, false >
  AST_UpdateFunctionOutput_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_UpdateFunctionOutput_Result::default_instance());
AST_UpdateFunctionOutput_Result::AST_UpdateFunctionOutput_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionOutput_Result::InitAsDefaultInstance() {
}

AST_UpdateFunctionOutput_Result::AST_UpdateFunctionOutput_Result(const AST_UpdateFunctionOutput_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionOutput_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionOutput_Result::~AST_UpdateFunctionOutput_Result() {
  SharedDtor();
}

void AST_UpdateFunctionOutput_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateFunctionOutput_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionOutput_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionOutput_Result_descriptor_;
}

const AST_UpdateFunctionOutput_Result& AST_UpdateFunctionOutput_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionOutput_Result* AST_UpdateFunctionOutput_Result::default_instance_ = NULL;

AST_UpdateFunctionOutput_Result* AST_UpdateFunctionOutput_Result::New() const {
  return new AST_UpdateFunctionOutput_Result;
}

void AST_UpdateFunctionOutput_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionOutput_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionOutput_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionOutput_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionOutput_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionOutput_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionOutput_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionOutput_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionOutput_Result::MergeFrom(const AST_UpdateFunctionOutput_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionOutput_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionOutput_Result::CopyFrom(const AST_UpdateFunctionOutput_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionOutput_Result::IsInitialized() const {

  return true;
}

void AST_UpdateFunctionOutput_Result::Swap(AST_UpdateFunctionOutput_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionOutput_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionOutput_Result_descriptor_;
  metadata.reflection = AST_UpdateFunctionOutput_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_UpdateFunctionOutput::AST_UpdateFunctionOutput()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_UpdateFunctionOutput::InitAsDefaultInstance() {
}

AST_UpdateFunctionOutput::AST_UpdateFunctionOutput(const AST_UpdateFunctionOutput& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_UpdateFunctionOutput::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_UpdateFunctionOutput::~AST_UpdateFunctionOutput() {
  SharedDtor();
}

void AST_UpdateFunctionOutput::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_UpdateFunctionOutput::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_UpdateFunctionOutput::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_UpdateFunctionOutput_descriptor_;
}

const AST_UpdateFunctionOutput& AST_UpdateFunctionOutput::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_UpdateFunctionOutput* AST_UpdateFunctionOutput::default_instance_ = NULL;

AST_UpdateFunctionOutput* AST_UpdateFunctionOutput::New() const {
  return new AST_UpdateFunctionOutput;
}

void AST_UpdateFunctionOutput::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_UpdateFunctionOutput::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_UpdateFunctionOutput::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_UpdateFunctionOutput::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_UpdateFunctionOutput::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_UpdateFunctionOutput::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_UpdateFunctionOutput* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_UpdateFunctionOutput*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_UpdateFunctionOutput::MergeFrom(const AST_UpdateFunctionOutput& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_UpdateFunctionOutput::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_UpdateFunctionOutput::CopyFrom(const AST_UpdateFunctionOutput& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_UpdateFunctionOutput::IsInitialized() const {

  return true;
}

void AST_UpdateFunctionOutput::Swap(AST_UpdateFunctionOutput* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_UpdateFunctionOutput::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_UpdateFunctionOutput_descriptor_;
  metadata.reflection = AST_UpdateFunctionOutput_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_Remove_Args::kBcFieldNumber;
const int AST_Remove_Args::kLibraryIDFieldNumber;
const int AST_Remove_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_Remove_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_Remove_Args >, 11, false >
  AST_Remove_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_Remove_Args::default_instance());
AST_Remove_Args::AST_Remove_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_Remove_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_Remove_Args::AST_Remove_Args(const AST_Remove_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_Remove_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_Remove_Args::~AST_Remove_Args() {
  SharedDtor();
}

void AST_Remove_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void AST_Remove_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_Remove_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_Remove_Args_descriptor_;
}

const AST_Remove_Args& AST_Remove_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_Remove_Args* AST_Remove_Args::default_instance_ = NULL;

AST_Remove_Args* AST_Remove_Args::New() const {
  return new AST_Remove_Args;
}

void AST_Remove_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_Remove_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.crumb.Breadcrumbs bc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_Remove_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bc(), output);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->libraryid(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_Remove_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bc(), target);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->libraryid(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_Remove_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 1;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 2;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_Remove_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_Remove_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_Remove_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_Remove_Args::MergeFrom(const AST_Remove_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_Remove_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_Remove_Args::CopyFrom(const AST_Remove_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_Remove_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void AST_Remove_Args::Swap(AST_Remove_Args* other) {
  if (other != this) {
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_Remove_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_Remove_Args_descriptor_;
  metadata.reflection = AST_Remove_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_Remove_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_Remove_Result >, 11, false >
  AST_Remove_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_Remove_Result::default_instance());
AST_Remove_Result::AST_Remove_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_Remove_Result::InitAsDefaultInstance() {
}

AST_Remove_Result::AST_Remove_Result(const AST_Remove_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_Remove_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_Remove_Result::~AST_Remove_Result() {
  SharedDtor();
}

void AST_Remove_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_Remove_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_Remove_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_Remove_Result_descriptor_;
}

const AST_Remove_Result& AST_Remove_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_Remove_Result* AST_Remove_Result::default_instance_ = NULL;

AST_Remove_Result* AST_Remove_Result::New() const {
  return new AST_Remove_Result;
}

void AST_Remove_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_Remove_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_Remove_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_Remove_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_Remove_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_Remove_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_Remove_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_Remove_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_Remove_Result::MergeFrom(const AST_Remove_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_Remove_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_Remove_Result::CopyFrom(const AST_Remove_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_Remove_Result::IsInitialized() const {

  return true;
}

void AST_Remove_Result::Swap(AST_Remove_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_Remove_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_Remove_Result_descriptor_;
  metadata.reflection = AST_Remove_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_Remove::AST_Remove()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_Remove::InitAsDefaultInstance() {
}

AST_Remove::AST_Remove(const AST_Remove& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_Remove::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_Remove::~AST_Remove() {
  SharedDtor();
}

void AST_Remove::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_Remove::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_Remove::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_Remove_descriptor_;
}

const AST_Remove& AST_Remove::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_Remove* AST_Remove::default_instance_ = NULL;

AST_Remove* AST_Remove::New() const {
  return new AST_Remove;
}

void AST_Remove::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_Remove::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_Remove::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_Remove::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_Remove::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_Remove::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_Remove* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_Remove*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_Remove::MergeFrom(const AST_Remove& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_Remove::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_Remove::CopyFrom(const AST_Remove& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_Remove::IsInitialized() const {

  return true;
}

void AST_Remove::Swap(AST_Remove* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_Remove::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_Remove_descriptor_;
  metadata.reflection = AST_Remove_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_ResolveDefinition_Args::kNameFieldNumber;
const int AST_ResolveDefinition_Args::kParentbcFieldNumber;
const int AST_ResolveDefinition_Args::kLibraryIDFieldNumber;
const int AST_ResolveDefinition_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_ResolveDefinition_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_ResolveDefinition_Args >, 11, false >
  AST_ResolveDefinition_Args::req(kReqFieldNumber, ::generated::proto::batch::AST_ResolveDefinition_Args::default_instance());
AST_ResolveDefinition_Args::AST_ResolveDefinition_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_ResolveDefinition_Args::InitAsDefaultInstance() {
  parentbc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

AST_ResolveDefinition_Args::AST_ResolveDefinition_Args(const AST_ResolveDefinition_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_ResolveDefinition_Args::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  parentbc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_ResolveDefinition_Args::~AST_ResolveDefinition_Args() {
  SharedDtor();
}

void AST_ResolveDefinition_Args::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (this != default_instance_) {
    delete parentbc_;
  }
}

void AST_ResolveDefinition_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_ResolveDefinition_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_ResolveDefinition_Args_descriptor_;
}

const AST_ResolveDefinition_Args& AST_ResolveDefinition_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_ResolveDefinition_Args* AST_ResolveDefinition_Args::default_instance_ = NULL;

AST_ResolveDefinition_Args* AST_ResolveDefinition_Args::New() const {
  return new AST_ResolveDefinition_Args;
}

void AST_ResolveDefinition_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_parentbc()) {
      if (parentbc_ != NULL) parentbc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_ResolveDefinition_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_parentbc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_parentbc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_parentbc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_ResolveDefinition_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->parentbc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_ResolveDefinition_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
  if (has_parentbc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->parentbc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_ResolveDefinition_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required .generated.proto.crumb.Breadcrumbs parentbc = 2;
    if (has_parentbc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->parentbc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_ResolveDefinition_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_ResolveDefinition_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_ResolveDefinition_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_ResolveDefinition_Args::MergeFrom(const AST_ResolveDefinition_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_parentbc()) {
      mutable_parentbc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.parentbc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_ResolveDefinition_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_ResolveDefinition_Args::CopyFrom(const AST_ResolveDefinition_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_ResolveDefinition_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_parentbc()) {
    if (!this->parentbc().IsInitialized()) return false;
  }
  return true;
}

void AST_ResolveDefinition_Args::Swap(AST_ResolveDefinition_Args* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(parentbc_, other->parentbc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_ResolveDefinition_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_ResolveDefinition_Args_descriptor_;
  metadata.reflection = AST_ResolveDefinition_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int AST_ResolveDefinition_Result::kAstptrFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int AST_ResolveDefinition_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::AST_ResolveDefinition_Result >, 11, false >
  AST_ResolveDefinition_Result::rsp(kRspFieldNumber, ::generated::proto::batch::AST_ResolveDefinition_Result::default_instance());
AST_ResolveDefinition_Result::AST_ResolveDefinition_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_ResolveDefinition_Result::InitAsDefaultInstance() {
}

AST_ResolveDefinition_Result::AST_ResolveDefinition_Result(const AST_ResolveDefinition_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_ResolveDefinition_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_ResolveDefinition_Result::~AST_ResolveDefinition_Result() {
  SharedDtor();
}

void AST_ResolveDefinition_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_ResolveDefinition_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_ResolveDefinition_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_ResolveDefinition_Result_descriptor_;
}

const AST_ResolveDefinition_Result& AST_ResolveDefinition_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_ResolveDefinition_Result* AST_ResolveDefinition_Result::default_instance_ = NULL;

AST_ResolveDefinition_Result* AST_ResolveDefinition_Result::New() const {
  return new AST_ResolveDefinition_Result;
}

void AST_ResolveDefinition_Result::Clear() {
  astptr_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_ResolveDefinition_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.crumb.ASTPtr astptr = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_astptr:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_astptr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_astptr;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void AST_ResolveDefinition_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.crumb.ASTPtr astptr = 1;
  for (int i = 0; i < this->astptr_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->astptr(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_ResolveDefinition_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.crumb.ASTPtr astptr = 1;
  for (int i = 0; i < this->astptr_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->astptr(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_ResolveDefinition_Result::ByteSize() const {
  int total_size = 0;

  // repeated .generated.proto.crumb.ASTPtr astptr = 1;
  total_size += 1 * this->astptr_size();
  for (int i = 0; i < this->astptr_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->astptr(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_ResolveDefinition_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_ResolveDefinition_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_ResolveDefinition_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_ResolveDefinition_Result::MergeFrom(const AST_ResolveDefinition_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  astptr_.MergeFrom(from.astptr_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_ResolveDefinition_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_ResolveDefinition_Result::CopyFrom(const AST_ResolveDefinition_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_ResolveDefinition_Result::IsInitialized() const {

  for (int i = 0; i < astptr_size(); i++) {
    if (!this->astptr(i).IsInitialized()) return false;
  }
  return true;
}

void AST_ResolveDefinition_Result::Swap(AST_ResolveDefinition_Result* other) {
  if (other != this) {
    astptr_.Swap(&other->astptr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_ResolveDefinition_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_ResolveDefinition_Result_descriptor_;
  metadata.reflection = AST_ResolveDefinition_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST_ResolveDefinition::AST_ResolveDefinition()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST_ResolveDefinition::InitAsDefaultInstance() {
}

AST_ResolveDefinition::AST_ResolveDefinition(const AST_ResolveDefinition& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST_ResolveDefinition::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST_ResolveDefinition::~AST_ResolveDefinition() {
  SharedDtor();
}

void AST_ResolveDefinition::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST_ResolveDefinition::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST_ResolveDefinition::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_ResolveDefinition_descriptor_;
}

const AST_ResolveDefinition& AST_ResolveDefinition::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST_ResolveDefinition* AST_ResolveDefinition::default_instance_ = NULL;

AST_ResolveDefinition* AST_ResolveDefinition::New() const {
  return new AST_ResolveDefinition;
}

void AST_ResolveDefinition::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST_ResolveDefinition::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST_ResolveDefinition::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST_ResolveDefinition::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST_ResolveDefinition::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST_ResolveDefinition::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST_ResolveDefinition* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST_ResolveDefinition*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST_ResolveDefinition::MergeFrom(const AST_ResolveDefinition& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST_ResolveDefinition::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST_ResolveDefinition::CopyFrom(const AST_ResolveDefinition& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST_ResolveDefinition::IsInitialized() const {

  return true;
}

void AST_ResolveDefinition::Swap(AST_ResolveDefinition* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST_ResolveDefinition::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_ResolveDefinition_descriptor_;
  metadata.reflection = AST_ResolveDefinition_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

AST::AST()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void AST::InitAsDefaultInstance() {
}

AST::AST(const AST& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void AST::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

AST::~AST() {
  SharedDtor();
}

void AST::SharedDtor() {
  if (this != default_instance_) {
  }
}

void AST::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* AST::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return AST_descriptor_;
}

const AST& AST::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

AST* AST::default_instance_ = NULL;

AST* AST::New() const {
  return new AST;
}

void AST::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool AST::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void AST::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* AST::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int AST::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void AST::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const AST* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const AST*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void AST::MergeFrom(const AST& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void AST::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void AST::CopyFrom(const AST& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool AST::IsInitialized() const {

  return true;
}

void AST::Swap(AST* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata AST::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = AST_descriptor_;
  metadata.reflection = AST_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int FileSystem_LS_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_LS_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_LS_Args >, 11, false >
  FileSystem_LS_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_LS_Args::default_instance());
FileSystem_LS_Args::FileSystem_LS_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_LS_Args::InitAsDefaultInstance() {
}

FileSystem_LS_Args::FileSystem_LS_Args(const FileSystem_LS_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_LS_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_LS_Args::~FileSystem_LS_Args() {
  SharedDtor();
}

void FileSystem_LS_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_LS_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_LS_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_LS_Args_descriptor_;
}

const FileSystem_LS_Args& FileSystem_LS_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_LS_Args* FileSystem_LS_Args::default_instance_ = NULL;

FileSystem_LS_Args* FileSystem_LS_Args::New() const {
  return new FileSystem_LS_Args;
}

void FileSystem_LS_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_LS_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_LS_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_LS_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_LS_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_LS_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_LS_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_LS_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_LS_Args::MergeFrom(const FileSystem_LS_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_LS_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_LS_Args::CopyFrom(const FileSystem_LS_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_LS_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FileSystem_LS_Args::Swap(FileSystem_LS_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_LS_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_LS_Args_descriptor_;
  metadata.reflection = FileSystem_LS_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_LS_Result::kItemsFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_LS_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_LS_Result >, 11, false >
  FileSystem_LS_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_LS_Result::default_instance());
FileSystem_LS_Result::FileSystem_LS_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_LS_Result::InitAsDefaultInstance() {
}

FileSystem_LS_Result::FileSystem_LS_Result(const FileSystem_LS_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_LS_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_LS_Result::~FileSystem_LS_Result() {
  SharedDtor();
}

void FileSystem_LS_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_LS_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_LS_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_LS_Result_descriptor_;
}

const FileSystem_LS_Result& FileSystem_LS_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_LS_Result* FileSystem_LS_Result::default_instance_ = NULL;

FileSystem_LS_Result* FileSystem_LS_Result::New() const {
  return new FileSystem_LS_Result;
}

void FileSystem_LS_Result::Clear() {
  items_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_LS_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.filesystem.Item items = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_items:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_items()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_items;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_LS_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.filesystem.Item items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->items(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_LS_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.filesystem.Item items = 1;
  for (int i = 0; i < this->items_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->items(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_LS_Result::ByteSize() const {
  int total_size = 0;

  // repeated .generated.proto.filesystem.Item items = 1;
  total_size += 1 * this->items_size();
  for (int i = 0; i < this->items_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->items(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_LS_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_LS_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_LS_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_LS_Result::MergeFrom(const FileSystem_LS_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  items_.MergeFrom(from.items_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_LS_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_LS_Result::CopyFrom(const FileSystem_LS_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_LS_Result::IsInitialized() const {

  return true;
}

void FileSystem_LS_Result::Swap(FileSystem_LS_Result* other) {
  if (other != this) {
    items_.Swap(&other->items_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_LS_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_LS_Result_descriptor_;
  metadata.reflection = FileSystem_LS_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_LS::FileSystem_LS()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_LS::InitAsDefaultInstance() {
}

FileSystem_LS::FileSystem_LS(const FileSystem_LS& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_LS::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_LS::~FileSystem_LS() {
  SharedDtor();
}

void FileSystem_LS::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_LS::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_LS::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_LS_descriptor_;
}

const FileSystem_LS& FileSystem_LS::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_LS* FileSystem_LS::default_instance_ = NULL;

FileSystem_LS* FileSystem_LS::New() const {
  return new FileSystem_LS;
}

void FileSystem_LS::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_LS::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_LS::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_LS::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_LS::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_LS::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_LS* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_LS*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_LS::MergeFrom(const FileSystem_LS& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_LS::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_LS::CopyFrom(const FileSystem_LS& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_LS::IsInitialized() const {

  return true;
}

void FileSystem_LS::Swap(FileSystem_LS* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_LS::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_LS_descriptor_;
  metadata.reflection = FileSystem_LS_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_Stat_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_Stat_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_Stat_Args >, 11, false >
  FileSystem_Stat_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_Stat_Args::default_instance());
FileSystem_Stat_Args::FileSystem_Stat_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Stat_Args::InitAsDefaultInstance() {
}

FileSystem_Stat_Args::FileSystem_Stat_Args(const FileSystem_Stat_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Stat_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Stat_Args::~FileSystem_Stat_Args() {
  SharedDtor();
}

void FileSystem_Stat_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_Stat_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Stat_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Stat_Args_descriptor_;
}

const FileSystem_Stat_Args& FileSystem_Stat_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_Stat_Args* FileSystem_Stat_Args::default_instance_ = NULL;

FileSystem_Stat_Args* FileSystem_Stat_Args::New() const {
  return new FileSystem_Stat_Args;
}

void FileSystem_Stat_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Stat_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_Stat_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Stat_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Stat_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Stat_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Stat_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Stat_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Stat_Args::MergeFrom(const FileSystem_Stat_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Stat_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Stat_Args::CopyFrom(const FileSystem_Stat_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Stat_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FileSystem_Stat_Args::Swap(FileSystem_Stat_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Stat_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Stat_Args_descriptor_;
  metadata.reflection = FileSystem_Stat_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_Stat_Result::kItemFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_Stat_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_Stat_Result >, 11, false >
  FileSystem_Stat_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_Stat_Result::default_instance());
FileSystem_Stat_Result::FileSystem_Stat_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Stat_Result::InitAsDefaultInstance() {
  item_ = const_cast< ::generated::proto::filesystem::Item*>(&::generated::proto::filesystem::Item::default_instance());
}

FileSystem_Stat_Result::FileSystem_Stat_Result(const FileSystem_Stat_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Stat_Result::SharedCtor() {
  _cached_size_ = 0;
  item_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Stat_Result::~FileSystem_Stat_Result() {
  SharedDtor();
}

void FileSystem_Stat_Result::SharedDtor() {
  if (this != default_instance_) {
    delete item_;
  }
}

void FileSystem_Stat_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Stat_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Stat_Result_descriptor_;
}

const FileSystem_Stat_Result& FileSystem_Stat_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_Stat_Result* FileSystem_Stat_Result::default_instance_ = NULL;

FileSystem_Stat_Result* FileSystem_Stat_Result::New() const {
  return new FileSystem_Stat_Result;
}

void FileSystem_Stat_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_item()) {
      if (item_ != NULL) item_->::generated::proto::filesystem::Item::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Stat_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.filesystem.Item item = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_item()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_Stat_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.filesystem.Item item = 1;
  if (has_item()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->item(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Stat_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.filesystem.Item item = 1;
  if (has_item()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->item(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Stat_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.filesystem.Item item = 1;
    if (has_item()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->item());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Stat_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Stat_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Stat_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Stat_Result::MergeFrom(const FileSystem_Stat_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_item()) {
      mutable_item()->::generated::proto::filesystem::Item::MergeFrom(from.item());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Stat_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Stat_Result::CopyFrom(const FileSystem_Stat_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Stat_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FileSystem_Stat_Result::Swap(FileSystem_Stat_Result* other) {
  if (other != this) {
    std::swap(item_, other->item_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Stat_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Stat_Result_descriptor_;
  metadata.reflection = FileSystem_Stat_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_Stat::FileSystem_Stat()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Stat::InitAsDefaultInstance() {
}

FileSystem_Stat::FileSystem_Stat(const FileSystem_Stat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Stat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Stat::~FileSystem_Stat() {
  SharedDtor();
}

void FileSystem_Stat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_Stat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Stat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Stat_descriptor_;
}

const FileSystem_Stat& FileSystem_Stat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_Stat* FileSystem_Stat::default_instance_ = NULL;

FileSystem_Stat* FileSystem_Stat::New() const {
  return new FileSystem_Stat;
}

void FileSystem_Stat::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Stat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_Stat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Stat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Stat::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Stat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Stat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Stat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Stat::MergeFrom(const FileSystem_Stat& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Stat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Stat::CopyFrom(const FileSystem_Stat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Stat::IsInitialized() const {

  return true;
}

void FileSystem_Stat::Swap(FileSystem_Stat* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Stat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Stat_descriptor_;
  metadata.reflection = FileSystem_Stat_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_MkDir_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_MkDir_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_MkDir_Args >, 11, false >
  FileSystem_MkDir_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_MkDir_Args::default_instance());
FileSystem_MkDir_Args::FileSystem_MkDir_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MkDir_Args::InitAsDefaultInstance() {
}

FileSystem_MkDir_Args::FileSystem_MkDir_Args(const FileSystem_MkDir_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MkDir_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MkDir_Args::~FileSystem_MkDir_Args() {
  SharedDtor();
}

void FileSystem_MkDir_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_MkDir_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MkDir_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MkDir_Args_descriptor_;
}

const FileSystem_MkDir_Args& FileSystem_MkDir_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_MkDir_Args* FileSystem_MkDir_Args::default_instance_ = NULL;

FileSystem_MkDir_Args* FileSystem_MkDir_Args::New() const {
  return new FileSystem_MkDir_Args;
}

void FileSystem_MkDir_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MkDir_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_MkDir_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MkDir_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MkDir_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MkDir_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MkDir_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MkDir_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MkDir_Args::MergeFrom(const FileSystem_MkDir_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MkDir_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MkDir_Args::CopyFrom(const FileSystem_MkDir_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MkDir_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FileSystem_MkDir_Args::Swap(FileSystem_MkDir_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MkDir_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MkDir_Args_descriptor_;
  metadata.reflection = FileSystem_MkDir_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_MkDir_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_MkDir_Result >, 11, false >
  FileSystem_MkDir_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_MkDir_Result::default_instance());
FileSystem_MkDir_Result::FileSystem_MkDir_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MkDir_Result::InitAsDefaultInstance() {
}

FileSystem_MkDir_Result::FileSystem_MkDir_Result(const FileSystem_MkDir_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MkDir_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MkDir_Result::~FileSystem_MkDir_Result() {
  SharedDtor();
}

void FileSystem_MkDir_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_MkDir_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MkDir_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MkDir_Result_descriptor_;
}

const FileSystem_MkDir_Result& FileSystem_MkDir_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_MkDir_Result* FileSystem_MkDir_Result::default_instance_ = NULL;

FileSystem_MkDir_Result* FileSystem_MkDir_Result::New() const {
  return new FileSystem_MkDir_Result;
}

void FileSystem_MkDir_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MkDir_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_MkDir_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MkDir_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MkDir_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MkDir_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MkDir_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MkDir_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MkDir_Result::MergeFrom(const FileSystem_MkDir_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MkDir_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MkDir_Result::CopyFrom(const FileSystem_MkDir_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MkDir_Result::IsInitialized() const {

  return true;
}

void FileSystem_MkDir_Result::Swap(FileSystem_MkDir_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MkDir_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MkDir_Result_descriptor_;
  metadata.reflection = FileSystem_MkDir_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_MkDir::FileSystem_MkDir()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MkDir::InitAsDefaultInstance() {
}

FileSystem_MkDir::FileSystem_MkDir(const FileSystem_MkDir& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MkDir::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MkDir::~FileSystem_MkDir() {
  SharedDtor();
}

void FileSystem_MkDir::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_MkDir::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MkDir::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MkDir_descriptor_;
}

const FileSystem_MkDir& FileSystem_MkDir::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_MkDir* FileSystem_MkDir::default_instance_ = NULL;

FileSystem_MkDir* FileSystem_MkDir::New() const {
  return new FileSystem_MkDir;
}

void FileSystem_MkDir::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MkDir::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_MkDir::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MkDir::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MkDir::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MkDir::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MkDir* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MkDir*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MkDir::MergeFrom(const FileSystem_MkDir& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MkDir::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MkDir::CopyFrom(const FileSystem_MkDir& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MkDir::IsInitialized() const {

  return true;
}

void FileSystem_MkDir::Swap(FileSystem_MkDir* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MkDir::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MkDir_descriptor_;
  metadata.reflection = FileSystem_MkDir_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_Touch_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_Touch_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_Touch_Args >, 11, false >
  FileSystem_Touch_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_Touch_Args::default_instance());
FileSystem_Touch_Args::FileSystem_Touch_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Touch_Args::InitAsDefaultInstance() {
}

FileSystem_Touch_Args::FileSystem_Touch_Args(const FileSystem_Touch_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Touch_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Touch_Args::~FileSystem_Touch_Args() {
  SharedDtor();
}

void FileSystem_Touch_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_Touch_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Touch_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Touch_Args_descriptor_;
}

const FileSystem_Touch_Args& FileSystem_Touch_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_Touch_Args* FileSystem_Touch_Args::default_instance_ = NULL;

FileSystem_Touch_Args* FileSystem_Touch_Args::New() const {
  return new FileSystem_Touch_Args;
}

void FileSystem_Touch_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Touch_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_Touch_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Touch_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Touch_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Touch_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Touch_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Touch_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Touch_Args::MergeFrom(const FileSystem_Touch_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Touch_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Touch_Args::CopyFrom(const FileSystem_Touch_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Touch_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FileSystem_Touch_Args::Swap(FileSystem_Touch_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Touch_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Touch_Args_descriptor_;
  metadata.reflection = FileSystem_Touch_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_Touch_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_Touch_Result >, 11, false >
  FileSystem_Touch_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_Touch_Result::default_instance());
FileSystem_Touch_Result::FileSystem_Touch_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Touch_Result::InitAsDefaultInstance() {
}

FileSystem_Touch_Result::FileSystem_Touch_Result(const FileSystem_Touch_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Touch_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Touch_Result::~FileSystem_Touch_Result() {
  SharedDtor();
}

void FileSystem_Touch_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_Touch_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Touch_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Touch_Result_descriptor_;
}

const FileSystem_Touch_Result& FileSystem_Touch_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_Touch_Result* FileSystem_Touch_Result::default_instance_ = NULL;

FileSystem_Touch_Result* FileSystem_Touch_Result::New() const {
  return new FileSystem_Touch_Result;
}

void FileSystem_Touch_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Touch_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_Touch_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Touch_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Touch_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Touch_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Touch_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Touch_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Touch_Result::MergeFrom(const FileSystem_Touch_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Touch_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Touch_Result::CopyFrom(const FileSystem_Touch_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Touch_Result::IsInitialized() const {

  return true;
}

void FileSystem_Touch_Result::Swap(FileSystem_Touch_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Touch_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Touch_Result_descriptor_;
  metadata.reflection = FileSystem_Touch_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_Touch::FileSystem_Touch()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_Touch::InitAsDefaultInstance() {
}

FileSystem_Touch::FileSystem_Touch(const FileSystem_Touch& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_Touch::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_Touch::~FileSystem_Touch() {
  SharedDtor();
}

void FileSystem_Touch::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_Touch::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_Touch::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_Touch_descriptor_;
}

const FileSystem_Touch& FileSystem_Touch::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_Touch* FileSystem_Touch::default_instance_ = NULL;

FileSystem_Touch* FileSystem_Touch::New() const {
  return new FileSystem_Touch;
}

void FileSystem_Touch::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_Touch::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_Touch::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_Touch::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_Touch::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_Touch::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_Touch* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_Touch*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_Touch::MergeFrom(const FileSystem_Touch& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_Touch::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_Touch::CopyFrom(const FileSystem_Touch& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_Touch::IsInitialized() const {

  return true;
}

void FileSystem_Touch::Swap(FileSystem_Touch* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_Touch::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_Touch_descriptor_;
  metadata.reflection = FileSystem_Touch_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_RM_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_RM_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_RM_Args >, 11, false >
  FileSystem_RM_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_RM_Args::default_instance());
FileSystem_RM_Args::FileSystem_RM_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_RM_Args::InitAsDefaultInstance() {
}

FileSystem_RM_Args::FileSystem_RM_Args(const FileSystem_RM_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_RM_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_RM_Args::~FileSystem_RM_Args() {
  SharedDtor();
}

void FileSystem_RM_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_RM_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_RM_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_RM_Args_descriptor_;
}

const FileSystem_RM_Args& FileSystem_RM_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_RM_Args* FileSystem_RM_Args::default_instance_ = NULL;

FileSystem_RM_Args* FileSystem_RM_Args::New() const {
  return new FileSystem_RM_Args;
}

void FileSystem_RM_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_RM_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_RM_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_RM_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_RM_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_RM_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_RM_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_RM_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_RM_Args::MergeFrom(const FileSystem_RM_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_RM_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_RM_Args::CopyFrom(const FileSystem_RM_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_RM_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void FileSystem_RM_Args::Swap(FileSystem_RM_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_RM_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_RM_Args_descriptor_;
  metadata.reflection = FileSystem_RM_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_RM_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_RM_Result >, 11, false >
  FileSystem_RM_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_RM_Result::default_instance());
FileSystem_RM_Result::FileSystem_RM_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_RM_Result::InitAsDefaultInstance() {
}

FileSystem_RM_Result::FileSystem_RM_Result(const FileSystem_RM_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_RM_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_RM_Result::~FileSystem_RM_Result() {
  SharedDtor();
}

void FileSystem_RM_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_RM_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_RM_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_RM_Result_descriptor_;
}

const FileSystem_RM_Result& FileSystem_RM_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_RM_Result* FileSystem_RM_Result::default_instance_ = NULL;

FileSystem_RM_Result* FileSystem_RM_Result::New() const {
  return new FileSystem_RM_Result;
}

void FileSystem_RM_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_RM_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_RM_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_RM_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_RM_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_RM_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_RM_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_RM_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_RM_Result::MergeFrom(const FileSystem_RM_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_RM_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_RM_Result::CopyFrom(const FileSystem_RM_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_RM_Result::IsInitialized() const {

  return true;
}

void FileSystem_RM_Result::Swap(FileSystem_RM_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_RM_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_RM_Result_descriptor_;
  metadata.reflection = FileSystem_RM_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_RM::FileSystem_RM()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_RM::InitAsDefaultInstance() {
}

FileSystem_RM::FileSystem_RM(const FileSystem_RM& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_RM::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_RM::~FileSystem_RM() {
  SharedDtor();
}

void FileSystem_RM::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_RM::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_RM::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_RM_descriptor_;
}

const FileSystem_RM& FileSystem_RM::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_RM* FileSystem_RM::default_instance_ = NULL;

FileSystem_RM* FileSystem_RM::New() const {
  return new FileSystem_RM;
}

void FileSystem_RM::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_RM::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_RM::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_RM::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_RM::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_RM::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_RM* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_RM*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_RM::MergeFrom(const FileSystem_RM& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_RM::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_RM::CopyFrom(const FileSystem_RM& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_RM::IsInitialized() const {

  return true;
}

void FileSystem_RM::Swap(FileSystem_RM* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_RM::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_RM_descriptor_;
  metadata.reflection = FileSystem_RM_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_CP_Args::kSrcFieldNumber;
const int FileSystem_CP_Args::kDstFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_CP_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_CP_Args >, 11, false >
  FileSystem_CP_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_CP_Args::default_instance());
FileSystem_CP_Args::FileSystem_CP_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_CP_Args::InitAsDefaultInstance() {
}

FileSystem_CP_Args::FileSystem_CP_Args(const FileSystem_CP_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_CP_Args::SharedCtor() {
  _cached_size_ = 0;
  src_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_CP_Args::~FileSystem_CP_Args() {
  SharedDtor();
}

void FileSystem_CP_Args::SharedDtor() {
  if (src_ != &::google::protobuf::internal::kEmptyString) {
    delete src_;
  }
  if (dst_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_CP_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_CP_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_CP_Args_descriptor_;
}

const FileSystem_CP_Args& FileSystem_CP_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_CP_Args* FileSystem_CP_Args::default_instance_ = NULL;

FileSystem_CP_Args* FileSystem_CP_Args::New() const {
  return new FileSystem_CP_Args;
}

void FileSystem_CP_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_src()) {
      if (src_ != &::google::protobuf::internal::kEmptyString) {
        src_->clear();
      }
    }
    if (has_dst()) {
      if (dst_ != &::google::protobuf::internal::kEmptyString) {
        dst_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_CP_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dst;
        break;
      }

      // required string dst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dst().data(), this->dst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_CP_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->src(), output);
  }

  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->dst(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_CP_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dst(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_CP_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string src = 1;
    if (has_src()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src());
    }

    // required string dst = 2;
    if (has_dst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dst());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_CP_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_CP_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_CP_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_CP_Args::MergeFrom(const FileSystem_CP_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_src(from.src());
    }
    if (from.has_dst()) {
      set_dst(from.dst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_CP_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_CP_Args::CopyFrom(const FileSystem_CP_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_CP_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void FileSystem_CP_Args::Swap(FileSystem_CP_Args* other) {
  if (other != this) {
    std::swap(src_, other->src_);
    std::swap(dst_, other->dst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_CP_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_CP_Args_descriptor_;
  metadata.reflection = FileSystem_CP_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_CP_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_CP_Result >, 11, false >
  FileSystem_CP_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_CP_Result::default_instance());
FileSystem_CP_Result::FileSystem_CP_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_CP_Result::InitAsDefaultInstance() {
}

FileSystem_CP_Result::FileSystem_CP_Result(const FileSystem_CP_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_CP_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_CP_Result::~FileSystem_CP_Result() {
  SharedDtor();
}

void FileSystem_CP_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_CP_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_CP_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_CP_Result_descriptor_;
}

const FileSystem_CP_Result& FileSystem_CP_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_CP_Result* FileSystem_CP_Result::default_instance_ = NULL;

FileSystem_CP_Result* FileSystem_CP_Result::New() const {
  return new FileSystem_CP_Result;
}

void FileSystem_CP_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_CP_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_CP_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_CP_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_CP_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_CP_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_CP_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_CP_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_CP_Result::MergeFrom(const FileSystem_CP_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_CP_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_CP_Result::CopyFrom(const FileSystem_CP_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_CP_Result::IsInitialized() const {

  return true;
}

void FileSystem_CP_Result::Swap(FileSystem_CP_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_CP_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_CP_Result_descriptor_;
  metadata.reflection = FileSystem_CP_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_CP::FileSystem_CP()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_CP::InitAsDefaultInstance() {
}

FileSystem_CP::FileSystem_CP(const FileSystem_CP& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_CP::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_CP::~FileSystem_CP() {
  SharedDtor();
}

void FileSystem_CP::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_CP::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_CP::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_CP_descriptor_;
}

const FileSystem_CP& FileSystem_CP::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_CP* FileSystem_CP::default_instance_ = NULL;

FileSystem_CP* FileSystem_CP::New() const {
  return new FileSystem_CP;
}

void FileSystem_CP::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_CP::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_CP::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_CP::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_CP::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_CP::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_CP* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_CP*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_CP::MergeFrom(const FileSystem_CP& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_CP::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_CP::CopyFrom(const FileSystem_CP& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_CP::IsInitialized() const {

  return true;
}

void FileSystem_CP::Swap(FileSystem_CP* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_CP::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_CP_descriptor_;
  metadata.reflection = FileSystem_CP_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int FileSystem_MV_Args::kSrcFieldNumber;
const int FileSystem_MV_Args::kDstFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_MV_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_MV_Args >, 11, false >
  FileSystem_MV_Args::req(kReqFieldNumber, ::generated::proto::batch::FileSystem_MV_Args::default_instance());
FileSystem_MV_Args::FileSystem_MV_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MV_Args::InitAsDefaultInstance() {
}

FileSystem_MV_Args::FileSystem_MV_Args(const FileSystem_MV_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MV_Args::SharedCtor() {
  _cached_size_ = 0;
  src_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  dst_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MV_Args::~FileSystem_MV_Args() {
  SharedDtor();
}

void FileSystem_MV_Args::SharedDtor() {
  if (src_ != &::google::protobuf::internal::kEmptyString) {
    delete src_;
  }
  if (dst_ != &::google::protobuf::internal::kEmptyString) {
    delete dst_;
  }
  if (this != default_instance_) {
  }
}

void FileSystem_MV_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MV_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MV_Args_descriptor_;
}

const FileSystem_MV_Args& FileSystem_MV_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_MV_Args* FileSystem_MV_Args::default_instance_ = NULL;

FileSystem_MV_Args* FileSystem_MV_Args::New() const {
  return new FileSystem_MV_Args;
}

void FileSystem_MV_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_src()) {
      if (src_ != &::google::protobuf::internal::kEmptyString) {
        src_->clear();
      }
    }
    if (has_dst()) {
      if (dst_ != &::google::protobuf::internal::kEmptyString) {
        dst_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MV_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string src = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_src()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->src().data(), this->src().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_dst;
        break;
      }

      // required string dst = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_dst:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_dst()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->dst().data(), this->dst().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void FileSystem_MV_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->src(), output);
  }

  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->dst(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MV_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string src = 1;
  if (has_src()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->src().data(), this->src().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->src(), target);
  }

  // required string dst = 2;
  if (has_dst()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->dst().data(), this->dst().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->dst(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MV_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string src = 1;
    if (has_src()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->src());
    }

    // required string dst = 2;
    if (has_dst()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->dst());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MV_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MV_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MV_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MV_Args::MergeFrom(const FileSystem_MV_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_src()) {
      set_src(from.src());
    }
    if (from.has_dst()) {
      set_dst(from.dst());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MV_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MV_Args::CopyFrom(const FileSystem_MV_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MV_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void FileSystem_MV_Args::Swap(FileSystem_MV_Args* other) {
  if (other != this) {
    std::swap(src_, other->src_);
    std::swap(dst_, other->dst_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MV_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MV_Args_descriptor_;
  metadata.reflection = FileSystem_MV_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int FileSystem_MV_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::FileSystem_MV_Result >, 11, false >
  FileSystem_MV_Result::rsp(kRspFieldNumber, ::generated::proto::batch::FileSystem_MV_Result::default_instance());
FileSystem_MV_Result::FileSystem_MV_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MV_Result::InitAsDefaultInstance() {
}

FileSystem_MV_Result::FileSystem_MV_Result(const FileSystem_MV_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MV_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MV_Result::~FileSystem_MV_Result() {
  SharedDtor();
}

void FileSystem_MV_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_MV_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MV_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MV_Result_descriptor_;
}

const FileSystem_MV_Result& FileSystem_MV_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_MV_Result* FileSystem_MV_Result::default_instance_ = NULL;

FileSystem_MV_Result* FileSystem_MV_Result::New() const {
  return new FileSystem_MV_Result;
}

void FileSystem_MV_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MV_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_MV_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MV_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MV_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MV_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MV_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MV_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MV_Result::MergeFrom(const FileSystem_MV_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MV_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MV_Result::CopyFrom(const FileSystem_MV_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MV_Result::IsInitialized() const {

  return true;
}

void FileSystem_MV_Result::Swap(FileSystem_MV_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MV_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MV_Result_descriptor_;
  metadata.reflection = FileSystem_MV_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem_MV::FileSystem_MV()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem_MV::InitAsDefaultInstance() {
}

FileSystem_MV::FileSystem_MV(const FileSystem_MV& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem_MV::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem_MV::~FileSystem_MV() {
  SharedDtor();
}

void FileSystem_MV::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem_MV::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem_MV::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_MV_descriptor_;
}

const FileSystem_MV& FileSystem_MV::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem_MV* FileSystem_MV::default_instance_ = NULL;

FileSystem_MV* FileSystem_MV::New() const {
  return new FileSystem_MV;
}

void FileSystem_MV::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem_MV::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem_MV::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem_MV::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem_MV::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem_MV::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem_MV* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem_MV*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem_MV::MergeFrom(const FileSystem_MV& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem_MV::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem_MV::CopyFrom(const FileSystem_MV& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem_MV::IsInitialized() const {

  return true;
}

void FileSystem_MV::Swap(FileSystem_MV* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem_MV::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_MV_descriptor_;
  metadata.reflection = FileSystem_MV_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

FileSystem::FileSystem()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void FileSystem::InitAsDefaultInstance() {
}

FileSystem::FileSystem(const FileSystem& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void FileSystem::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

FileSystem::~FileSystem() {
  SharedDtor();
}

void FileSystem::SharedDtor() {
  if (this != default_instance_) {
  }
}

void FileSystem::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FileSystem::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return FileSystem_descriptor_;
}

const FileSystem& FileSystem::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

FileSystem* FileSystem::default_instance_ = NULL;

FileSystem* FileSystem::New() const {
  return new FileSystem;
}

void FileSystem::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool FileSystem::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void FileSystem::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* FileSystem::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int FileSystem::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void FileSystem::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const FileSystem* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const FileSystem*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void FileSystem::MergeFrom(const FileSystem& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void FileSystem::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void FileSystem::CopyFrom(const FileSystem& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool FileSystem::IsInitialized() const {

  return true;
}

void FileSystem::Swap(FileSystem* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata FileSystem::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = FileSystem_descriptor_;
  metadata.reflection = FileSystem_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Graph_NodesGraph_Args::kBcFieldNumber;
const int Graph_NodesGraph_Args::kLibraryIDFieldNumber;
const int Graph_NodesGraph_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_NodesGraph_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_NodesGraph_Args >, 11, false >
  Graph_NodesGraph_Args::req(kReqFieldNumber, ::generated::proto::batch::Graph_NodesGraph_Args::default_instance());
Graph_NodesGraph_Args::Graph_NodesGraph_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_NodesGraph_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Graph_NodesGraph_Args::Graph_NodesGraph_Args(const Graph_NodesGraph_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_NodesGraph_Args::SharedCtor() {
  _cached_size_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_NodesGraph_Args::~Graph_NodesGraph_Args() {
  SharedDtor();
}

void Graph_NodesGraph_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Graph_NodesGraph_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_NodesGraph_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_NodesGraph_Args_descriptor_;
}

const Graph_NodesGraph_Args& Graph_NodesGraph_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_NodesGraph_Args* Graph_NodesGraph_Args::default_instance_ = NULL;

Graph_NodesGraph_Args* Graph_NodesGraph_Args::New() const {
  return new Graph_NodesGraph_Args;
}

void Graph_NodesGraph_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_NodesGraph_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.crumb.Breadcrumbs bc = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_NodesGraph_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->bc(), output);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->libraryid(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_NodesGraph_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.crumb.Breadcrumbs bc = 1;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->bc(), target);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->libraryid(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_NodesGraph_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.crumb.Breadcrumbs bc = 1;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 2;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_NodesGraph_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_NodesGraph_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_NodesGraph_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_NodesGraph_Args::MergeFrom(const Graph_NodesGraph_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_NodesGraph_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_NodesGraph_Args::CopyFrom(const Graph_NodesGraph_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_NodesGraph_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Graph_NodesGraph_Args::Swap(Graph_NodesGraph_Args* other) {
  if (other != this) {
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_NodesGraph_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_NodesGraph_Args_descriptor_;
  metadata.reflection = Graph_NodesGraph_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_NodesGraph_Result::kGraphFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_NodesGraph_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_NodesGraph_Result >, 11, false >
  Graph_NodesGraph_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Graph_NodesGraph_Result::default_instance());
Graph_NodesGraph_Result::Graph_NodesGraph_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_NodesGraph_Result::InitAsDefaultInstance() {
  graph_ = const_cast< ::generated::proto::graphview::GraphView*>(&::generated::proto::graphview::GraphView::default_instance());
}

Graph_NodesGraph_Result::Graph_NodesGraph_Result(const Graph_NodesGraph_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_NodesGraph_Result::SharedCtor() {
  _cached_size_ = 0;
  graph_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_NodesGraph_Result::~Graph_NodesGraph_Result() {
  SharedDtor();
}

void Graph_NodesGraph_Result::SharedDtor() {
  if (this != default_instance_) {
    delete graph_;
  }
}

void Graph_NodesGraph_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_NodesGraph_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_NodesGraph_Result_descriptor_;
}

const Graph_NodesGraph_Result& Graph_NodesGraph_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_NodesGraph_Result* Graph_NodesGraph_Result::default_instance_ = NULL;

Graph_NodesGraph_Result* Graph_NodesGraph_Result::New() const {
  return new Graph_NodesGraph_Result;
}

void Graph_NodesGraph_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_graph()) {
      if (graph_ != NULL) graph_->::generated::proto::graphview::GraphView::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_NodesGraph_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graphview.GraphView graph = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_graph()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_NodesGraph_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graphview.GraphView graph = 1;
  if (has_graph()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->graph(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_NodesGraph_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graphview.GraphView graph = 1;
  if (has_graph()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->graph(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_NodesGraph_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graphview.GraphView graph = 1;
    if (has_graph()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->graph());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_NodesGraph_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_NodesGraph_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_NodesGraph_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_NodesGraph_Result::MergeFrom(const Graph_NodesGraph_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_graph()) {
      mutable_graph()->::generated::proto::graphview::GraphView::MergeFrom(from.graph());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_NodesGraph_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_NodesGraph_Result::CopyFrom(const Graph_NodesGraph_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_NodesGraph_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_graph()) {
    if (!this->graph().IsInitialized()) return false;
  }
  return true;
}

void Graph_NodesGraph_Result::Swap(Graph_NodesGraph_Result* other) {
  if (other != this) {
    std::swap(graph_, other->graph_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_NodesGraph_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_NodesGraph_Result_descriptor_;
  metadata.reflection = Graph_NodesGraph_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph_NodesGraph::Graph_NodesGraph()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_NodesGraph::InitAsDefaultInstance() {
}

Graph_NodesGraph::Graph_NodesGraph(const Graph_NodesGraph& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_NodesGraph::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_NodesGraph::~Graph_NodesGraph() {
  SharedDtor();
}

void Graph_NodesGraph::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_NodesGraph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_NodesGraph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_NodesGraph_descriptor_;
}

const Graph_NodesGraph& Graph_NodesGraph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_NodesGraph* Graph_NodesGraph::default_instance_ = NULL;

Graph_NodesGraph* Graph_NodesGraph::New() const {
  return new Graph_NodesGraph;
}

void Graph_NodesGraph::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_NodesGraph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_NodesGraph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_NodesGraph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_NodesGraph::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_NodesGraph::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_NodesGraph* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_NodesGraph*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_NodesGraph::MergeFrom(const Graph_NodesGraph& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_NodesGraph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_NodesGraph::CopyFrom(const Graph_NodesGraph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_NodesGraph::IsInitialized() const {

  return true;
}

void Graph_NodesGraph::Swap(Graph_NodesGraph* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_NodesGraph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_NodesGraph_descriptor_;
  metadata.reflection = Graph_NodesGraph_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_NodeByID_Args::kNodeIDFieldNumber;
const int Graph_NodeByID_Args::kBcFieldNumber;
const int Graph_NodeByID_Args::kLibraryIDFieldNumber;
const int Graph_NodeByID_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_NodeByID_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_NodeByID_Args >, 11, false >
  Graph_NodeByID_Args::req(kReqFieldNumber, ::generated::proto::batch::Graph_NodeByID_Args::default_instance());
Graph_NodeByID_Args::Graph_NodeByID_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_NodeByID_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Graph_NodeByID_Args::Graph_NodeByID_Args(const Graph_NodeByID_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_NodeByID_Args::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_NodeByID_Args::~Graph_NodeByID_Args() {
  SharedDtor();
}

void Graph_NodeByID_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Graph_NodeByID_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_NodeByID_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_NodeByID_Args_descriptor_;
}

const Graph_NodeByID_Args& Graph_NodeByID_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_NodeByID_Args* Graph_NodeByID_Args::default_instance_ = NULL;

Graph_NodeByID_Args* Graph_NodeByID_Args::New() const {
  return new Graph_NodeByID_Args;
}

void Graph_NodeByID_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_NodeByID_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_NodeByID_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_NodeByID_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_NodeByID_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_NodeByID_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_NodeByID_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_NodeByID_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_NodeByID_Args::MergeFrom(const Graph_NodeByID_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_NodeByID_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_NodeByID_Args::CopyFrom(const Graph_NodeByID_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_NodeByID_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Graph_NodeByID_Args::Swap(Graph_NodeByID_Args* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_NodeByID_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_NodeByID_Args_descriptor_;
  metadata.reflection = Graph_NodeByID_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_NodeByID_Result::kNodeFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_NodeByID_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_NodeByID_Result >, 11, false >
  Graph_NodeByID_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Graph_NodeByID_Result::default_instance());
Graph_NodeByID_Result::Graph_NodeByID_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_NodeByID_Result::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
}

Graph_NodeByID_Result::Graph_NodeByID_Result(const Graph_NodeByID_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_NodeByID_Result::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_NodeByID_Result::~Graph_NodeByID_Result() {
  SharedDtor();
}

void Graph_NodeByID_Result::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
  }
}

void Graph_NodeByID_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_NodeByID_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_NodeByID_Result_descriptor_;
}

const Graph_NodeByID_Result& Graph_NodeByID_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_NodeByID_Result* Graph_NodeByID_Result::default_instance_ = NULL;

Graph_NodeByID_Result* Graph_NodeByID_Result::New() const {
  return new Graph_NodeByID_Result;
}

void Graph_NodeByID_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_NodeByID_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_NodeByID_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_NodeByID_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_NodeByID_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_NodeByID_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_NodeByID_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_NodeByID_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_NodeByID_Result::MergeFrom(const Graph_NodeByID_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_NodeByID_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_NodeByID_Result::CopyFrom(const Graph_NodeByID_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_NodeByID_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  return true;
}

void Graph_NodeByID_Result::Swap(Graph_NodeByID_Result* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_NodeByID_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_NodeByID_Result_descriptor_;
  metadata.reflection = Graph_NodeByID_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph_NodeByID::Graph_NodeByID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_NodeByID::InitAsDefaultInstance() {
}

Graph_NodeByID::Graph_NodeByID(const Graph_NodeByID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_NodeByID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_NodeByID::~Graph_NodeByID() {
  SharedDtor();
}

void Graph_NodeByID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_NodeByID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_NodeByID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_NodeByID_descriptor_;
}

const Graph_NodeByID& Graph_NodeByID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_NodeByID* Graph_NodeByID::default_instance_ = NULL;

Graph_NodeByID* Graph_NodeByID::New() const {
  return new Graph_NodeByID;
}

void Graph_NodeByID::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_NodeByID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_NodeByID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_NodeByID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_NodeByID::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_NodeByID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_NodeByID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_NodeByID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_NodeByID::MergeFrom(const Graph_NodeByID& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_NodeByID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_NodeByID::CopyFrom(const Graph_NodeByID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_NodeByID::IsInitialized() const {

  return true;
}

void Graph_NodeByID::Swap(Graph_NodeByID* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_NodeByID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_NodeByID_descriptor_;
  metadata.reflection = Graph_NodeByID_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_AddNode_Args::kNodeFieldNumber;
const int Graph_AddNode_Args::kBcFieldNumber;
const int Graph_AddNode_Args::kLibraryIDFieldNumber;
const int Graph_AddNode_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_AddNode_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_AddNode_Args >, 11, false >
  Graph_AddNode_Args::req(kReqFieldNumber, ::generated::proto::batch::Graph_AddNode_Args::default_instance());
Graph_AddNode_Args::Graph_AddNode_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_AddNode_Args::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Graph_AddNode_Args::Graph_AddNode_Args(const Graph_AddNode_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_AddNode_Args::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_AddNode_Args::~Graph_AddNode_Args() {
  SharedDtor();
}

void Graph_AddNode_Args::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Graph_AddNode_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_AddNode_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_AddNode_Args_descriptor_;
}

const Graph_AddNode_Args& Graph_AddNode_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_AddNode_Args* Graph_AddNode_Args::default_instance_ = NULL;

Graph_AddNode_Args* Graph_AddNode_Args::New() const {
  return new Graph_AddNode_Args;
}

void Graph_AddNode_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_AddNode_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_AddNode_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_AddNode_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_AddNode_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_AddNode_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_AddNode_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_AddNode_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_AddNode_Args::MergeFrom(const Graph_AddNode_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_AddNode_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_AddNode_Args::CopyFrom(const Graph_AddNode_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_AddNode_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Graph_AddNode_Args::Swap(Graph_AddNode_Args* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_AddNode_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_AddNode_Args_descriptor_;
  metadata.reflection = Graph_AddNode_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_AddNode_Result::kNodeIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_AddNode_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_AddNode_Result >, 11, false >
  Graph_AddNode_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Graph_AddNode_Result::default_instance());
Graph_AddNode_Result::Graph_AddNode_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_AddNode_Result::InitAsDefaultInstance() {
}

Graph_AddNode_Result::Graph_AddNode_Result(const Graph_AddNode_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_AddNode_Result::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_AddNode_Result::~Graph_AddNode_Result() {
  SharedDtor();
}

void Graph_AddNode_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_AddNode_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_AddNode_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_AddNode_Result_descriptor_;
}

const Graph_AddNode_Result& Graph_AddNode_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_AddNode_Result* Graph_AddNode_Result::default_instance_ = NULL;

Graph_AddNode_Result* Graph_AddNode_Result::New() const {
  return new Graph_AddNode_Result;
}

void Graph_AddNode_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_AddNode_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_AddNode_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_AddNode_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_AddNode_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_AddNode_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_AddNode_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_AddNode_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_AddNode_Result::MergeFrom(const Graph_AddNode_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_AddNode_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_AddNode_Result::CopyFrom(const Graph_AddNode_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_AddNode_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Graph_AddNode_Result::Swap(Graph_AddNode_Result* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_AddNode_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_AddNode_Result_descriptor_;
  metadata.reflection = Graph_AddNode_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph_AddNode::Graph_AddNode()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_AddNode::InitAsDefaultInstance() {
}

Graph_AddNode::Graph_AddNode(const Graph_AddNode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_AddNode::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_AddNode::~Graph_AddNode() {
  SharedDtor();
}

void Graph_AddNode::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_AddNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_AddNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_AddNode_descriptor_;
}

const Graph_AddNode& Graph_AddNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_AddNode* Graph_AddNode::default_instance_ = NULL;

Graph_AddNode* Graph_AddNode::New() const {
  return new Graph_AddNode;
}

void Graph_AddNode::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_AddNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_AddNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_AddNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_AddNode::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_AddNode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_AddNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_AddNode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_AddNode::MergeFrom(const Graph_AddNode& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_AddNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_AddNode::CopyFrom(const Graph_AddNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_AddNode::IsInitialized() const {

  return true;
}

void Graph_AddNode::Swap(Graph_AddNode* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_AddNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_AddNode_descriptor_;
  metadata.reflection = Graph_AddNode_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_UpdateNode_Args::kNodeFieldNumber;
const int Graph_UpdateNode_Args::kBcFieldNumber;
const int Graph_UpdateNode_Args::kLibraryIDFieldNumber;
const int Graph_UpdateNode_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_UpdateNode_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_UpdateNode_Args >, 11, false >
  Graph_UpdateNode_Args::req(kReqFieldNumber, ::generated::proto::batch::Graph_UpdateNode_Args::default_instance());
Graph_UpdateNode_Args::Graph_UpdateNode_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_UpdateNode_Args::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Graph_UpdateNode_Args::Graph_UpdateNode_Args(const Graph_UpdateNode_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_UpdateNode_Args::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_UpdateNode_Args::~Graph_UpdateNode_Args() {
  SharedDtor();
}

void Graph_UpdateNode_Args::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Graph_UpdateNode_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_UpdateNode_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_UpdateNode_Args_descriptor_;
}

const Graph_UpdateNode_Args& Graph_UpdateNode_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_UpdateNode_Args* Graph_UpdateNode_Args::default_instance_ = NULL;

Graph_UpdateNode_Args* Graph_UpdateNode_Args::New() const {
  return new Graph_UpdateNode_Args;
}

void Graph_UpdateNode_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_UpdateNode_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_UpdateNode_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_UpdateNode_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_UpdateNode_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_UpdateNode_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_UpdateNode_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_UpdateNode_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_UpdateNode_Args::MergeFrom(const Graph_UpdateNode_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_UpdateNode_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_UpdateNode_Args::CopyFrom(const Graph_UpdateNode_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_UpdateNode_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Graph_UpdateNode_Args::Swap(Graph_UpdateNode_Args* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_UpdateNode_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_UpdateNode_Args_descriptor_;
  metadata.reflection = Graph_UpdateNode_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_UpdateNode_Result::kNodeIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_UpdateNode_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_UpdateNode_Result >, 11, false >
  Graph_UpdateNode_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Graph_UpdateNode_Result::default_instance());
Graph_UpdateNode_Result::Graph_UpdateNode_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_UpdateNode_Result::InitAsDefaultInstance() {
}

Graph_UpdateNode_Result::Graph_UpdateNode_Result(const Graph_UpdateNode_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_UpdateNode_Result::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_UpdateNode_Result::~Graph_UpdateNode_Result() {
  SharedDtor();
}

void Graph_UpdateNode_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_UpdateNode_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_UpdateNode_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_UpdateNode_Result_descriptor_;
}

const Graph_UpdateNode_Result& Graph_UpdateNode_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_UpdateNode_Result* Graph_UpdateNode_Result::default_instance_ = NULL;

Graph_UpdateNode_Result* Graph_UpdateNode_Result::New() const {
  return new Graph_UpdateNode_Result;
}

void Graph_UpdateNode_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_UpdateNode_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_UpdateNode_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_UpdateNode_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_UpdateNode_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_UpdateNode_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_UpdateNode_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_UpdateNode_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_UpdateNode_Result::MergeFrom(const Graph_UpdateNode_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_UpdateNode_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_UpdateNode_Result::CopyFrom(const Graph_UpdateNode_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_UpdateNode_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Graph_UpdateNode_Result::Swap(Graph_UpdateNode_Result* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_UpdateNode_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_UpdateNode_Result_descriptor_;
  metadata.reflection = Graph_UpdateNode_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph_UpdateNode::Graph_UpdateNode()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_UpdateNode::InitAsDefaultInstance() {
}

Graph_UpdateNode::Graph_UpdateNode(const Graph_UpdateNode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_UpdateNode::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_UpdateNode::~Graph_UpdateNode() {
  SharedDtor();
}

void Graph_UpdateNode::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_UpdateNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_UpdateNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_UpdateNode_descriptor_;
}

const Graph_UpdateNode& Graph_UpdateNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_UpdateNode* Graph_UpdateNode::default_instance_ = NULL;

Graph_UpdateNode* Graph_UpdateNode::New() const {
  return new Graph_UpdateNode;
}

void Graph_UpdateNode::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_UpdateNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_UpdateNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_UpdateNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_UpdateNode::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_UpdateNode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_UpdateNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_UpdateNode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_UpdateNode::MergeFrom(const Graph_UpdateNode& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_UpdateNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_UpdateNode::CopyFrom(const Graph_UpdateNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_UpdateNode::IsInitialized() const {

  return true;
}

void Graph_UpdateNode::Swap(Graph_UpdateNode* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_UpdateNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_UpdateNode_descriptor_;
  metadata.reflection = Graph_UpdateNode_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_UpdateNodeInPlace_Args::kNodeFieldNumber;
const int Graph_UpdateNodeInPlace_Args::kBcFieldNumber;
const int Graph_UpdateNodeInPlace_Args::kLibraryIDFieldNumber;
const int Graph_UpdateNodeInPlace_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_UpdateNodeInPlace_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_UpdateNodeInPlace_Args >, 11, false >
  Graph_UpdateNodeInPlace_Args::req(kReqFieldNumber, ::generated::proto::batch::Graph_UpdateNodeInPlace_Args::default_instance());
Graph_UpdateNodeInPlace_Args::Graph_UpdateNodeInPlace_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_UpdateNodeInPlace_Args::InitAsDefaultInstance() {
  node_ = const_cast< ::generated::proto::graph::Node*>(&::generated::proto::graph::Node::default_instance());
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Graph_UpdateNodeInPlace_Args::Graph_UpdateNodeInPlace_Args(const Graph_UpdateNodeInPlace_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_UpdateNodeInPlace_Args::SharedCtor() {
  _cached_size_ = 0;
  node_ = NULL;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_UpdateNodeInPlace_Args::~Graph_UpdateNodeInPlace_Args() {
  SharedDtor();
}

void Graph_UpdateNodeInPlace_Args::SharedDtor() {
  if (this != default_instance_) {
    delete node_;
    delete bc_;
  }
}

void Graph_UpdateNodeInPlace_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_UpdateNodeInPlace_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_UpdateNodeInPlace_Args_descriptor_;
}

const Graph_UpdateNodeInPlace_Args& Graph_UpdateNodeInPlace_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_UpdateNodeInPlace_Args* Graph_UpdateNodeInPlace_Args::default_instance_ = NULL;

Graph_UpdateNodeInPlace_Args* Graph_UpdateNodeInPlace_Args::New() const {
  return new Graph_UpdateNodeInPlace_Args;
}

void Graph_UpdateNodeInPlace_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_node()) {
      if (node_ != NULL) node_->::generated::proto::graph::Node::Clear();
    }
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_UpdateNodeInPlace_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.graph.Node node = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_node()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_UpdateNodeInPlace_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->node(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_UpdateNodeInPlace_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.graph.Node node = 1;
  if (has_node()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->node(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_UpdateNodeInPlace_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.graph.Node node = 1;
    if (has_node()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->node());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_UpdateNodeInPlace_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_UpdateNodeInPlace_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_UpdateNodeInPlace_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_UpdateNodeInPlace_Args::MergeFrom(const Graph_UpdateNodeInPlace_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_node()) {
      mutable_node()->::generated::proto::graph::Node::MergeFrom(from.node());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_UpdateNodeInPlace_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_UpdateNodeInPlace_Args::CopyFrom(const Graph_UpdateNodeInPlace_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_UpdateNodeInPlace_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_node()) {
    if (!this->node().IsInitialized()) return false;
  }
  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Graph_UpdateNodeInPlace_Args::Swap(Graph_UpdateNodeInPlace_Args* other) {
  if (other != this) {
    std::swap(node_, other->node_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_UpdateNodeInPlace_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_UpdateNodeInPlace_Args_descriptor_;
  metadata.reflection = Graph_UpdateNodeInPlace_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_UpdateNodeInPlace_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_UpdateNodeInPlace_Result >, 11, false >
  Graph_UpdateNodeInPlace_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Graph_UpdateNodeInPlace_Result::default_instance());
Graph_UpdateNodeInPlace_Result::Graph_UpdateNodeInPlace_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_UpdateNodeInPlace_Result::InitAsDefaultInstance() {
}

Graph_UpdateNodeInPlace_Result::Graph_UpdateNodeInPlace_Result(const Graph_UpdateNodeInPlace_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_UpdateNodeInPlace_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_UpdateNodeInPlace_Result::~Graph_UpdateNodeInPlace_Result() {
  SharedDtor();
}

void Graph_UpdateNodeInPlace_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_UpdateNodeInPlace_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_UpdateNodeInPlace_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_UpdateNodeInPlace_Result_descriptor_;
}

const Graph_UpdateNodeInPlace_Result& Graph_UpdateNodeInPlace_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_UpdateNodeInPlace_Result* Graph_UpdateNodeInPlace_Result::default_instance_ = NULL;

Graph_UpdateNodeInPlace_Result* Graph_UpdateNodeInPlace_Result::New() const {
  return new Graph_UpdateNodeInPlace_Result;
}

void Graph_UpdateNodeInPlace_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_UpdateNodeInPlace_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_UpdateNodeInPlace_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_UpdateNodeInPlace_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_UpdateNodeInPlace_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_UpdateNodeInPlace_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_UpdateNodeInPlace_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_UpdateNodeInPlace_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_UpdateNodeInPlace_Result::MergeFrom(const Graph_UpdateNodeInPlace_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_UpdateNodeInPlace_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_UpdateNodeInPlace_Result::CopyFrom(const Graph_UpdateNodeInPlace_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_UpdateNodeInPlace_Result::IsInitialized() const {

  return true;
}

void Graph_UpdateNodeInPlace_Result::Swap(Graph_UpdateNodeInPlace_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_UpdateNodeInPlace_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_UpdateNodeInPlace_Result_descriptor_;
  metadata.reflection = Graph_UpdateNodeInPlace_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph_UpdateNodeInPlace::Graph_UpdateNodeInPlace()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_UpdateNodeInPlace::InitAsDefaultInstance() {
}

Graph_UpdateNodeInPlace::Graph_UpdateNodeInPlace(const Graph_UpdateNodeInPlace& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_UpdateNodeInPlace::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_UpdateNodeInPlace::~Graph_UpdateNodeInPlace() {
  SharedDtor();
}

void Graph_UpdateNodeInPlace::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_UpdateNodeInPlace::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_UpdateNodeInPlace::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_UpdateNodeInPlace_descriptor_;
}

const Graph_UpdateNodeInPlace& Graph_UpdateNodeInPlace::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_UpdateNodeInPlace* Graph_UpdateNodeInPlace::default_instance_ = NULL;

Graph_UpdateNodeInPlace* Graph_UpdateNodeInPlace::New() const {
  return new Graph_UpdateNodeInPlace;
}

void Graph_UpdateNodeInPlace::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_UpdateNodeInPlace::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_UpdateNodeInPlace::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_UpdateNodeInPlace::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_UpdateNodeInPlace::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_UpdateNodeInPlace::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_UpdateNodeInPlace* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_UpdateNodeInPlace*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_UpdateNodeInPlace::MergeFrom(const Graph_UpdateNodeInPlace& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_UpdateNodeInPlace::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_UpdateNodeInPlace::CopyFrom(const Graph_UpdateNodeInPlace& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_UpdateNodeInPlace::IsInitialized() const {

  return true;
}

void Graph_UpdateNodeInPlace::Swap(Graph_UpdateNodeInPlace* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_UpdateNodeInPlace::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_UpdateNodeInPlace_descriptor_;
  metadata.reflection = Graph_UpdateNodeInPlace_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_RemoveNode_Args::kNodeIDFieldNumber;
const int Graph_RemoveNode_Args::kBcFieldNumber;
const int Graph_RemoveNode_Args::kLibraryIDFieldNumber;
const int Graph_RemoveNode_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_RemoveNode_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_RemoveNode_Args >, 11, false >
  Graph_RemoveNode_Args::req(kReqFieldNumber, ::generated::proto::batch::Graph_RemoveNode_Args::default_instance());
Graph_RemoveNode_Args::Graph_RemoveNode_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_RemoveNode_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Graph_RemoveNode_Args::Graph_RemoveNode_Args(const Graph_RemoveNode_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_RemoveNode_Args::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_RemoveNode_Args::~Graph_RemoveNode_Args() {
  SharedDtor();
}

void Graph_RemoveNode_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Graph_RemoveNode_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_RemoveNode_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_RemoveNode_Args_descriptor_;
}

const Graph_RemoveNode_Args& Graph_RemoveNode_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_RemoveNode_Args* Graph_RemoveNode_Args::default_instance_ = NULL;

Graph_RemoveNode_Args* Graph_RemoveNode_Args::New() const {
  return new Graph_RemoveNode_Args;
}

void Graph_RemoveNode_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_RemoveNode_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_RemoveNode_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_RemoveNode_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_RemoveNode_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_RemoveNode_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_RemoveNode_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_RemoveNode_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_RemoveNode_Args::MergeFrom(const Graph_RemoveNode_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_RemoveNode_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_RemoveNode_Args::CopyFrom(const Graph_RemoveNode_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_RemoveNode_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Graph_RemoveNode_Args::Swap(Graph_RemoveNode_Args* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_RemoveNode_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_RemoveNode_Args_descriptor_;
  metadata.reflection = Graph_RemoveNode_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_RemoveNode_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_RemoveNode_Result >, 11, false >
  Graph_RemoveNode_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Graph_RemoveNode_Result::default_instance());
Graph_RemoveNode_Result::Graph_RemoveNode_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_RemoveNode_Result::InitAsDefaultInstance() {
}

Graph_RemoveNode_Result::Graph_RemoveNode_Result(const Graph_RemoveNode_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_RemoveNode_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_RemoveNode_Result::~Graph_RemoveNode_Result() {
  SharedDtor();
}

void Graph_RemoveNode_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_RemoveNode_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_RemoveNode_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_RemoveNode_Result_descriptor_;
}

const Graph_RemoveNode_Result& Graph_RemoveNode_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_RemoveNode_Result* Graph_RemoveNode_Result::default_instance_ = NULL;

Graph_RemoveNode_Result* Graph_RemoveNode_Result::New() const {
  return new Graph_RemoveNode_Result;
}

void Graph_RemoveNode_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_RemoveNode_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_RemoveNode_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_RemoveNode_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_RemoveNode_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_RemoveNode_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_RemoveNode_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_RemoveNode_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_RemoveNode_Result::MergeFrom(const Graph_RemoveNode_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_RemoveNode_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_RemoveNode_Result::CopyFrom(const Graph_RemoveNode_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_RemoveNode_Result::IsInitialized() const {

  return true;
}

void Graph_RemoveNode_Result::Swap(Graph_RemoveNode_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_RemoveNode_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_RemoveNode_Result_descriptor_;
  metadata.reflection = Graph_RemoveNode_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph_RemoveNode::Graph_RemoveNode()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_RemoveNode::InitAsDefaultInstance() {
}

Graph_RemoveNode::Graph_RemoveNode(const Graph_RemoveNode& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_RemoveNode::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_RemoveNode::~Graph_RemoveNode() {
  SharedDtor();
}

void Graph_RemoveNode::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_RemoveNode::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_RemoveNode::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_RemoveNode_descriptor_;
}

const Graph_RemoveNode& Graph_RemoveNode::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_RemoveNode* Graph_RemoveNode::default_instance_ = NULL;

Graph_RemoveNode* Graph_RemoveNode::New() const {
  return new Graph_RemoveNode;
}

void Graph_RemoveNode::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_RemoveNode::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_RemoveNode::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_RemoveNode::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_RemoveNode::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_RemoveNode::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_RemoveNode* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_RemoveNode*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_RemoveNode::MergeFrom(const Graph_RemoveNode& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_RemoveNode::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_RemoveNode::CopyFrom(const Graph_RemoveNode& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_RemoveNode::IsInitialized() const {

  return true;
}

void Graph_RemoveNode::Swap(Graph_RemoveNode* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_RemoveNode::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_RemoveNode_descriptor_;
  metadata.reflection = Graph_RemoveNode_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_Connect_Args::kSrcNodeIDFieldNumber;
const int Graph_Connect_Args::kSrcPortFieldNumber;
const int Graph_Connect_Args::kDstNodeIDFieldNumber;
const int Graph_Connect_Args::kDstPortFieldNumber;
const int Graph_Connect_Args::kBcFieldNumber;
const int Graph_Connect_Args::kLibraryIDFieldNumber;
const int Graph_Connect_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_Connect_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_Connect_Args >, 11, false >
  Graph_Connect_Args::req(kReqFieldNumber, ::generated::proto::batch::Graph_Connect_Args::default_instance());
Graph_Connect_Args::Graph_Connect_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_Connect_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Graph_Connect_Args::Graph_Connect_Args(const Graph_Connect_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_Connect_Args::SharedCtor() {
  _cached_size_ = 0;
  srcnodeid_ = 0;
  dstnodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_Connect_Args::~Graph_Connect_Args() {
  SharedDtor();
}

void Graph_Connect_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Graph_Connect_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_Connect_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_Connect_Args_descriptor_;
}

const Graph_Connect_Args& Graph_Connect_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_Connect_Args* Graph_Connect_Args::default_instance_ = NULL;

Graph_Connect_Args* Graph_Connect_Args::New() const {
  return new Graph_Connect_Args;
}

void Graph_Connect_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    srcnodeid_ = 0;
    dstnodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  srcport_.Clear();
  dstport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_Connect_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 srcNodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcnodeid_)));
          set_has_srcnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        break;
      }

      // repeated int32 srcPort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_srcPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_srcport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_srcport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        if (input->ExpectTag(24)) goto parse_dstNodeID;
        break;
      }

      // required int32 dstNodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dstnodeid_)));
          set_has_dstnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        break;
      }

      // repeated int32 dstPort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_dstport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dstport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        if (input->ExpectTag(42)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_Connect_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->srcnodeid(), output);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->srcport(i), output);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dstnodeid(), output);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->dstport(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bc(), output);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->libraryid(), output);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_Connect_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->srcnodeid(), target);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->srcport(i), target);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dstnodeid(), target);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->dstport(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bc(), target);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->libraryid(), target);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_Connect_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 srcNodeID = 1;
    if (has_srcnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcnodeid());
    }

    // required int32 dstNodeID = 3;
    if (has_dstnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dstnodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 5;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 6;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 7;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 srcPort = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->srcport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->srcport(i));
    }
    total_size += 1 * this->srcport_size() + data_size;
  }

  // repeated int32 dstPort = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->dstport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dstport(i));
    }
    total_size += 1 * this->dstport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_Connect_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_Connect_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_Connect_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_Connect_Args::MergeFrom(const Graph_Connect_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  srcport_.MergeFrom(from.srcport_);
  dstport_.MergeFrom(from.dstport_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcnodeid()) {
      set_srcnodeid(from.srcnodeid());
    }
    if (from.has_dstnodeid()) {
      set_dstnodeid(from.dstnodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_Connect_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_Connect_Args::CopyFrom(const Graph_Connect_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_Connect_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000075) != 0x00000075) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Graph_Connect_Args::Swap(Graph_Connect_Args* other) {
  if (other != this) {
    std::swap(srcnodeid_, other->srcnodeid_);
    srcport_.Swap(&other->srcport_);
    std::swap(dstnodeid_, other->dstnodeid_);
    dstport_.Swap(&other->dstport_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_Connect_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_Connect_Args_descriptor_;
  metadata.reflection = Graph_Connect_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_Connect_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_Connect_Result >, 11, false >
  Graph_Connect_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Graph_Connect_Result::default_instance());
Graph_Connect_Result::Graph_Connect_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_Connect_Result::InitAsDefaultInstance() {
}

Graph_Connect_Result::Graph_Connect_Result(const Graph_Connect_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_Connect_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_Connect_Result::~Graph_Connect_Result() {
  SharedDtor();
}

void Graph_Connect_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_Connect_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_Connect_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_Connect_Result_descriptor_;
}

const Graph_Connect_Result& Graph_Connect_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_Connect_Result* Graph_Connect_Result::default_instance_ = NULL;

Graph_Connect_Result* Graph_Connect_Result::New() const {
  return new Graph_Connect_Result;
}

void Graph_Connect_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_Connect_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_Connect_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_Connect_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_Connect_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_Connect_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_Connect_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_Connect_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_Connect_Result::MergeFrom(const Graph_Connect_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_Connect_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_Connect_Result::CopyFrom(const Graph_Connect_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_Connect_Result::IsInitialized() const {

  return true;
}

void Graph_Connect_Result::Swap(Graph_Connect_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_Connect_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_Connect_Result_descriptor_;
  metadata.reflection = Graph_Connect_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph_Connect::Graph_Connect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_Connect::InitAsDefaultInstance() {
}

Graph_Connect::Graph_Connect(const Graph_Connect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_Connect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_Connect::~Graph_Connect() {
  SharedDtor();
}

void Graph_Connect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_Connect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_Connect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_Connect_descriptor_;
}

const Graph_Connect& Graph_Connect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_Connect* Graph_Connect::default_instance_ = NULL;

Graph_Connect* Graph_Connect::New() const {
  return new Graph_Connect;
}

void Graph_Connect::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_Connect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_Connect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_Connect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_Connect::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_Connect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_Connect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_Connect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_Connect::MergeFrom(const Graph_Connect& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_Connect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_Connect::CopyFrom(const Graph_Connect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_Connect::IsInitialized() const {

  return true;
}

void Graph_Connect::Swap(Graph_Connect* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_Connect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_Connect_descriptor_;
  metadata.reflection = Graph_Connect_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Graph_Disconnect_Args::kSrcNodeIDFieldNumber;
const int Graph_Disconnect_Args::kSrcPortFieldNumber;
const int Graph_Disconnect_Args::kDstNodeIDFieldNumber;
const int Graph_Disconnect_Args::kDstPortFieldNumber;
const int Graph_Disconnect_Args::kBcFieldNumber;
const int Graph_Disconnect_Args::kLibraryIDFieldNumber;
const int Graph_Disconnect_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_Disconnect_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_Disconnect_Args >, 11, false >
  Graph_Disconnect_Args::req(kReqFieldNumber, ::generated::proto::batch::Graph_Disconnect_Args::default_instance());
Graph_Disconnect_Args::Graph_Disconnect_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_Disconnect_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

Graph_Disconnect_Args::Graph_Disconnect_Args(const Graph_Disconnect_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_Disconnect_Args::SharedCtor() {
  _cached_size_ = 0;
  srcnodeid_ = 0;
  dstnodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_Disconnect_Args::~Graph_Disconnect_Args() {
  SharedDtor();
}

void Graph_Disconnect_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void Graph_Disconnect_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_Disconnect_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_Disconnect_Args_descriptor_;
}

const Graph_Disconnect_Args& Graph_Disconnect_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_Disconnect_Args* Graph_Disconnect_Args::default_instance_ = NULL;

Graph_Disconnect_Args* Graph_Disconnect_Args::New() const {
  return new Graph_Disconnect_Args;
}

void Graph_Disconnect_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    srcnodeid_ = 0;
    dstnodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  srcport_.Clear();
  dstport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_Disconnect_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 srcNodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &srcnodeid_)));
          set_has_srcnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        break;
      }

      // repeated int32 srcPort = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_srcPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 16, input, this->mutable_srcport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_srcport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_srcPort;
        if (input->ExpectTag(24)) goto parse_dstNodeID;
        break;
      }

      // required int32 dstNodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstNodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &dstnodeid_)));
          set_has_dstnodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        break;
      }

      // repeated int32 dstPort = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_dstPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 32, input, this->mutable_dstport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_dstport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_dstPort;
        if (input->ExpectTag(42)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(56)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 7;
      case 7: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Graph_Disconnect_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->srcnodeid(), output);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      2, this->srcport(i), output);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->dstnodeid(), output);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      4, this->dstport(i), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      5, this->bc(), output);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->libraryid(), output);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(7, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_Disconnect_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 srcNodeID = 1;
  if (has_srcnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->srcnodeid(), target);
  }

  // repeated int32 srcPort = 2;
  for (int i = 0; i < this->srcport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(2, this->srcport(i), target);
  }

  // required int32 dstNodeID = 3;
  if (has_dstnodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->dstnodeid(), target);
  }

  // repeated int32 dstPort = 4;
  for (int i = 0; i < this->dstport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(4, this->dstport(i), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 5;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        5, this->bc(), target);
  }

  // required int32 libraryID = 6;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->libraryid(), target);
  }

  // required int32 projectID = 7;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(7, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_Disconnect_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 srcNodeID = 1;
    if (has_srcnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->srcnodeid());
    }

    // required int32 dstNodeID = 3;
    if (has_dstnodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->dstnodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 5;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 6;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 7;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 srcPort = 2;
  {
    int data_size = 0;
    for (int i = 0; i < this->srcport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->srcport(i));
    }
    total_size += 1 * this->srcport_size() + data_size;
  }

  // repeated int32 dstPort = 4;
  {
    int data_size = 0;
    for (int i = 0; i < this->dstport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->dstport(i));
    }
    total_size += 1 * this->dstport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_Disconnect_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_Disconnect_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_Disconnect_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_Disconnect_Args::MergeFrom(const Graph_Disconnect_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  srcport_.MergeFrom(from.srcport_);
  dstport_.MergeFrom(from.dstport_);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_srcnodeid()) {
      set_srcnodeid(from.srcnodeid());
    }
    if (from.has_dstnodeid()) {
      set_dstnodeid(from.dstnodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_Disconnect_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_Disconnect_Args::CopyFrom(const Graph_Disconnect_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_Disconnect_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000075) != 0x00000075) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void Graph_Disconnect_Args::Swap(Graph_Disconnect_Args* other) {
  if (other != this) {
    std::swap(srcnodeid_, other->srcnodeid_);
    srcport_.Swap(&other->srcport_);
    std::swap(dstnodeid_, other->dstnodeid_);
    dstport_.Swap(&other->dstport_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_Disconnect_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_Disconnect_Args_descriptor_;
  metadata.reflection = Graph_Disconnect_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Graph_Disconnect_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Graph_Disconnect_Result >, 11, false >
  Graph_Disconnect_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Graph_Disconnect_Result::default_instance());
Graph_Disconnect_Result::Graph_Disconnect_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_Disconnect_Result::InitAsDefaultInstance() {
}

Graph_Disconnect_Result::Graph_Disconnect_Result(const Graph_Disconnect_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_Disconnect_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_Disconnect_Result::~Graph_Disconnect_Result() {
  SharedDtor();
}

void Graph_Disconnect_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_Disconnect_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_Disconnect_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_Disconnect_Result_descriptor_;
}

const Graph_Disconnect_Result& Graph_Disconnect_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_Disconnect_Result* Graph_Disconnect_Result::default_instance_ = NULL;

Graph_Disconnect_Result* Graph_Disconnect_Result::New() const {
  return new Graph_Disconnect_Result;
}

void Graph_Disconnect_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_Disconnect_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_Disconnect_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_Disconnect_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_Disconnect_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_Disconnect_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_Disconnect_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_Disconnect_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_Disconnect_Result::MergeFrom(const Graph_Disconnect_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_Disconnect_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_Disconnect_Result::CopyFrom(const Graph_Disconnect_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_Disconnect_Result::IsInitialized() const {

  return true;
}

void Graph_Disconnect_Result::Swap(Graph_Disconnect_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_Disconnect_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_Disconnect_Result_descriptor_;
  metadata.reflection = Graph_Disconnect_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph_Disconnect::Graph_Disconnect()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph_Disconnect::InitAsDefaultInstance() {
}

Graph_Disconnect::Graph_Disconnect(const Graph_Disconnect& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph_Disconnect::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph_Disconnect::~Graph_Disconnect() {
  SharedDtor();
}

void Graph_Disconnect::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph_Disconnect::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph_Disconnect::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_Disconnect_descriptor_;
}

const Graph_Disconnect& Graph_Disconnect::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph_Disconnect* Graph_Disconnect::default_instance_ = NULL;

Graph_Disconnect* Graph_Disconnect::New() const {
  return new Graph_Disconnect;
}

void Graph_Disconnect::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph_Disconnect::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph_Disconnect::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph_Disconnect::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph_Disconnect::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph_Disconnect::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph_Disconnect* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph_Disconnect*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph_Disconnect::MergeFrom(const Graph_Disconnect& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph_Disconnect::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph_Disconnect::CopyFrom(const Graph_Disconnect& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph_Disconnect::IsInitialized() const {

  return true;
}

void Graph_Disconnect::Swap(Graph_Disconnect* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph_Disconnect::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_Disconnect_descriptor_;
  metadata.reflection = Graph_Disconnect_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Graph::Graph()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Graph::InitAsDefaultInstance() {
}

Graph::Graph(const Graph& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Graph::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Graph::~Graph() {
  SharedDtor();
}

void Graph::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Graph::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Graph::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Graph_descriptor_;
}

const Graph& Graph::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Graph* Graph::default_instance_ = NULL;

Graph* Graph::New() const {
  return new Graph;
}

void Graph::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Graph::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Graph::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Graph::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Graph::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Graph::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Graph* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Graph*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Graph::MergeFrom(const Graph& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Graph::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Graph::CopyFrom(const Graph& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Graph::IsInitialized() const {

  return true;
}

void Graph::Swap(Graph* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Graph::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Graph_descriptor_;
  metadata.reflection = Graph_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Library_Libraries_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_Libraries_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_Libraries_Args >, 11, false >
  Library_Libraries_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_Libraries_Args::default_instance());
Library_Libraries_Args::Library_Libraries_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_Libraries_Args::InitAsDefaultInstance() {
}

Library_Libraries_Args::Library_Libraries_Args(const Library_Libraries_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_Libraries_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_Libraries_Args::~Library_Libraries_Args() {
  SharedDtor();
}

void Library_Libraries_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_Libraries_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_Libraries_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_Libraries_Args_descriptor_;
}

const Library_Libraries_Args& Library_Libraries_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_Libraries_Args* Library_Libraries_Args::default_instance_ = NULL;

Library_Libraries_Args* Library_Libraries_Args::New() const {
  return new Library_Libraries_Args;
}

void Library_Libraries_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_Libraries_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_Libraries_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_Libraries_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_Libraries_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_Libraries_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_Libraries_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_Libraries_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_Libraries_Args::MergeFrom(const Library_Libraries_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_Libraries_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_Libraries_Args::CopyFrom(const Library_Libraries_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_Libraries_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Library_Libraries_Args::Swap(Library_Libraries_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_Libraries_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_Libraries_Args_descriptor_;
  metadata.reflection = Library_Libraries_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_Libraries_Result::kLibrariesFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_Libraries_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_Libraries_Result >, 11, false >
  Library_Libraries_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_Libraries_Result::default_instance());
Library_Libraries_Result::Library_Libraries_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_Libraries_Result::InitAsDefaultInstance() {
}

Library_Libraries_Result::Library_Libraries_Result(const Library_Libraries_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_Libraries_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_Libraries_Result::~Library_Libraries_Result() {
  SharedDtor();
}

void Library_Libraries_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_Libraries_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_Libraries_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_Libraries_Result_descriptor_;
}

const Library_Libraries_Result& Library_Libraries_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_Libraries_Result* Library_Libraries_Result::default_instance_ = NULL;

Library_Libraries_Result* Library_Libraries_Result::New() const {
  return new Library_Libraries_Result;
}

void Library_Libraries_Result::Clear() {
  libraries_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_Libraries_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.library.Library libraries = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_libraries:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_libraries()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_libraries;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_Libraries_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.library.Library libraries = 1;
  for (int i = 0; i < this->libraries_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->libraries(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_Libraries_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.library.Library libraries = 1;
  for (int i = 0; i < this->libraries_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->libraries(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_Libraries_Result::ByteSize() const {
  int total_size = 0;

  // repeated .generated.proto.library.Library libraries = 1;
  total_size += 1 * this->libraries_size();
  for (int i = 0; i < this->libraries_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->libraries(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_Libraries_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_Libraries_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_Libraries_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_Libraries_Result::MergeFrom(const Library_Libraries_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  libraries_.MergeFrom(from.libraries_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_Libraries_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_Libraries_Result::CopyFrom(const Library_Libraries_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_Libraries_Result::IsInitialized() const {

  for (int i = 0; i < libraries_size(); i++) {
    if (!this->libraries(i).IsInitialized()) return false;
  }
  return true;
}

void Library_Libraries_Result::Swap(Library_Libraries_Result* other) {
  if (other != this) {
    libraries_.Swap(&other->libraries_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_Libraries_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_Libraries_Result_descriptor_;
  metadata.reflection = Library_Libraries_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_Libraries::Library_Libraries()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_Libraries::InitAsDefaultInstance() {
}

Library_Libraries::Library_Libraries(const Library_Libraries& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_Libraries::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_Libraries::~Library_Libraries() {
  SharedDtor();
}

void Library_Libraries::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_Libraries::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_Libraries::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_Libraries_descriptor_;
}

const Library_Libraries& Library_Libraries::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_Libraries* Library_Libraries::default_instance_ = NULL;

Library_Libraries* Library_Libraries::New() const {
  return new Library_Libraries;
}

void Library_Libraries::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_Libraries::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_Libraries::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_Libraries::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_Libraries::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_Libraries::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_Libraries* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_Libraries*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_Libraries::MergeFrom(const Library_Libraries& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_Libraries::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_Libraries::CopyFrom(const Library_Libraries& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_Libraries::IsInitialized() const {

  return true;
}

void Library_Libraries::Swap(Library_Libraries* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_Libraries::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_Libraries_descriptor_;
  metadata.reflection = Library_Libraries_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_LibraryByID_Args::kLibraryIDFieldNumber;
const int Library_LibraryByID_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_LibraryByID_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_LibraryByID_Args >, 11, false >
  Library_LibraryByID_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_LibraryByID_Args::default_instance());
Library_LibraryByID_Args::Library_LibraryByID_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LibraryByID_Args::InitAsDefaultInstance() {
}

Library_LibraryByID_Args::Library_LibraryByID_Args(const Library_LibraryByID_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LibraryByID_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LibraryByID_Args::~Library_LibraryByID_Args() {
  SharedDtor();
}

void Library_LibraryByID_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_LibraryByID_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LibraryByID_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LibraryByID_Args_descriptor_;
}

const Library_LibraryByID_Args& Library_LibraryByID_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_LibraryByID_Args* Library_LibraryByID_Args::default_instance_ = NULL;

Library_LibraryByID_Args* Library_LibraryByID_Args::New() const {
  return new Library_LibraryByID_Args;
}

void Library_LibraryByID_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LibraryByID_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_LibraryByID_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LibraryByID_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LibraryByID_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LibraryByID_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LibraryByID_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LibraryByID_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LibraryByID_Args::MergeFrom(const Library_LibraryByID_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LibraryByID_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LibraryByID_Args::CopyFrom(const Library_LibraryByID_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LibraryByID_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Library_LibraryByID_Args::Swap(Library_LibraryByID_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LibraryByID_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LibraryByID_Args_descriptor_;
  metadata.reflection = Library_LibraryByID_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_LibraryByID_Result::kLibraryFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_LibraryByID_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_LibraryByID_Result >, 11, false >
  Library_LibraryByID_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_LibraryByID_Result::default_instance());
Library_LibraryByID_Result::Library_LibraryByID_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LibraryByID_Result::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Library_LibraryByID_Result::Library_LibraryByID_Result(const Library_LibraryByID_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LibraryByID_Result::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LibraryByID_Result::~Library_LibraryByID_Result() {
  SharedDtor();
}

void Library_LibraryByID_Result::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Library_LibraryByID_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LibraryByID_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LibraryByID_Result_descriptor_;
}

const Library_LibraryByID_Result& Library_LibraryByID_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_LibraryByID_Result* Library_LibraryByID_Result::default_instance_ = NULL;

Library_LibraryByID_Result* Library_LibraryByID_Result::New() const {
  return new Library_LibraryByID_Result;
}

void Library_LibraryByID_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LibraryByID_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_LibraryByID_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LibraryByID_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LibraryByID_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LibraryByID_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LibraryByID_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LibraryByID_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LibraryByID_Result::MergeFrom(const Library_LibraryByID_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LibraryByID_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LibraryByID_Result::CopyFrom(const Library_LibraryByID_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LibraryByID_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Library_LibraryByID_Result::Swap(Library_LibraryByID_Result* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LibraryByID_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LibraryByID_Result_descriptor_;
  metadata.reflection = Library_LibraryByID_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_LibraryByID::Library_LibraryByID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LibraryByID::InitAsDefaultInstance() {
}

Library_LibraryByID::Library_LibraryByID(const Library_LibraryByID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LibraryByID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LibraryByID::~Library_LibraryByID() {
  SharedDtor();
}

void Library_LibraryByID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_LibraryByID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LibraryByID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LibraryByID_descriptor_;
}

const Library_LibraryByID& Library_LibraryByID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_LibraryByID* Library_LibraryByID::default_instance_ = NULL;

Library_LibraryByID* Library_LibraryByID::New() const {
  return new Library_LibraryByID;
}

void Library_LibraryByID::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LibraryByID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_LibraryByID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LibraryByID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LibraryByID::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LibraryByID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LibraryByID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LibraryByID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LibraryByID::MergeFrom(const Library_LibraryByID& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LibraryByID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LibraryByID::CopyFrom(const Library_LibraryByID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LibraryByID::IsInitialized() const {

  return true;
}

void Library_LibraryByID::Swap(Library_LibraryByID* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LibraryByID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LibraryByID_descriptor_;
  metadata.reflection = Library_LibraryByID_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_CreateLibrary_Args::kNameFieldNumber;
const int Library_CreateLibrary_Args::kPathFieldNumber;
const int Library_CreateLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_CreateLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_CreateLibrary_Args >, 11, false >
  Library_CreateLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_CreateLibrary_Args::default_instance());
Library_CreateLibrary_Args::Library_CreateLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_CreateLibrary_Args::InitAsDefaultInstance() {
}

Library_CreateLibrary_Args::Library_CreateLibrary_Args(const Library_CreateLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_CreateLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_CreateLibrary_Args::~Library_CreateLibrary_Args() {
  SharedDtor();
}

void Library_CreateLibrary_Args::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Library_CreateLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_CreateLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_CreateLibrary_Args_descriptor_;
}

const Library_CreateLibrary_Args& Library_CreateLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_CreateLibrary_Args* Library_CreateLibrary_Args::default_instance_ = NULL;

Library_CreateLibrary_Args* Library_CreateLibrary_Args::New() const {
  return new Library_CreateLibrary_Args;
}

void Library_CreateLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_CreateLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // required string path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_CreateLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_CreateLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_CreateLibrary_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_CreateLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_CreateLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_CreateLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_CreateLibrary_Args::MergeFrom(const Library_CreateLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_CreateLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_CreateLibrary_Args::CopyFrom(const Library_CreateLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_CreateLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Library_CreateLibrary_Args::Swap(Library_CreateLibrary_Args* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(path_, other->path_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_CreateLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_CreateLibrary_Args_descriptor_;
  metadata.reflection = Library_CreateLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_CreateLibrary_Result::kLibraryFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_CreateLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_CreateLibrary_Result >, 11, false >
  Library_CreateLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_CreateLibrary_Result::default_instance());
Library_CreateLibrary_Result::Library_CreateLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_CreateLibrary_Result::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Library_CreateLibrary_Result::Library_CreateLibrary_Result(const Library_CreateLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_CreateLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_CreateLibrary_Result::~Library_CreateLibrary_Result() {
  SharedDtor();
}

void Library_CreateLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Library_CreateLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_CreateLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_CreateLibrary_Result_descriptor_;
}

const Library_CreateLibrary_Result& Library_CreateLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_CreateLibrary_Result* Library_CreateLibrary_Result::default_instance_ = NULL;

Library_CreateLibrary_Result* Library_CreateLibrary_Result::New() const {
  return new Library_CreateLibrary_Result;
}

void Library_CreateLibrary_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_CreateLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_CreateLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_CreateLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_CreateLibrary_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_CreateLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_CreateLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_CreateLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_CreateLibrary_Result::MergeFrom(const Library_CreateLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_CreateLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_CreateLibrary_Result::CopyFrom(const Library_CreateLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_CreateLibrary_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Library_CreateLibrary_Result::Swap(Library_CreateLibrary_Result* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_CreateLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_CreateLibrary_Result_descriptor_;
  metadata.reflection = Library_CreateLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_CreateLibrary::Library_CreateLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_CreateLibrary::InitAsDefaultInstance() {
}

Library_CreateLibrary::Library_CreateLibrary(const Library_CreateLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_CreateLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_CreateLibrary::~Library_CreateLibrary() {
  SharedDtor();
}

void Library_CreateLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_CreateLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_CreateLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_CreateLibrary_descriptor_;
}

const Library_CreateLibrary& Library_CreateLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_CreateLibrary* Library_CreateLibrary::default_instance_ = NULL;

Library_CreateLibrary* Library_CreateLibrary::New() const {
  return new Library_CreateLibrary;
}

void Library_CreateLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_CreateLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_CreateLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_CreateLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_CreateLibrary::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_CreateLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_CreateLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_CreateLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_CreateLibrary::MergeFrom(const Library_CreateLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_CreateLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_CreateLibrary::CopyFrom(const Library_CreateLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_CreateLibrary::IsInitialized() const {

  return true;
}

void Library_CreateLibrary::Swap(Library_CreateLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_CreateLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_CreateLibrary_descriptor_;
  metadata.reflection = Library_CreateLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_LoadLibrary_Args::kPathFieldNumber;
const int Library_LoadLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_LoadLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_LoadLibrary_Args >, 11, false >
  Library_LoadLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_LoadLibrary_Args::default_instance());
Library_LoadLibrary_Args::Library_LoadLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LoadLibrary_Args::InitAsDefaultInstance() {
}

Library_LoadLibrary_Args::Library_LoadLibrary_Args(const Library_LoadLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LoadLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LoadLibrary_Args::~Library_LoadLibrary_Args() {
  SharedDtor();
}

void Library_LoadLibrary_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Library_LoadLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LoadLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LoadLibrary_Args_descriptor_;
}

const Library_LoadLibrary_Args& Library_LoadLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_LoadLibrary_Args* Library_LoadLibrary_Args::default_instance_ = NULL;

Library_LoadLibrary_Args* Library_LoadLibrary_Args::New() const {
  return new Library_LoadLibrary_Args;
}

void Library_LoadLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LoadLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_LoadLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LoadLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LoadLibrary_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LoadLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LoadLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LoadLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LoadLibrary_Args::MergeFrom(const Library_LoadLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LoadLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LoadLibrary_Args::CopyFrom(const Library_LoadLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LoadLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Library_LoadLibrary_Args::Swap(Library_LoadLibrary_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LoadLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LoadLibrary_Args_descriptor_;
  metadata.reflection = Library_LoadLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_LoadLibrary_Result::kLibraryFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_LoadLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_LoadLibrary_Result >, 11, false >
  Library_LoadLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_LoadLibrary_Result::default_instance());
Library_LoadLibrary_Result::Library_LoadLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LoadLibrary_Result::InitAsDefaultInstance() {
  library_ = const_cast< ::generated::proto::library::Library*>(&::generated::proto::library::Library::default_instance());
}

Library_LoadLibrary_Result::Library_LoadLibrary_Result(const Library_LoadLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LoadLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  library_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LoadLibrary_Result::~Library_LoadLibrary_Result() {
  SharedDtor();
}

void Library_LoadLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
    delete library_;
  }
}

void Library_LoadLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LoadLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LoadLibrary_Result_descriptor_;
}

const Library_LoadLibrary_Result& Library_LoadLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_LoadLibrary_Result* Library_LoadLibrary_Result::default_instance_ = NULL;

Library_LoadLibrary_Result* Library_LoadLibrary_Result::New() const {
  return new Library_LoadLibrary_Result;
}

void Library_LoadLibrary_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_library()) {
      if (library_ != NULL) library_->::generated::proto::library::Library::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LoadLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.library.Library library = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_library()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_LoadLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->library(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LoadLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.library.Library library = 1;
  if (has_library()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->library(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LoadLibrary_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.library.Library library = 1;
    if (has_library()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->library());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LoadLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LoadLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LoadLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LoadLibrary_Result::MergeFrom(const Library_LoadLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_library()) {
      mutable_library()->::generated::proto::library::Library::MergeFrom(from.library());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LoadLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LoadLibrary_Result::CopyFrom(const Library_LoadLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LoadLibrary_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_library()) {
    if (!this->library().IsInitialized()) return false;
  }
  return true;
}

void Library_LoadLibrary_Result::Swap(Library_LoadLibrary_Result* other) {
  if (other != this) {
    std::swap(library_, other->library_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LoadLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LoadLibrary_Result_descriptor_;
  metadata.reflection = Library_LoadLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_LoadLibrary::Library_LoadLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_LoadLibrary::InitAsDefaultInstance() {
}

Library_LoadLibrary::Library_LoadLibrary(const Library_LoadLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_LoadLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_LoadLibrary::~Library_LoadLibrary() {
  SharedDtor();
}

void Library_LoadLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_LoadLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_LoadLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_LoadLibrary_descriptor_;
}

const Library_LoadLibrary& Library_LoadLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_LoadLibrary* Library_LoadLibrary::default_instance_ = NULL;

Library_LoadLibrary* Library_LoadLibrary::New() const {
  return new Library_LoadLibrary;
}

void Library_LoadLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_LoadLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_LoadLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_LoadLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_LoadLibrary::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_LoadLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_LoadLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_LoadLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_LoadLibrary::MergeFrom(const Library_LoadLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_LoadLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_LoadLibrary::CopyFrom(const Library_LoadLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_LoadLibrary::IsInitialized() const {

  return true;
}

void Library_LoadLibrary::Swap(Library_LoadLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_LoadLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_LoadLibrary_descriptor_;
  metadata.reflection = Library_LoadLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_UnloadLibrary_Args::kLibraryIDFieldNumber;
const int Library_UnloadLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_UnloadLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_UnloadLibrary_Args >, 11, false >
  Library_UnloadLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_UnloadLibrary_Args::default_instance());
Library_UnloadLibrary_Args::Library_UnloadLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_UnloadLibrary_Args::InitAsDefaultInstance() {
}

Library_UnloadLibrary_Args::Library_UnloadLibrary_Args(const Library_UnloadLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_UnloadLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_UnloadLibrary_Args::~Library_UnloadLibrary_Args() {
  SharedDtor();
}

void Library_UnloadLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_UnloadLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_UnloadLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_UnloadLibrary_Args_descriptor_;
}

const Library_UnloadLibrary_Args& Library_UnloadLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_UnloadLibrary_Args* Library_UnloadLibrary_Args::default_instance_ = NULL;

Library_UnloadLibrary_Args* Library_UnloadLibrary_Args::New() const {
  return new Library_UnloadLibrary_Args;
}

void Library_UnloadLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_UnloadLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_UnloadLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_UnloadLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_UnloadLibrary_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_UnloadLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_UnloadLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_UnloadLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_UnloadLibrary_Args::MergeFrom(const Library_UnloadLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_UnloadLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_UnloadLibrary_Args::CopyFrom(const Library_UnloadLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_UnloadLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Library_UnloadLibrary_Args::Swap(Library_UnloadLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_UnloadLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_UnloadLibrary_Args_descriptor_;
  metadata.reflection = Library_UnloadLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_UnloadLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_UnloadLibrary_Result >, 11, false >
  Library_UnloadLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_UnloadLibrary_Result::default_instance());
Library_UnloadLibrary_Result::Library_UnloadLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_UnloadLibrary_Result::InitAsDefaultInstance() {
}

Library_UnloadLibrary_Result::Library_UnloadLibrary_Result(const Library_UnloadLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_UnloadLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_UnloadLibrary_Result::~Library_UnloadLibrary_Result() {
  SharedDtor();
}

void Library_UnloadLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_UnloadLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_UnloadLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_UnloadLibrary_Result_descriptor_;
}

const Library_UnloadLibrary_Result& Library_UnloadLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_UnloadLibrary_Result* Library_UnloadLibrary_Result::default_instance_ = NULL;

Library_UnloadLibrary_Result* Library_UnloadLibrary_Result::New() const {
  return new Library_UnloadLibrary_Result;
}

void Library_UnloadLibrary_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_UnloadLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_UnloadLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_UnloadLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_UnloadLibrary_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_UnloadLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_UnloadLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_UnloadLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_UnloadLibrary_Result::MergeFrom(const Library_UnloadLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_UnloadLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_UnloadLibrary_Result::CopyFrom(const Library_UnloadLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_UnloadLibrary_Result::IsInitialized() const {

  return true;
}

void Library_UnloadLibrary_Result::Swap(Library_UnloadLibrary_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_UnloadLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_UnloadLibrary_Result_descriptor_;
  metadata.reflection = Library_UnloadLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_UnloadLibrary::Library_UnloadLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_UnloadLibrary::InitAsDefaultInstance() {
}

Library_UnloadLibrary::Library_UnloadLibrary(const Library_UnloadLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_UnloadLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_UnloadLibrary::~Library_UnloadLibrary() {
  SharedDtor();
}

void Library_UnloadLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_UnloadLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_UnloadLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_UnloadLibrary_descriptor_;
}

const Library_UnloadLibrary& Library_UnloadLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_UnloadLibrary* Library_UnloadLibrary::default_instance_ = NULL;

Library_UnloadLibrary* Library_UnloadLibrary::New() const {
  return new Library_UnloadLibrary;
}

void Library_UnloadLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_UnloadLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_UnloadLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_UnloadLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_UnloadLibrary::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_UnloadLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_UnloadLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_UnloadLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_UnloadLibrary::MergeFrom(const Library_UnloadLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_UnloadLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_UnloadLibrary::CopyFrom(const Library_UnloadLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_UnloadLibrary::IsInitialized() const {

  return true;
}

void Library_UnloadLibrary::Swap(Library_UnloadLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_UnloadLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_UnloadLibrary_descriptor_;
  metadata.reflection = Library_UnloadLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_StoreLibrary_Args::kLibraryIDFieldNumber;
const int Library_StoreLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_StoreLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_StoreLibrary_Args >, 11, false >
  Library_StoreLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_StoreLibrary_Args::default_instance());
Library_StoreLibrary_Args::Library_StoreLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_StoreLibrary_Args::InitAsDefaultInstance() {
}

Library_StoreLibrary_Args::Library_StoreLibrary_Args(const Library_StoreLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_StoreLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_StoreLibrary_Args::~Library_StoreLibrary_Args() {
  SharedDtor();
}

void Library_StoreLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_StoreLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_StoreLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_StoreLibrary_Args_descriptor_;
}

const Library_StoreLibrary_Args& Library_StoreLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_StoreLibrary_Args* Library_StoreLibrary_Args::default_instance_ = NULL;

Library_StoreLibrary_Args* Library_StoreLibrary_Args::New() const {
  return new Library_StoreLibrary_Args;
}

void Library_StoreLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_StoreLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_StoreLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_StoreLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_StoreLibrary_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_StoreLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_StoreLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_StoreLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_StoreLibrary_Args::MergeFrom(const Library_StoreLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_StoreLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_StoreLibrary_Args::CopyFrom(const Library_StoreLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_StoreLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Library_StoreLibrary_Args::Swap(Library_StoreLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_StoreLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_StoreLibrary_Args_descriptor_;
  metadata.reflection = Library_StoreLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_StoreLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_StoreLibrary_Result >, 11, false >
  Library_StoreLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_StoreLibrary_Result::default_instance());
Library_StoreLibrary_Result::Library_StoreLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_StoreLibrary_Result::InitAsDefaultInstance() {
}

Library_StoreLibrary_Result::Library_StoreLibrary_Result(const Library_StoreLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_StoreLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_StoreLibrary_Result::~Library_StoreLibrary_Result() {
  SharedDtor();
}

void Library_StoreLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_StoreLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_StoreLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_StoreLibrary_Result_descriptor_;
}

const Library_StoreLibrary_Result& Library_StoreLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_StoreLibrary_Result* Library_StoreLibrary_Result::default_instance_ = NULL;

Library_StoreLibrary_Result* Library_StoreLibrary_Result::New() const {
  return new Library_StoreLibrary_Result;
}

void Library_StoreLibrary_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_StoreLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_StoreLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_StoreLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_StoreLibrary_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_StoreLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_StoreLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_StoreLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_StoreLibrary_Result::MergeFrom(const Library_StoreLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_StoreLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_StoreLibrary_Result::CopyFrom(const Library_StoreLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_StoreLibrary_Result::IsInitialized() const {

  return true;
}

void Library_StoreLibrary_Result::Swap(Library_StoreLibrary_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_StoreLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_StoreLibrary_Result_descriptor_;
  metadata.reflection = Library_StoreLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_StoreLibrary::Library_StoreLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_StoreLibrary::InitAsDefaultInstance() {
}

Library_StoreLibrary::Library_StoreLibrary(const Library_StoreLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_StoreLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_StoreLibrary::~Library_StoreLibrary() {
  SharedDtor();
}

void Library_StoreLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_StoreLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_StoreLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_StoreLibrary_descriptor_;
}

const Library_StoreLibrary& Library_StoreLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_StoreLibrary* Library_StoreLibrary::default_instance_ = NULL;

Library_StoreLibrary* Library_StoreLibrary::New() const {
  return new Library_StoreLibrary;
}

void Library_StoreLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_StoreLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_StoreLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_StoreLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_StoreLibrary::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_StoreLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_StoreLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_StoreLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_StoreLibrary::MergeFrom(const Library_StoreLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_StoreLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_StoreLibrary::CopyFrom(const Library_StoreLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_StoreLibrary::IsInitialized() const {

  return true;
}

void Library_StoreLibrary::Swap(Library_StoreLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_StoreLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_StoreLibrary_descriptor_;
  metadata.reflection = Library_StoreLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_BuildLibrary_Args::kLibraryIDFieldNumber;
const int Library_BuildLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_BuildLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_BuildLibrary_Args >, 11, false >
  Library_BuildLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_BuildLibrary_Args::default_instance());
Library_BuildLibrary_Args::Library_BuildLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_BuildLibrary_Args::InitAsDefaultInstance() {
}

Library_BuildLibrary_Args::Library_BuildLibrary_Args(const Library_BuildLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_BuildLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_BuildLibrary_Args::~Library_BuildLibrary_Args() {
  SharedDtor();
}

void Library_BuildLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_BuildLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_BuildLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_BuildLibrary_Args_descriptor_;
}

const Library_BuildLibrary_Args& Library_BuildLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_BuildLibrary_Args* Library_BuildLibrary_Args::default_instance_ = NULL;

Library_BuildLibrary_Args* Library_BuildLibrary_Args::New() const {
  return new Library_BuildLibrary_Args;
}

void Library_BuildLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_BuildLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_BuildLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_BuildLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_BuildLibrary_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_BuildLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_BuildLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_BuildLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_BuildLibrary_Args::MergeFrom(const Library_BuildLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_BuildLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_BuildLibrary_Args::CopyFrom(const Library_BuildLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_BuildLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Library_BuildLibrary_Args::Swap(Library_BuildLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_BuildLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_BuildLibrary_Args_descriptor_;
  metadata.reflection = Library_BuildLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_BuildLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_BuildLibrary_Result >, 11, false >
  Library_BuildLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_BuildLibrary_Result::default_instance());
Library_BuildLibrary_Result::Library_BuildLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_BuildLibrary_Result::InitAsDefaultInstance() {
}

Library_BuildLibrary_Result::Library_BuildLibrary_Result(const Library_BuildLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_BuildLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_BuildLibrary_Result::~Library_BuildLibrary_Result() {
  SharedDtor();
}

void Library_BuildLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_BuildLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_BuildLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_BuildLibrary_Result_descriptor_;
}

const Library_BuildLibrary_Result& Library_BuildLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_BuildLibrary_Result* Library_BuildLibrary_Result::default_instance_ = NULL;

Library_BuildLibrary_Result* Library_BuildLibrary_Result::New() const {
  return new Library_BuildLibrary_Result;
}

void Library_BuildLibrary_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_BuildLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_BuildLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_BuildLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_BuildLibrary_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_BuildLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_BuildLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_BuildLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_BuildLibrary_Result::MergeFrom(const Library_BuildLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_BuildLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_BuildLibrary_Result::CopyFrom(const Library_BuildLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_BuildLibrary_Result::IsInitialized() const {

  return true;
}

void Library_BuildLibrary_Result::Swap(Library_BuildLibrary_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_BuildLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_BuildLibrary_Result_descriptor_;
  metadata.reflection = Library_BuildLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_BuildLibrary::Library_BuildLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_BuildLibrary::InitAsDefaultInstance() {
}

Library_BuildLibrary::Library_BuildLibrary(const Library_BuildLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_BuildLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_BuildLibrary::~Library_BuildLibrary() {
  SharedDtor();
}

void Library_BuildLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_BuildLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_BuildLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_BuildLibrary_descriptor_;
}

const Library_BuildLibrary& Library_BuildLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_BuildLibrary* Library_BuildLibrary::default_instance_ = NULL;

Library_BuildLibrary* Library_BuildLibrary::New() const {
  return new Library_BuildLibrary;
}

void Library_BuildLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_BuildLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_BuildLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_BuildLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_BuildLibrary::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_BuildLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_BuildLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_BuildLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_BuildLibrary::MergeFrom(const Library_BuildLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_BuildLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_BuildLibrary::CopyFrom(const Library_BuildLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_BuildLibrary::IsInitialized() const {

  return true;
}

void Library_BuildLibrary::Swap(Library_BuildLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_BuildLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_BuildLibrary_descriptor_;
  metadata.reflection = Library_BuildLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_RunLibrary_Args::kLibraryIDFieldNumber;
const int Library_RunLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_RunLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_RunLibrary_Args >, 11, false >
  Library_RunLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_RunLibrary_Args::default_instance());
Library_RunLibrary_Args::Library_RunLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_RunLibrary_Args::InitAsDefaultInstance() {
}

Library_RunLibrary_Args::Library_RunLibrary_Args(const Library_RunLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_RunLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_RunLibrary_Args::~Library_RunLibrary_Args() {
  SharedDtor();
}

void Library_RunLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_RunLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_RunLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_RunLibrary_Args_descriptor_;
}

const Library_RunLibrary_Args& Library_RunLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_RunLibrary_Args* Library_RunLibrary_Args::default_instance_ = NULL;

Library_RunLibrary_Args* Library_RunLibrary_Args::New() const {
  return new Library_RunLibrary_Args;
}

void Library_RunLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_RunLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_RunLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_RunLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_RunLibrary_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_RunLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_RunLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_RunLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_RunLibrary_Args::MergeFrom(const Library_RunLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_RunLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_RunLibrary_Args::CopyFrom(const Library_RunLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_RunLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Library_RunLibrary_Args::Swap(Library_RunLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_RunLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_RunLibrary_Args_descriptor_;
  metadata.reflection = Library_RunLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_RunLibrary_Result::kProcessIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_RunLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_RunLibrary_Result >, 11, false >
  Library_RunLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_RunLibrary_Result::default_instance());
Library_RunLibrary_Result::Library_RunLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_RunLibrary_Result::InitAsDefaultInstance() {
}

Library_RunLibrary_Result::Library_RunLibrary_Result(const Library_RunLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_RunLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  processid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_RunLibrary_Result::~Library_RunLibrary_Result() {
  SharedDtor();
}

void Library_RunLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_RunLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_RunLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_RunLibrary_Result_descriptor_;
}

const Library_RunLibrary_Result& Library_RunLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_RunLibrary_Result* Library_RunLibrary_Result::default_instance_ = NULL;

Library_RunLibrary_Result* Library_RunLibrary_Result::New() const {
  return new Library_RunLibrary_Result;
}

void Library_RunLibrary_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    processid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_RunLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 processID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &processid_)));
          set_has_processid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_RunLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 processID = 1;
  if (has_processid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->processid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_RunLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 processID = 1;
  if (has_processid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->processid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_RunLibrary_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 processID = 1;
    if (has_processid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->processid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_RunLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_RunLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_RunLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_RunLibrary_Result::MergeFrom(const Library_RunLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_processid()) {
      set_processid(from.processid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_RunLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_RunLibrary_Result::CopyFrom(const Library_RunLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_RunLibrary_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Library_RunLibrary_Result::Swap(Library_RunLibrary_Result* other) {
  if (other != this) {
    std::swap(processid_, other->processid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_RunLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_RunLibrary_Result_descriptor_;
  metadata.reflection = Library_RunLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_RunLibrary::Library_RunLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_RunLibrary::InitAsDefaultInstance() {
}

Library_RunLibrary::Library_RunLibrary(const Library_RunLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_RunLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_RunLibrary::~Library_RunLibrary() {
  SharedDtor();
}

void Library_RunLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_RunLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_RunLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_RunLibrary_descriptor_;
}

const Library_RunLibrary& Library_RunLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_RunLibrary* Library_RunLibrary::default_instance_ = NULL;

Library_RunLibrary* Library_RunLibrary::New() const {
  return new Library_RunLibrary;
}

void Library_RunLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_RunLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_RunLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_RunLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_RunLibrary::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_RunLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_RunLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_RunLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_RunLibrary::MergeFrom(const Library_RunLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_RunLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_RunLibrary::CopyFrom(const Library_RunLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_RunLibrary::IsInitialized() const {

  return true;
}

void Library_RunLibrary::Swap(Library_RunLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_RunLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_RunLibrary_descriptor_;
  metadata.reflection = Library_RunLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Library_InterpretLibrary_Args::kLibraryIDFieldNumber;
const int Library_InterpretLibrary_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_InterpretLibrary_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_InterpretLibrary_Args >, 11, false >
  Library_InterpretLibrary_Args::req(kReqFieldNumber, ::generated::proto::batch::Library_InterpretLibrary_Args::default_instance());
Library_InterpretLibrary_Args::Library_InterpretLibrary_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_InterpretLibrary_Args::InitAsDefaultInstance() {
}

Library_InterpretLibrary_Args::Library_InterpretLibrary_Args(const Library_InterpretLibrary_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_InterpretLibrary_Args::SharedCtor() {
  _cached_size_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_InterpretLibrary_Args::~Library_InterpretLibrary_Args() {
  SharedDtor();
}

void Library_InterpretLibrary_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_InterpretLibrary_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_InterpretLibrary_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_InterpretLibrary_Args_descriptor_;
}

const Library_InterpretLibrary_Args& Library_InterpretLibrary_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_InterpretLibrary_Args* Library_InterpretLibrary_Args::default_instance_ = NULL;

Library_InterpretLibrary_Args* Library_InterpretLibrary_Args::New() const {
  return new Library_InterpretLibrary_Args;
}

void Library_InterpretLibrary_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_InterpretLibrary_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 libraryID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Library_InterpretLibrary_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->libraryid(), output);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_InterpretLibrary_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 libraryID = 1;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->libraryid(), target);
  }

  // required int32 projectID = 2;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_InterpretLibrary_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 libraryID = 1;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 2;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_InterpretLibrary_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_InterpretLibrary_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_InterpretLibrary_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_InterpretLibrary_Args::MergeFrom(const Library_InterpretLibrary_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_InterpretLibrary_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_InterpretLibrary_Args::CopyFrom(const Library_InterpretLibrary_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_InterpretLibrary_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Library_InterpretLibrary_Args::Swap(Library_InterpretLibrary_Args* other) {
  if (other != this) {
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_InterpretLibrary_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_InterpretLibrary_Args_descriptor_;
  metadata.reflection = Library_InterpretLibrary_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Library_InterpretLibrary_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Library_InterpretLibrary_Result >, 11, false >
  Library_InterpretLibrary_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Library_InterpretLibrary_Result::default_instance());
Library_InterpretLibrary_Result::Library_InterpretLibrary_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_InterpretLibrary_Result::InitAsDefaultInstance() {
}

Library_InterpretLibrary_Result::Library_InterpretLibrary_Result(const Library_InterpretLibrary_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_InterpretLibrary_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_InterpretLibrary_Result::~Library_InterpretLibrary_Result() {
  SharedDtor();
}

void Library_InterpretLibrary_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_InterpretLibrary_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_InterpretLibrary_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_InterpretLibrary_Result_descriptor_;
}

const Library_InterpretLibrary_Result& Library_InterpretLibrary_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_InterpretLibrary_Result* Library_InterpretLibrary_Result::default_instance_ = NULL;

Library_InterpretLibrary_Result* Library_InterpretLibrary_Result::New() const {
  return new Library_InterpretLibrary_Result;
}

void Library_InterpretLibrary_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_InterpretLibrary_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_InterpretLibrary_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_InterpretLibrary_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_InterpretLibrary_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_InterpretLibrary_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_InterpretLibrary_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_InterpretLibrary_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_InterpretLibrary_Result::MergeFrom(const Library_InterpretLibrary_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_InterpretLibrary_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_InterpretLibrary_Result::CopyFrom(const Library_InterpretLibrary_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_InterpretLibrary_Result::IsInitialized() const {

  return true;
}

void Library_InterpretLibrary_Result::Swap(Library_InterpretLibrary_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_InterpretLibrary_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_InterpretLibrary_Result_descriptor_;
  metadata.reflection = Library_InterpretLibrary_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library_InterpretLibrary::Library_InterpretLibrary()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library_InterpretLibrary::InitAsDefaultInstance() {
}

Library_InterpretLibrary::Library_InterpretLibrary(const Library_InterpretLibrary& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library_InterpretLibrary::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library_InterpretLibrary::~Library_InterpretLibrary() {
  SharedDtor();
}

void Library_InterpretLibrary::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library_InterpretLibrary::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library_InterpretLibrary::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_InterpretLibrary_descriptor_;
}

const Library_InterpretLibrary& Library_InterpretLibrary::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library_InterpretLibrary* Library_InterpretLibrary::default_instance_ = NULL;

Library_InterpretLibrary* Library_InterpretLibrary::New() const {
  return new Library_InterpretLibrary;
}

void Library_InterpretLibrary::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library_InterpretLibrary::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library_InterpretLibrary::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library_InterpretLibrary::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library_InterpretLibrary::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library_InterpretLibrary::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library_InterpretLibrary* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library_InterpretLibrary*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library_InterpretLibrary::MergeFrom(const Library_InterpretLibrary& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library_InterpretLibrary::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library_InterpretLibrary::CopyFrom(const Library_InterpretLibrary& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library_InterpretLibrary::IsInitialized() const {

  return true;
}

void Library_InterpretLibrary::Swap(Library_InterpretLibrary* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library_InterpretLibrary::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_InterpretLibrary_descriptor_;
  metadata.reflection = Library_InterpretLibrary_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Library::Library()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Library::InitAsDefaultInstance() {
}

Library::Library(const Library& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Library::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Library::~Library() {
  SharedDtor();
}

void Library::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Library::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Library::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Library_descriptor_;
}

const Library& Library::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Library* Library::default_instance_ = NULL;

Library* Library::New() const {
  return new Library;
}

void Library::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Library::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Library::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Library::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Library::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Library::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Library* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Library*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Library::MergeFrom(const Library& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Library::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Library::CopyFrom(const Library& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Library::IsInitialized() const {

  return true;
}

void Library::Swap(Library* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Library::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Library_descriptor_;
  metadata.reflection = Library_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Initialize_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Initialize_Args >, 11, false >
  Maintenance_Initialize_Args::req(kReqFieldNumber, ::generated::proto::batch::Maintenance_Initialize_Args::default_instance());
Maintenance_Initialize_Args::Maintenance_Initialize_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Initialize_Args::InitAsDefaultInstance() {
}

Maintenance_Initialize_Args::Maintenance_Initialize_Args(const Maintenance_Initialize_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Initialize_Args::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Initialize_Args::~Maintenance_Initialize_Args() {
  SharedDtor();
}

void Maintenance_Initialize_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Initialize_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Initialize_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Initialize_Args_descriptor_;
}

const Maintenance_Initialize_Args& Maintenance_Initialize_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Initialize_Args* Maintenance_Initialize_Args::default_instance_ = NULL;

Maintenance_Initialize_Args* Maintenance_Initialize_Args::New() const {
  return new Maintenance_Initialize_Args;
}

void Maintenance_Initialize_Args::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Initialize_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Initialize_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Initialize_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Initialize_Args::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Initialize_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Initialize_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Initialize_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Initialize_Args::MergeFrom(const Maintenance_Initialize_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Initialize_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Initialize_Args::CopyFrom(const Maintenance_Initialize_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Initialize_Args::IsInitialized() const {

  return true;
}

void Maintenance_Initialize_Args::Swap(Maintenance_Initialize_Args* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Initialize_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Initialize_Args_descriptor_;
  metadata.reflection = Maintenance_Initialize_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Initialize_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Initialize_Result >, 11, false >
  Maintenance_Initialize_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Maintenance_Initialize_Result::default_instance());
Maintenance_Initialize_Result::Maintenance_Initialize_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Initialize_Result::InitAsDefaultInstance() {
}

Maintenance_Initialize_Result::Maintenance_Initialize_Result(const Maintenance_Initialize_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Initialize_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Initialize_Result::~Maintenance_Initialize_Result() {
  SharedDtor();
}

void Maintenance_Initialize_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Initialize_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Initialize_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Initialize_Result_descriptor_;
}

const Maintenance_Initialize_Result& Maintenance_Initialize_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Initialize_Result* Maintenance_Initialize_Result::default_instance_ = NULL;

Maintenance_Initialize_Result* Maintenance_Initialize_Result::New() const {
  return new Maintenance_Initialize_Result;
}

void Maintenance_Initialize_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Initialize_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Initialize_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Initialize_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Initialize_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Initialize_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Initialize_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Initialize_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Initialize_Result::MergeFrom(const Maintenance_Initialize_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Initialize_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Initialize_Result::CopyFrom(const Maintenance_Initialize_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Initialize_Result::IsInitialized() const {

  return true;
}

void Maintenance_Initialize_Result::Swap(Maintenance_Initialize_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Initialize_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Initialize_Result_descriptor_;
  metadata.reflection = Maintenance_Initialize_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance_Initialize::Maintenance_Initialize()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Initialize::InitAsDefaultInstance() {
}

Maintenance_Initialize::Maintenance_Initialize(const Maintenance_Initialize& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Initialize::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Initialize::~Maintenance_Initialize() {
  SharedDtor();
}

void Maintenance_Initialize::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Initialize::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Initialize::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Initialize_descriptor_;
}

const Maintenance_Initialize& Maintenance_Initialize::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Initialize* Maintenance_Initialize::default_instance_ = NULL;

Maintenance_Initialize* Maintenance_Initialize::New() const {
  return new Maintenance_Initialize;
}

void Maintenance_Initialize::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Initialize::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Initialize::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Initialize::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Initialize::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Initialize::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Initialize* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Initialize*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Initialize::MergeFrom(const Maintenance_Initialize& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Initialize::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Initialize::CopyFrom(const Maintenance_Initialize& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Initialize::IsInitialized() const {

  return true;
}

void Maintenance_Initialize::Swap(Maintenance_Initialize* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Initialize::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Initialize_descriptor_;
  metadata.reflection = Maintenance_Initialize_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Maintenance_Ping_Args::kDataFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Ping_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Ping_Args >, 11, false >
  Maintenance_Ping_Args::req(kReqFieldNumber, ::generated::proto::batch::Maintenance_Ping_Args::default_instance());
Maintenance_Ping_Args::Maintenance_Ping_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Ping_Args::InitAsDefaultInstance() {
}

Maintenance_Ping_Args::Maintenance_Ping_Args(const Maintenance_Ping_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Ping_Args::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Ping_Args::~Maintenance_Ping_Args() {
  SharedDtor();
}

void Maintenance_Ping_Args::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void Maintenance_Ping_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Ping_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Ping_Args_descriptor_;
}

const Maintenance_Ping_Args& Maintenance_Ping_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Ping_Args* Maintenance_Ping_Args::default_instance_ = NULL;

Maintenance_Ping_Args* Maintenance_Ping_Args::New() const {
  return new Maintenance_Ping_Args;
}

void Maintenance_Ping_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Ping_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Maintenance_Ping_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Ping_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Ping_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Ping_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Ping_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Ping_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Ping_Args::MergeFrom(const Maintenance_Ping_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Ping_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Ping_Args::CopyFrom(const Maintenance_Ping_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Ping_Args::IsInitialized() const {

  return true;
}

void Maintenance_Ping_Args::Swap(Maintenance_Ping_Args* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Ping_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Ping_Args_descriptor_;
  metadata.reflection = Maintenance_Ping_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Maintenance_Ping_Result::kDataFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Ping_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Ping_Result >, 11, false >
  Maintenance_Ping_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Maintenance_Ping_Result::default_instance());
Maintenance_Ping_Result::Maintenance_Ping_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Ping_Result::InitAsDefaultInstance() {
}

Maintenance_Ping_Result::Maintenance_Ping_Result(const Maintenance_Ping_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Ping_Result::SharedCtor() {
  _cached_size_ = 0;
  data_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Ping_Result::~Maintenance_Ping_Result() {
  SharedDtor();
}

void Maintenance_Ping_Result::SharedDtor() {
  if (data_ != &::google::protobuf::internal::kEmptyString) {
    delete data_;
  }
  if (this != default_instance_) {
  }
}

void Maintenance_Ping_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Ping_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Ping_Result_descriptor_;
}

const Maintenance_Ping_Result& Maintenance_Ping_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Ping_Result* Maintenance_Ping_Result::default_instance_ = NULL;

Maintenance_Ping_Result* Maintenance_Ping_Result::New() const {
  return new Maintenance_Ping_Result;
}

void Maintenance_Ping_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_data()) {
      if (data_ != &::google::protobuf::internal::kEmptyString) {
        data_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Ping_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // optional bytes data = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(
                input, this->mutable_data()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Maintenance_Ping_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // optional bytes data = 1;
  if (has_data()) {
    ::google::protobuf::internal::WireFormatLite::WriteBytes(
      1, this->data(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Ping_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // optional bytes data = 1;
  if (has_data()) {
    target =
      ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(
        1, this->data(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Ping_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // optional bytes data = 1;
    if (has_data()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::BytesSize(
          this->data());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Ping_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Ping_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Ping_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Ping_Result::MergeFrom(const Maintenance_Ping_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_data()) {
      set_data(from.data());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Ping_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Ping_Result::CopyFrom(const Maintenance_Ping_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Ping_Result::IsInitialized() const {

  return true;
}

void Maintenance_Ping_Result::Swap(Maintenance_Ping_Result* other) {
  if (other != this) {
    std::swap(data_, other->data_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Ping_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Ping_Result_descriptor_;
  metadata.reflection = Maintenance_Ping_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance_Ping::Maintenance_Ping()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Ping::InitAsDefaultInstance() {
}

Maintenance_Ping::Maintenance_Ping(const Maintenance_Ping& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Ping::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Ping::~Maintenance_Ping() {
  SharedDtor();
}

void Maintenance_Ping::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Ping::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Ping::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Ping_descriptor_;
}

const Maintenance_Ping& Maintenance_Ping::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Ping* Maintenance_Ping::default_instance_ = NULL;

Maintenance_Ping* Maintenance_Ping::New() const {
  return new Maintenance_Ping;
}

void Maintenance_Ping::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Ping::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Ping::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Ping::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Ping::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Ping::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Ping* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Ping*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Ping::MergeFrom(const Maintenance_Ping& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Ping::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Ping::CopyFrom(const Maintenance_Ping& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Ping::IsInitialized() const {

  return true;
}

void Maintenance_Ping::Swap(Maintenance_Ping* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Ping::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Ping_descriptor_;
  metadata.reflection = Maintenance_Ping_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Dump_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Dump_Args >, 11, false >
  Maintenance_Dump_Args::req(kReqFieldNumber, ::generated::proto::batch::Maintenance_Dump_Args::default_instance());
Maintenance_Dump_Args::Maintenance_Dump_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Dump_Args::InitAsDefaultInstance() {
}

Maintenance_Dump_Args::Maintenance_Dump_Args(const Maintenance_Dump_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Dump_Args::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Dump_Args::~Maintenance_Dump_Args() {
  SharedDtor();
}

void Maintenance_Dump_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Dump_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Dump_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Dump_Args_descriptor_;
}

const Maintenance_Dump_Args& Maintenance_Dump_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Dump_Args* Maintenance_Dump_Args::default_instance_ = NULL;

Maintenance_Dump_Args* Maintenance_Dump_Args::New() const {
  return new Maintenance_Dump_Args;
}

void Maintenance_Dump_Args::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Dump_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Dump_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Dump_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Dump_Args::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Dump_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Dump_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Dump_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Dump_Args::MergeFrom(const Maintenance_Dump_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Dump_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Dump_Args::CopyFrom(const Maintenance_Dump_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Dump_Args::IsInitialized() const {

  return true;
}

void Maintenance_Dump_Args::Swap(Maintenance_Dump_Args* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Dump_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Dump_Args_descriptor_;
  metadata.reflection = Maintenance_Dump_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Dump_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Dump_Result >, 11, false >
  Maintenance_Dump_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Maintenance_Dump_Result::default_instance());
Maintenance_Dump_Result::Maintenance_Dump_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Dump_Result::InitAsDefaultInstance() {
}

Maintenance_Dump_Result::Maintenance_Dump_Result(const Maintenance_Dump_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Dump_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Dump_Result::~Maintenance_Dump_Result() {
  SharedDtor();
}

void Maintenance_Dump_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Dump_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Dump_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Dump_Result_descriptor_;
}

const Maintenance_Dump_Result& Maintenance_Dump_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Dump_Result* Maintenance_Dump_Result::default_instance_ = NULL;

Maintenance_Dump_Result* Maintenance_Dump_Result::New() const {
  return new Maintenance_Dump_Result;
}

void Maintenance_Dump_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Dump_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Dump_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Dump_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Dump_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Dump_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Dump_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Dump_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Dump_Result::MergeFrom(const Maintenance_Dump_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Dump_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Dump_Result::CopyFrom(const Maintenance_Dump_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Dump_Result::IsInitialized() const {

  return true;
}

void Maintenance_Dump_Result::Swap(Maintenance_Dump_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Dump_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Dump_Result_descriptor_;
  metadata.reflection = Maintenance_Dump_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance_Dump::Maintenance_Dump()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Dump::InitAsDefaultInstance() {
}

Maintenance_Dump::Maintenance_Dump(const Maintenance_Dump& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Dump::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Dump::~Maintenance_Dump() {
  SharedDtor();
}

void Maintenance_Dump::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Dump::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Dump::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Dump_descriptor_;
}

const Maintenance_Dump& Maintenance_Dump::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Dump* Maintenance_Dump::default_instance_ = NULL;

Maintenance_Dump* Maintenance_Dump::New() const {
  return new Maintenance_Dump;
}

void Maintenance_Dump::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Dump::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Dump::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Dump::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Dump::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Dump::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Dump* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Dump*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Dump::MergeFrom(const Maintenance_Dump& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Dump::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Dump::CopyFrom(const Maintenance_Dump& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Dump::IsInitialized() const {

  return true;
}

void Maintenance_Dump::Swap(Maintenance_Dump* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Dump::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Dump_descriptor_;
  metadata.reflection = Maintenance_Dump_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Shutdown_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Shutdown_Args >, 11, false >
  Maintenance_Shutdown_Args::req(kReqFieldNumber, ::generated::proto::batch::Maintenance_Shutdown_Args::default_instance());
Maintenance_Shutdown_Args::Maintenance_Shutdown_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Shutdown_Args::InitAsDefaultInstance() {
}

Maintenance_Shutdown_Args::Maintenance_Shutdown_Args(const Maintenance_Shutdown_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Shutdown_Args::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Shutdown_Args::~Maintenance_Shutdown_Args() {
  SharedDtor();
}

void Maintenance_Shutdown_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Shutdown_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Shutdown_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Shutdown_Args_descriptor_;
}

const Maintenance_Shutdown_Args& Maintenance_Shutdown_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Shutdown_Args* Maintenance_Shutdown_Args::default_instance_ = NULL;

Maintenance_Shutdown_Args* Maintenance_Shutdown_Args::New() const {
  return new Maintenance_Shutdown_Args;
}

void Maintenance_Shutdown_Args::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Shutdown_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Shutdown_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Shutdown_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Shutdown_Args::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Shutdown_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Shutdown_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Shutdown_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Shutdown_Args::MergeFrom(const Maintenance_Shutdown_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Shutdown_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Shutdown_Args::CopyFrom(const Maintenance_Shutdown_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Shutdown_Args::IsInitialized() const {

  return true;
}

void Maintenance_Shutdown_Args::Swap(Maintenance_Shutdown_Args* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Shutdown_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Shutdown_Args_descriptor_;
  metadata.reflection = Maintenance_Shutdown_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Maintenance_Shutdown_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Maintenance_Shutdown_Result >, 11, false >
  Maintenance_Shutdown_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Maintenance_Shutdown_Result::default_instance());
Maintenance_Shutdown_Result::Maintenance_Shutdown_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Shutdown_Result::InitAsDefaultInstance() {
}

Maintenance_Shutdown_Result::Maintenance_Shutdown_Result(const Maintenance_Shutdown_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Shutdown_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Shutdown_Result::~Maintenance_Shutdown_Result() {
  SharedDtor();
}

void Maintenance_Shutdown_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Shutdown_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Shutdown_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Shutdown_Result_descriptor_;
}

const Maintenance_Shutdown_Result& Maintenance_Shutdown_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Shutdown_Result* Maintenance_Shutdown_Result::default_instance_ = NULL;

Maintenance_Shutdown_Result* Maintenance_Shutdown_Result::New() const {
  return new Maintenance_Shutdown_Result;
}

void Maintenance_Shutdown_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Shutdown_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Shutdown_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Shutdown_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Shutdown_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Shutdown_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Shutdown_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Shutdown_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Shutdown_Result::MergeFrom(const Maintenance_Shutdown_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Shutdown_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Shutdown_Result::CopyFrom(const Maintenance_Shutdown_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Shutdown_Result::IsInitialized() const {

  return true;
}

void Maintenance_Shutdown_Result::Swap(Maintenance_Shutdown_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Shutdown_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Shutdown_Result_descriptor_;
  metadata.reflection = Maintenance_Shutdown_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance_Shutdown::Maintenance_Shutdown()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance_Shutdown::InitAsDefaultInstance() {
}

Maintenance_Shutdown::Maintenance_Shutdown(const Maintenance_Shutdown& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance_Shutdown::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance_Shutdown::~Maintenance_Shutdown() {
  SharedDtor();
}

void Maintenance_Shutdown::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance_Shutdown::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance_Shutdown::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_Shutdown_descriptor_;
}

const Maintenance_Shutdown& Maintenance_Shutdown::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance_Shutdown* Maintenance_Shutdown::default_instance_ = NULL;

Maintenance_Shutdown* Maintenance_Shutdown::New() const {
  return new Maintenance_Shutdown;
}

void Maintenance_Shutdown::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance_Shutdown::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance_Shutdown::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance_Shutdown::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance_Shutdown::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance_Shutdown::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance_Shutdown* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance_Shutdown*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance_Shutdown::MergeFrom(const Maintenance_Shutdown& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance_Shutdown::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance_Shutdown::CopyFrom(const Maintenance_Shutdown& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance_Shutdown::IsInitialized() const {

  return true;
}

void Maintenance_Shutdown::Swap(Maintenance_Shutdown* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance_Shutdown::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_Shutdown_descriptor_;
  metadata.reflection = Maintenance_Shutdown_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Maintenance::Maintenance()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Maintenance::InitAsDefaultInstance() {
}

Maintenance::Maintenance(const Maintenance& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Maintenance::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Maintenance::~Maintenance() {
  SharedDtor();
}

void Maintenance::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Maintenance::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Maintenance::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Maintenance_descriptor_;
}

const Maintenance& Maintenance::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Maintenance* Maintenance::default_instance_ = NULL;

Maintenance* Maintenance::New() const {
  return new Maintenance;
}

void Maintenance::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Maintenance::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Maintenance::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Maintenance::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Maintenance::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Maintenance::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Maintenance* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Maintenance*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Maintenance::MergeFrom(const Maintenance& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Maintenance::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Maintenance::CopyFrom(const Maintenance& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Maintenance::IsInitialized() const {

  return true;
}

void Maintenance::Swap(Maintenance* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Maintenance::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Maintenance_descriptor_;
  metadata.reflection = Maintenance_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int NodeDefault_NodeDefaults_Args::kNodeIDFieldNumber;
const int NodeDefault_NodeDefaults_Args::kBcFieldNumber;
const int NodeDefault_NodeDefaults_Args::kLibraryIDFieldNumber;
const int NodeDefault_NodeDefaults_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int NodeDefault_NodeDefaults_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::NodeDefault_NodeDefaults_Args >, 11, false >
  NodeDefault_NodeDefaults_Args::req(kReqFieldNumber, ::generated::proto::batch::NodeDefault_NodeDefaults_Args::default_instance());
NodeDefault_NodeDefaults_Args::NodeDefault_NodeDefaults_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_NodeDefaults_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

NodeDefault_NodeDefaults_Args::NodeDefault_NodeDefaults_Args(const NodeDefault_NodeDefaults_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_NodeDefaults_Args::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_NodeDefaults_Args::~NodeDefault_NodeDefaults_Args() {
  SharedDtor();
}

void NodeDefault_NodeDefaults_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void NodeDefault_NodeDefaults_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_NodeDefaults_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_NodeDefaults_Args_descriptor_;
}

const NodeDefault_NodeDefaults_Args& NodeDefault_NodeDefaults_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_NodeDefaults_Args* NodeDefault_NodeDefaults_Args::default_instance_ = NULL;

NodeDefault_NodeDefaults_Args* NodeDefault_NodeDefaults_Args::New() const {
  return new NodeDefault_NodeDefaults_Args;
}

void NodeDefault_NodeDefaults_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_NodeDefaults_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NodeDefault_NodeDefaults_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      2, this->bc(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_NodeDefaults_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 2;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        2, this->bc(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_NodeDefaults_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 2;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_NodeDefaults_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_NodeDefaults_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_NodeDefaults_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_NodeDefaults_Args::MergeFrom(const NodeDefault_NodeDefaults_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_NodeDefaults_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_NodeDefaults_Args::CopyFrom(const NodeDefault_NodeDefaults_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_NodeDefaults_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void NodeDefault_NodeDefaults_Args::Swap(NodeDefault_NodeDefaults_Args* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_NodeDefaults_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_NodeDefaults_Args_descriptor_;
  metadata.reflection = NodeDefault_NodeDefaults_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int NodeDefault_NodeDefaults_Result::kDefaultsMapFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int NodeDefault_NodeDefaults_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::NodeDefault_NodeDefaults_Result >, 11, false >
  NodeDefault_NodeDefaults_Result::rsp(kRspFieldNumber, ::generated::proto::batch::NodeDefault_NodeDefaults_Result::default_instance());
NodeDefault_NodeDefaults_Result::NodeDefault_NodeDefaults_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_NodeDefaults_Result::InitAsDefaultInstance() {
  defaultsmap_ = const_cast< ::generated::proto::nodedefault::DefaultsMap*>(&::generated::proto::nodedefault::DefaultsMap::default_instance());
}

NodeDefault_NodeDefaults_Result::NodeDefault_NodeDefaults_Result(const NodeDefault_NodeDefaults_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_NodeDefaults_Result::SharedCtor() {
  _cached_size_ = 0;
  defaultsmap_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_NodeDefaults_Result::~NodeDefault_NodeDefaults_Result() {
  SharedDtor();
}

void NodeDefault_NodeDefaults_Result::SharedDtor() {
  if (this != default_instance_) {
    delete defaultsmap_;
  }
}

void NodeDefault_NodeDefaults_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_NodeDefaults_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_NodeDefaults_Result_descriptor_;
}

const NodeDefault_NodeDefaults_Result& NodeDefault_NodeDefaults_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_NodeDefaults_Result* NodeDefault_NodeDefaults_Result::default_instance_ = NULL;

NodeDefault_NodeDefaults_Result* NodeDefault_NodeDefaults_Result::New() const {
  return new NodeDefault_NodeDefaults_Result;
}

void NodeDefault_NodeDefaults_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_defaultsmap()) {
      if (defaultsmap_ != NULL) defaultsmap_->::generated::proto::nodedefault::DefaultsMap::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_NodeDefaults_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.nodedefault.DefaultsMap defaultsMap = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_defaultsmap()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NodeDefault_NodeDefaults_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.nodedefault.DefaultsMap defaultsMap = 1;
  if (has_defaultsmap()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->defaultsmap(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_NodeDefaults_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.nodedefault.DefaultsMap defaultsMap = 1;
  if (has_defaultsmap()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->defaultsmap(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_NodeDefaults_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.nodedefault.DefaultsMap defaultsMap = 1;
    if (has_defaultsmap()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->defaultsmap());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_NodeDefaults_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_NodeDefaults_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_NodeDefaults_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_NodeDefaults_Result::MergeFrom(const NodeDefault_NodeDefaults_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_defaultsmap()) {
      mutable_defaultsmap()->::generated::proto::nodedefault::DefaultsMap::MergeFrom(from.defaultsmap());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_NodeDefaults_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_NodeDefaults_Result::CopyFrom(const NodeDefault_NodeDefaults_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_NodeDefaults_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void NodeDefault_NodeDefaults_Result::Swap(NodeDefault_NodeDefaults_Result* other) {
  if (other != this) {
    std::swap(defaultsmap_, other->defaultsmap_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_NodeDefaults_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_NodeDefaults_Result_descriptor_;
  metadata.reflection = NodeDefault_NodeDefaults_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

NodeDefault_NodeDefaults::NodeDefault_NodeDefaults()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_NodeDefaults::InitAsDefaultInstance() {
}

NodeDefault_NodeDefaults::NodeDefault_NodeDefaults(const NodeDefault_NodeDefaults& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_NodeDefaults::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_NodeDefaults::~NodeDefault_NodeDefaults() {
  SharedDtor();
}

void NodeDefault_NodeDefaults::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NodeDefault_NodeDefaults::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_NodeDefaults::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_NodeDefaults_descriptor_;
}

const NodeDefault_NodeDefaults& NodeDefault_NodeDefaults::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_NodeDefaults* NodeDefault_NodeDefaults::default_instance_ = NULL;

NodeDefault_NodeDefaults* NodeDefault_NodeDefaults::New() const {
  return new NodeDefault_NodeDefaults;
}

void NodeDefault_NodeDefaults::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_NodeDefaults::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void NodeDefault_NodeDefaults::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_NodeDefaults::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_NodeDefaults::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_NodeDefaults::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_NodeDefaults* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_NodeDefaults*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_NodeDefaults::MergeFrom(const NodeDefault_NodeDefaults& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_NodeDefaults::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_NodeDefaults::CopyFrom(const NodeDefault_NodeDefaults& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_NodeDefaults::IsInitialized() const {

  return true;
}

void NodeDefault_NodeDefaults::Swap(NodeDefault_NodeDefaults* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_NodeDefaults::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_NodeDefaults_descriptor_;
  metadata.reflection = NodeDefault_NodeDefaults_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int NodeDefault_SetNodeDefault_Args::kInPortFieldNumber;
const int NodeDefault_SetNodeDefault_Args::kValueFieldNumber;
const int NodeDefault_SetNodeDefault_Args::kNodeIDFieldNumber;
const int NodeDefault_SetNodeDefault_Args::kBcFieldNumber;
const int NodeDefault_SetNodeDefault_Args::kLibraryIDFieldNumber;
const int NodeDefault_SetNodeDefault_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int NodeDefault_SetNodeDefault_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::NodeDefault_SetNodeDefault_Args >, 11, false >
  NodeDefault_SetNodeDefault_Args::req(kReqFieldNumber, ::generated::proto::batch::NodeDefault_SetNodeDefault_Args::default_instance());
NodeDefault_SetNodeDefault_Args::NodeDefault_SetNodeDefault_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_SetNodeDefault_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

NodeDefault_SetNodeDefault_Args::NodeDefault_SetNodeDefault_Args(const NodeDefault_SetNodeDefault_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_SetNodeDefault_Args::SharedCtor() {
  _cached_size_ = 0;
  value_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_SetNodeDefault_Args::~NodeDefault_SetNodeDefault_Args() {
  SharedDtor();
}

void NodeDefault_SetNodeDefault_Args::SharedDtor() {
  if (value_ != &::google::protobuf::internal::kEmptyString) {
    delete value_;
  }
  if (this != default_instance_) {
    delete bc_;
  }
}

void NodeDefault_SetNodeDefault_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_SetNodeDefault_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_SetNodeDefault_Args_descriptor_;
}

const NodeDefault_SetNodeDefault_Args& NodeDefault_SetNodeDefault_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_SetNodeDefault_Args* NodeDefault_SetNodeDefault_Args::default_instance_ = NULL;

NodeDefault_SetNodeDefault_Args* NodeDefault_SetNodeDefault_Args::New() const {
  return new NodeDefault_SetNodeDefault_Args;
}

void NodeDefault_SetNodeDefault_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (has_value()) {
      if (value_ != &::google::protobuf::internal::kEmptyString) {
        value_->clear();
      }
    }
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_SetNodeDefault_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 inPort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_inport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_inPort;
        if (input->ExpectTag(18)) goto parse_value;
        break;
      }

      // required string value = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_value:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_value()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->value().data(), this->value().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(34)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(48)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 6;
      case 6: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NodeDefault_SetNodeDefault_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->inport(i), output);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->value(), output);
  }

  // required int32 nodeID = 3;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 4;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      4, this->bc(), output);
  }

  // required int32 libraryID = 5;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->libraryid(), output);
  }

  // required int32 projectID = 6;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(6, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_SetNodeDefault_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->inport(i), target);
  }

  // required string value = 2;
  if (has_value()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->value().data(), this->value().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->value(), target);
  }

  // required int32 nodeID = 3;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 4;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        4, this->bc(), target);
  }

  // required int32 libraryID = 5;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->libraryid(), target);
  }

  // required int32 projectID = 6;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(6, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_SetNodeDefault_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required string value = 2;
    if (has_value()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->value());
    }

    // required int32 nodeID = 3;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 4;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 5;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 6;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 inPort = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->inport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->inport(i));
    }
    total_size += 1 * this->inport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_SetNodeDefault_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_SetNodeDefault_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_SetNodeDefault_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_SetNodeDefault_Args::MergeFrom(const NodeDefault_SetNodeDefault_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  inport_.MergeFrom(from.inport_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_value()) {
      set_value(from.value());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_SetNodeDefault_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_SetNodeDefault_Args::CopyFrom(const NodeDefault_SetNodeDefault_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_SetNodeDefault_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000003e) != 0x0000003e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void NodeDefault_SetNodeDefault_Args::Swap(NodeDefault_SetNodeDefault_Args* other) {
  if (other != this) {
    inport_.Swap(&other->inport_);
    std::swap(value_, other->value_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_SetNodeDefault_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_SetNodeDefault_Args_descriptor_;
  metadata.reflection = NodeDefault_SetNodeDefault_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int NodeDefault_SetNodeDefault_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::NodeDefault_SetNodeDefault_Result >, 11, false >
  NodeDefault_SetNodeDefault_Result::rsp(kRspFieldNumber, ::generated::proto::batch::NodeDefault_SetNodeDefault_Result::default_instance());
NodeDefault_SetNodeDefault_Result::NodeDefault_SetNodeDefault_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_SetNodeDefault_Result::InitAsDefaultInstance() {
}

NodeDefault_SetNodeDefault_Result::NodeDefault_SetNodeDefault_Result(const NodeDefault_SetNodeDefault_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_SetNodeDefault_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_SetNodeDefault_Result::~NodeDefault_SetNodeDefault_Result() {
  SharedDtor();
}

void NodeDefault_SetNodeDefault_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NodeDefault_SetNodeDefault_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_SetNodeDefault_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_SetNodeDefault_Result_descriptor_;
}

const NodeDefault_SetNodeDefault_Result& NodeDefault_SetNodeDefault_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_SetNodeDefault_Result* NodeDefault_SetNodeDefault_Result::default_instance_ = NULL;

NodeDefault_SetNodeDefault_Result* NodeDefault_SetNodeDefault_Result::New() const {
  return new NodeDefault_SetNodeDefault_Result;
}

void NodeDefault_SetNodeDefault_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_SetNodeDefault_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void NodeDefault_SetNodeDefault_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_SetNodeDefault_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_SetNodeDefault_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_SetNodeDefault_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_SetNodeDefault_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_SetNodeDefault_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_SetNodeDefault_Result::MergeFrom(const NodeDefault_SetNodeDefault_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_SetNodeDefault_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_SetNodeDefault_Result::CopyFrom(const NodeDefault_SetNodeDefault_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_SetNodeDefault_Result::IsInitialized() const {

  return true;
}

void NodeDefault_SetNodeDefault_Result::Swap(NodeDefault_SetNodeDefault_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_SetNodeDefault_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_SetNodeDefault_Result_descriptor_;
  metadata.reflection = NodeDefault_SetNodeDefault_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

NodeDefault_SetNodeDefault::NodeDefault_SetNodeDefault()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_SetNodeDefault::InitAsDefaultInstance() {
}

NodeDefault_SetNodeDefault::NodeDefault_SetNodeDefault(const NodeDefault_SetNodeDefault& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_SetNodeDefault::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_SetNodeDefault::~NodeDefault_SetNodeDefault() {
  SharedDtor();
}

void NodeDefault_SetNodeDefault::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NodeDefault_SetNodeDefault::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_SetNodeDefault::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_SetNodeDefault_descriptor_;
}

const NodeDefault_SetNodeDefault& NodeDefault_SetNodeDefault::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_SetNodeDefault* NodeDefault_SetNodeDefault::default_instance_ = NULL;

NodeDefault_SetNodeDefault* NodeDefault_SetNodeDefault::New() const {
  return new NodeDefault_SetNodeDefault;
}

void NodeDefault_SetNodeDefault::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_SetNodeDefault::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void NodeDefault_SetNodeDefault::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_SetNodeDefault::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_SetNodeDefault::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_SetNodeDefault::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_SetNodeDefault* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_SetNodeDefault*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_SetNodeDefault::MergeFrom(const NodeDefault_SetNodeDefault& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_SetNodeDefault::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_SetNodeDefault::CopyFrom(const NodeDefault_SetNodeDefault& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_SetNodeDefault::IsInitialized() const {

  return true;
}

void NodeDefault_SetNodeDefault::Swap(NodeDefault_SetNodeDefault* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_SetNodeDefault::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_SetNodeDefault_descriptor_;
  metadata.reflection = NodeDefault_SetNodeDefault_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int NodeDefault_RemoveNodeDefault_Args::kInPortFieldNumber;
const int NodeDefault_RemoveNodeDefault_Args::kNodeIDFieldNumber;
const int NodeDefault_RemoveNodeDefault_Args::kBcFieldNumber;
const int NodeDefault_RemoveNodeDefault_Args::kLibraryIDFieldNumber;
const int NodeDefault_RemoveNodeDefault_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int NodeDefault_RemoveNodeDefault_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::NodeDefault_RemoveNodeDefault_Args >, 11, false >
  NodeDefault_RemoveNodeDefault_Args::req(kReqFieldNumber, ::generated::proto::batch::NodeDefault_RemoveNodeDefault_Args::default_instance());
NodeDefault_RemoveNodeDefault_Args::NodeDefault_RemoveNodeDefault_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_RemoveNodeDefault_Args::InitAsDefaultInstance() {
  bc_ = const_cast< ::generated::proto::crumb::Breadcrumbs*>(&::generated::proto::crumb::Breadcrumbs::default_instance());
}

NodeDefault_RemoveNodeDefault_Args::NodeDefault_RemoveNodeDefault_Args(const NodeDefault_RemoveNodeDefault_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_RemoveNodeDefault_Args::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  bc_ = NULL;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_RemoveNodeDefault_Args::~NodeDefault_RemoveNodeDefault_Args() {
  SharedDtor();
}

void NodeDefault_RemoveNodeDefault_Args::SharedDtor() {
  if (this != default_instance_) {
    delete bc_;
  }
}

void NodeDefault_RemoveNodeDefault_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_RemoveNodeDefault_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_RemoveNodeDefault_Args_descriptor_;
}

const NodeDefault_RemoveNodeDefault_Args& NodeDefault_RemoveNodeDefault_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_RemoveNodeDefault_Args* NodeDefault_RemoveNodeDefault_Args::default_instance_ = NULL;

NodeDefault_RemoveNodeDefault_Args* NodeDefault_RemoveNodeDefault_Args::New() const {
  return new NodeDefault_RemoveNodeDefault_Args;
}

void NodeDefault_RemoveNodeDefault_Args::Clear() {
  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    nodeid_ = 0;
    if (has_bc()) {
      if (bc_ != NULL) bc_->::generated::proto::crumb::Breadcrumbs::Clear();
    }
    libraryid_ = 0;
    projectid_ = 0;
  }
  inport_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_RemoveNodeDefault_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 inPort = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_inPort:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_inport())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_inport())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_inPort;
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_bc;
        break;
      }

      // required .generated.proto.crumb.Breadcrumbs bc = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_bc:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_bc()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(40)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 5;
      case 5: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void NodeDefault_RemoveNodeDefault_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->inport(i), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->bc(), output);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->libraryid(), output);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(5, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_RemoveNodeDefault_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 inPort = 1;
  for (int i = 0; i < this->inport_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->inport(i), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required .generated.proto.crumb.Breadcrumbs bc = 3;
  if (has_bc()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->bc(), target);
  }

  // required int32 libraryID = 4;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->libraryid(), target);
  }

  // required int32 projectID = 5;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(5, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_RemoveNodeDefault_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required .generated.proto.crumb.Breadcrumbs bc = 3;
    if (has_bc()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->bc());
    }

    // required int32 libraryID = 4;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 5;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  // repeated int32 inPort = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->inport_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->inport(i));
    }
    total_size += 1 * this->inport_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_RemoveNodeDefault_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_RemoveNodeDefault_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_RemoveNodeDefault_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_RemoveNodeDefault_Args::MergeFrom(const NodeDefault_RemoveNodeDefault_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  inport_.MergeFrom(from.inport_);
  if (from._has_bits_[1 / 32] & (0xffu << (1 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_bc()) {
      mutable_bc()->::generated::proto::crumb::Breadcrumbs::MergeFrom(from.bc());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_RemoveNodeDefault_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_RemoveNodeDefault_Args::CopyFrom(const NodeDefault_RemoveNodeDefault_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_RemoveNodeDefault_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000001e) != 0x0000001e) return false;

  if (has_bc()) {
    if (!this->bc().IsInitialized()) return false;
  }
  return true;
}

void NodeDefault_RemoveNodeDefault_Args::Swap(NodeDefault_RemoveNodeDefault_Args* other) {
  if (other != this) {
    inport_.Swap(&other->inport_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(bc_, other->bc_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_RemoveNodeDefault_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_RemoveNodeDefault_Args_descriptor_;
  metadata.reflection = NodeDefault_RemoveNodeDefault_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int NodeDefault_RemoveNodeDefault_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::NodeDefault_RemoveNodeDefault_Result >, 11, false >
  NodeDefault_RemoveNodeDefault_Result::rsp(kRspFieldNumber, ::generated::proto::batch::NodeDefault_RemoveNodeDefault_Result::default_instance());
NodeDefault_RemoveNodeDefault_Result::NodeDefault_RemoveNodeDefault_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_RemoveNodeDefault_Result::InitAsDefaultInstance() {
}

NodeDefault_RemoveNodeDefault_Result::NodeDefault_RemoveNodeDefault_Result(const NodeDefault_RemoveNodeDefault_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_RemoveNodeDefault_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_RemoveNodeDefault_Result::~NodeDefault_RemoveNodeDefault_Result() {
  SharedDtor();
}

void NodeDefault_RemoveNodeDefault_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NodeDefault_RemoveNodeDefault_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_RemoveNodeDefault_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_RemoveNodeDefault_Result_descriptor_;
}

const NodeDefault_RemoveNodeDefault_Result& NodeDefault_RemoveNodeDefault_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_RemoveNodeDefault_Result* NodeDefault_RemoveNodeDefault_Result::default_instance_ = NULL;

NodeDefault_RemoveNodeDefault_Result* NodeDefault_RemoveNodeDefault_Result::New() const {
  return new NodeDefault_RemoveNodeDefault_Result;
}

void NodeDefault_RemoveNodeDefault_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_RemoveNodeDefault_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void NodeDefault_RemoveNodeDefault_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_RemoveNodeDefault_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_RemoveNodeDefault_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_RemoveNodeDefault_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_RemoveNodeDefault_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_RemoveNodeDefault_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_RemoveNodeDefault_Result::MergeFrom(const NodeDefault_RemoveNodeDefault_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_RemoveNodeDefault_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_RemoveNodeDefault_Result::CopyFrom(const NodeDefault_RemoveNodeDefault_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_RemoveNodeDefault_Result::IsInitialized() const {

  return true;
}

void NodeDefault_RemoveNodeDefault_Result::Swap(NodeDefault_RemoveNodeDefault_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_RemoveNodeDefault_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_RemoveNodeDefault_Result_descriptor_;
  metadata.reflection = NodeDefault_RemoveNodeDefault_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

NodeDefault_RemoveNodeDefault::NodeDefault_RemoveNodeDefault()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault_RemoveNodeDefault::InitAsDefaultInstance() {
}

NodeDefault_RemoveNodeDefault::NodeDefault_RemoveNodeDefault(const NodeDefault_RemoveNodeDefault& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault_RemoveNodeDefault::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault_RemoveNodeDefault::~NodeDefault_RemoveNodeDefault() {
  SharedDtor();
}

void NodeDefault_RemoveNodeDefault::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NodeDefault_RemoveNodeDefault::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault_RemoveNodeDefault::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_RemoveNodeDefault_descriptor_;
}

const NodeDefault_RemoveNodeDefault& NodeDefault_RemoveNodeDefault::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault_RemoveNodeDefault* NodeDefault_RemoveNodeDefault::default_instance_ = NULL;

NodeDefault_RemoveNodeDefault* NodeDefault_RemoveNodeDefault::New() const {
  return new NodeDefault_RemoveNodeDefault;
}

void NodeDefault_RemoveNodeDefault::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault_RemoveNodeDefault::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void NodeDefault_RemoveNodeDefault::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault_RemoveNodeDefault::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault_RemoveNodeDefault::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault_RemoveNodeDefault::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault_RemoveNodeDefault* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault_RemoveNodeDefault*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault_RemoveNodeDefault::MergeFrom(const NodeDefault_RemoveNodeDefault& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault_RemoveNodeDefault::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault_RemoveNodeDefault::CopyFrom(const NodeDefault_RemoveNodeDefault& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault_RemoveNodeDefault::IsInitialized() const {

  return true;
}

void NodeDefault_RemoveNodeDefault::Swap(NodeDefault_RemoveNodeDefault* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault_RemoveNodeDefault::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_RemoveNodeDefault_descriptor_;
  metadata.reflection = NodeDefault_RemoveNodeDefault_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

NodeDefault::NodeDefault()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void NodeDefault::InitAsDefaultInstance() {
}

NodeDefault::NodeDefault(const NodeDefault& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void NodeDefault::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

NodeDefault::~NodeDefault() {
  SharedDtor();
}

void NodeDefault::SharedDtor() {
  if (this != default_instance_) {
  }
}

void NodeDefault::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* NodeDefault::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return NodeDefault_descriptor_;
}

const NodeDefault& NodeDefault::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

NodeDefault* NodeDefault::default_instance_ = NULL;

NodeDefault* NodeDefault::New() const {
  return new NodeDefault;
}

void NodeDefault::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool NodeDefault::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void NodeDefault::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* NodeDefault::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int NodeDefault::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void NodeDefault::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const NodeDefault* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const NodeDefault*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void NodeDefault::MergeFrom(const NodeDefault& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void NodeDefault::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void NodeDefault::CopyFrom(const NodeDefault& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool NodeDefault::IsInitialized() const {

  return true;
}

void NodeDefault::Swap(NodeDefault* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata NodeDefault::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = NodeDefault_descriptor_;
  metadata.reflection = NodeDefault_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Parser_ParseExpr_Args::kStrFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Parser_ParseExpr_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Parser_ParseExpr_Args >, 11, false >
  Parser_ParseExpr_Args::req(kReqFieldNumber, ::generated::proto::batch::Parser_ParseExpr_Args::default_instance());
Parser_ParseExpr_Args::Parser_ParseExpr_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseExpr_Args::InitAsDefaultInstance() {
}

Parser_ParseExpr_Args::Parser_ParseExpr_Args(const Parser_ParseExpr_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseExpr_Args::SharedCtor() {
  _cached_size_ = 0;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseExpr_Args::~Parser_ParseExpr_Args() {
  SharedDtor();
}

void Parser_ParseExpr_Args::SharedDtor() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void Parser_ParseExpr_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseExpr_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseExpr_Args_descriptor_;
}

const Parser_ParseExpr_Args& Parser_ParseExpr_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseExpr_Args* Parser_ParseExpr_Args::default_instance_ = NULL;

Parser_ParseExpr_Args* Parser_ParseExpr_Args::New() const {
  return new Parser_ParseExpr_Args;
}

void Parser_ParseExpr_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_str()) {
      if (str_ != &::google::protobuf::internal::kEmptyString) {
        str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseExpr_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string str = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parser_ParseExpr_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseExpr_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseExpr_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string str = 1;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseExpr_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseExpr_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseExpr_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseExpr_Args::MergeFrom(const Parser_ParseExpr_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_str()) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseExpr_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseExpr_Args::CopyFrom(const Parser_ParseExpr_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseExpr_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Parser_ParseExpr_Args::Swap(Parser_ParseExpr_Args* other) {
  if (other != this) {
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseExpr_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseExpr_Args_descriptor_;
  metadata.reflection = Parser_ParseExpr_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Parser_ParseExpr_Result::kExprFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Parser_ParseExpr_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Parser_ParseExpr_Result >, 11, false >
  Parser_ParseExpr_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Parser_ParseExpr_Result::default_instance());
Parser_ParseExpr_Result::Parser_ParseExpr_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseExpr_Result::InitAsDefaultInstance() {
  expr_ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
}

Parser_ParseExpr_Result::Parser_ParseExpr_Result(const Parser_ParseExpr_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseExpr_Result::SharedCtor() {
  _cached_size_ = 0;
  expr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseExpr_Result::~Parser_ParseExpr_Result() {
  SharedDtor();
}

void Parser_ParseExpr_Result::SharedDtor() {
  if (this != default_instance_) {
    delete expr_;
  }
}

void Parser_ParseExpr_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseExpr_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseExpr_Result_descriptor_;
}

const Parser_ParseExpr_Result& Parser_ParseExpr_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseExpr_Result* Parser_ParseExpr_Result::default_instance_ = NULL;

Parser_ParseExpr_Result* Parser_ParseExpr_Result::New() const {
  return new Parser_ParseExpr_Result;
}

void Parser_ParseExpr_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_expr()) {
      if (expr_ != NULL) expr_->::generated::proto::expr::Expr::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseExpr_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr expr = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parser_ParseExpr_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr expr = 1;
  if (has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->expr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseExpr_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr expr = 1;
  if (has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->expr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseExpr_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr expr = 1;
    if (has_expr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->expr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseExpr_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseExpr_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseExpr_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseExpr_Result::MergeFrom(const Parser_ParseExpr_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_expr()) {
      mutable_expr()->::generated::proto::expr::Expr::MergeFrom(from.expr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseExpr_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseExpr_Result::CopyFrom(const Parser_ParseExpr_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseExpr_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_expr()) {
    if (!this->expr().IsInitialized()) return false;
  }
  return true;
}

void Parser_ParseExpr_Result::Swap(Parser_ParseExpr_Result* other) {
  if (other != this) {
    std::swap(expr_, other->expr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseExpr_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseExpr_Result_descriptor_;
  metadata.reflection = Parser_ParseExpr_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Parser_ParseExpr::Parser_ParseExpr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseExpr::InitAsDefaultInstance() {
}

Parser_ParseExpr::Parser_ParseExpr(const Parser_ParseExpr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseExpr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseExpr::~Parser_ParseExpr() {
  SharedDtor();
}

void Parser_ParseExpr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Parser_ParseExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseExpr_descriptor_;
}

const Parser_ParseExpr& Parser_ParseExpr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseExpr* Parser_ParseExpr::default_instance_ = NULL;

Parser_ParseExpr* Parser_ParseExpr::New() const {
  return new Parser_ParseExpr;
}

void Parser_ParseExpr::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Parser_ParseExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseExpr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseExpr::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseExpr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseExpr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseExpr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseExpr::MergeFrom(const Parser_ParseExpr& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseExpr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseExpr::CopyFrom(const Parser_ParseExpr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseExpr::IsInitialized() const {

  return true;
}

void Parser_ParseExpr::Swap(Parser_ParseExpr* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseExpr_descriptor_;
  metadata.reflection = Parser_ParseExpr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Parser_ParsePat_Args::kStrFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Parser_ParsePat_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Parser_ParsePat_Args >, 11, false >
  Parser_ParsePat_Args::req(kReqFieldNumber, ::generated::proto::batch::Parser_ParsePat_Args::default_instance());
Parser_ParsePat_Args::Parser_ParsePat_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParsePat_Args::InitAsDefaultInstance() {
}

Parser_ParsePat_Args::Parser_ParsePat_Args(const Parser_ParsePat_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParsePat_Args::SharedCtor() {
  _cached_size_ = 0;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParsePat_Args::~Parser_ParsePat_Args() {
  SharedDtor();
}

void Parser_ParsePat_Args::SharedDtor() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void Parser_ParsePat_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParsePat_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParsePat_Args_descriptor_;
}

const Parser_ParsePat_Args& Parser_ParsePat_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParsePat_Args* Parser_ParsePat_Args::default_instance_ = NULL;

Parser_ParsePat_Args* Parser_ParsePat_Args::New() const {
  return new Parser_ParsePat_Args;
}

void Parser_ParsePat_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_str()) {
      if (str_ != &::google::protobuf::internal::kEmptyString) {
        str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParsePat_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string str = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parser_ParsePat_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParsePat_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParsePat_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string str = 1;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParsePat_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParsePat_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParsePat_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParsePat_Args::MergeFrom(const Parser_ParsePat_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_str()) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParsePat_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParsePat_Args::CopyFrom(const Parser_ParsePat_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParsePat_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Parser_ParsePat_Args::Swap(Parser_ParsePat_Args* other) {
  if (other != this) {
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParsePat_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParsePat_Args_descriptor_;
  metadata.reflection = Parser_ParsePat_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Parser_ParsePat_Result::kPatFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Parser_ParsePat_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Parser_ParsePat_Result >, 11, false >
  Parser_ParsePat_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Parser_ParsePat_Result::default_instance());
Parser_ParsePat_Result::Parser_ParsePat_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParsePat_Result::InitAsDefaultInstance() {
  pat_ = const_cast< ::generated::proto::pat::Pat*>(&::generated::proto::pat::Pat::default_instance());
}

Parser_ParsePat_Result::Parser_ParsePat_Result(const Parser_ParsePat_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParsePat_Result::SharedCtor() {
  _cached_size_ = 0;
  pat_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParsePat_Result::~Parser_ParsePat_Result() {
  SharedDtor();
}

void Parser_ParsePat_Result::SharedDtor() {
  if (this != default_instance_) {
    delete pat_;
  }
}

void Parser_ParsePat_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParsePat_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParsePat_Result_descriptor_;
}

const Parser_ParsePat_Result& Parser_ParsePat_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParsePat_Result* Parser_ParsePat_Result::default_instance_ = NULL;

Parser_ParsePat_Result* Parser_ParsePat_Result::New() const {
  return new Parser_ParsePat_Result;
}

void Parser_ParsePat_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_pat()) {
      if (pat_ != NULL) pat_->::generated::proto::pat::Pat::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParsePat_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.pat.Pat pat = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_pat()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parser_ParsePat_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.pat.Pat pat = 1;
  if (has_pat()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->pat(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParsePat_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.pat.Pat pat = 1;
  if (has_pat()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->pat(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParsePat_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.pat.Pat pat = 1;
    if (has_pat()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->pat());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParsePat_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParsePat_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParsePat_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParsePat_Result::MergeFrom(const Parser_ParsePat_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_pat()) {
      mutable_pat()->::generated::proto::pat::Pat::MergeFrom(from.pat());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParsePat_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParsePat_Result::CopyFrom(const Parser_ParsePat_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParsePat_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_pat()) {
    if (!this->pat().IsInitialized()) return false;
  }
  return true;
}

void Parser_ParsePat_Result::Swap(Parser_ParsePat_Result* other) {
  if (other != this) {
    std::swap(pat_, other->pat_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParsePat_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParsePat_Result_descriptor_;
  metadata.reflection = Parser_ParsePat_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Parser_ParsePat::Parser_ParsePat()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParsePat::InitAsDefaultInstance() {
}

Parser_ParsePat::Parser_ParsePat(const Parser_ParsePat& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParsePat::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParsePat::~Parser_ParsePat() {
  SharedDtor();
}

void Parser_ParsePat::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Parser_ParsePat::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParsePat::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParsePat_descriptor_;
}

const Parser_ParsePat& Parser_ParsePat::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParsePat* Parser_ParsePat::default_instance_ = NULL;

Parser_ParsePat* Parser_ParsePat::New() const {
  return new Parser_ParsePat;
}

void Parser_ParsePat::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParsePat::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Parser_ParsePat::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParsePat::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParsePat::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParsePat::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParsePat* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParsePat*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParsePat::MergeFrom(const Parser_ParsePat& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParsePat::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParsePat::CopyFrom(const Parser_ParsePat& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParsePat::IsInitialized() const {

  return true;
}

void Parser_ParsePat::Swap(Parser_ParsePat* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParsePat::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParsePat_descriptor_;
  metadata.reflection = Parser_ParsePat_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Parser_ParseType_Args::kStrFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Parser_ParseType_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Parser_ParseType_Args >, 11, false >
  Parser_ParseType_Args::req(kReqFieldNumber, ::generated::proto::batch::Parser_ParseType_Args::default_instance());
Parser_ParseType_Args::Parser_ParseType_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseType_Args::InitAsDefaultInstance() {
}

Parser_ParseType_Args::Parser_ParseType_Args(const Parser_ParseType_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseType_Args::SharedCtor() {
  _cached_size_ = 0;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseType_Args::~Parser_ParseType_Args() {
  SharedDtor();
}

void Parser_ParseType_Args::SharedDtor() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void Parser_ParseType_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseType_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseType_Args_descriptor_;
}

const Parser_ParseType_Args& Parser_ParseType_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseType_Args* Parser_ParseType_Args::default_instance_ = NULL;

Parser_ParseType_Args* Parser_ParseType_Args::New() const {
  return new Parser_ParseType_Args;
}

void Parser_ParseType_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_str()) {
      if (str_ != &::google::protobuf::internal::kEmptyString) {
        str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseType_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string str = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parser_ParseType_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseType_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseType_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string str = 1;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseType_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseType_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseType_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseType_Args::MergeFrom(const Parser_ParseType_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_str()) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseType_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseType_Args::CopyFrom(const Parser_ParseType_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseType_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Parser_ParseType_Args::Swap(Parser_ParseType_Args* other) {
  if (other != this) {
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseType_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseType_Args_descriptor_;
  metadata.reflection = Parser_ParseType_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Parser_ParseType_Result::kTypeFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Parser_ParseType_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Parser_ParseType_Result >, 11, false >
  Parser_ParseType_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Parser_ParseType_Result::default_instance());
Parser_ParseType_Result::Parser_ParseType_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseType_Result::InitAsDefaultInstance() {
  type_ = const_cast< ::generated::proto::type::Type*>(&::generated::proto::type::Type::default_instance());
}

Parser_ParseType_Result::Parser_ParseType_Result(const Parser_ParseType_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseType_Result::SharedCtor() {
  _cached_size_ = 0;
  type_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseType_Result::~Parser_ParseType_Result() {
  SharedDtor();
}

void Parser_ParseType_Result::SharedDtor() {
  if (this != default_instance_) {
    delete type_;
  }
}

void Parser_ParseType_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseType_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseType_Result_descriptor_;
}

const Parser_ParseType_Result& Parser_ParseType_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseType_Result* Parser_ParseType_Result::default_instance_ = NULL;

Parser_ParseType_Result* Parser_ParseType_Result::New() const {
  return new Parser_ParseType_Result;
}

void Parser_ParseType_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_type()) {
      if (type_ != NULL) type_->::generated::proto::type::Type::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseType_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.type.Type type = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_type()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parser_ParseType_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.type.Type type = 1;
  if (has_type()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->type(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseType_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.type.Type type = 1;
  if (has_type()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->type(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseType_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.type.Type type = 1;
    if (has_type()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->type());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseType_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseType_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseType_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseType_Result::MergeFrom(const Parser_ParseType_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_type()) {
      mutable_type()->::generated::proto::type::Type::MergeFrom(from.type());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseType_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseType_Result::CopyFrom(const Parser_ParseType_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseType_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_type()) {
    if (!this->type().IsInitialized()) return false;
  }
  return true;
}

void Parser_ParseType_Result::Swap(Parser_ParseType_Result* other) {
  if (other != this) {
    std::swap(type_, other->type_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseType_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseType_Result_descriptor_;
  metadata.reflection = Parser_ParseType_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Parser_ParseType::Parser_ParseType()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseType::InitAsDefaultInstance() {
}

Parser_ParseType::Parser_ParseType(const Parser_ParseType& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseType::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseType::~Parser_ParseType() {
  SharedDtor();
}

void Parser_ParseType::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Parser_ParseType::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseType::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseType_descriptor_;
}

const Parser_ParseType& Parser_ParseType::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseType* Parser_ParseType::default_instance_ = NULL;

Parser_ParseType* Parser_ParseType::New() const {
  return new Parser_ParseType;
}

void Parser_ParseType::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseType::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Parser_ParseType::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseType::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseType::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseType::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseType* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseType*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseType::MergeFrom(const Parser_ParseType& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseType::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseType::CopyFrom(const Parser_ParseType& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseType::IsInitialized() const {

  return true;
}

void Parser_ParseType::Swap(Parser_ParseType* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseType::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseType_descriptor_;
  metadata.reflection = Parser_ParseType_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Parser_ParseNodeExpr_Args::kStrFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Parser_ParseNodeExpr_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Parser_ParseNodeExpr_Args >, 11, false >
  Parser_ParseNodeExpr_Args::req(kReqFieldNumber, ::generated::proto::batch::Parser_ParseNodeExpr_Args::default_instance());
Parser_ParseNodeExpr_Args::Parser_ParseNodeExpr_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseNodeExpr_Args::InitAsDefaultInstance() {
}

Parser_ParseNodeExpr_Args::Parser_ParseNodeExpr_Args(const Parser_ParseNodeExpr_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseNodeExpr_Args::SharedCtor() {
  _cached_size_ = 0;
  str_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseNodeExpr_Args::~Parser_ParseNodeExpr_Args() {
  SharedDtor();
}

void Parser_ParseNodeExpr_Args::SharedDtor() {
  if (str_ != &::google::protobuf::internal::kEmptyString) {
    delete str_;
  }
  if (this != default_instance_) {
  }
}

void Parser_ParseNodeExpr_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseNodeExpr_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseNodeExpr_Args_descriptor_;
}

const Parser_ParseNodeExpr_Args& Parser_ParseNodeExpr_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseNodeExpr_Args* Parser_ParseNodeExpr_Args::default_instance_ = NULL;

Parser_ParseNodeExpr_Args* Parser_ParseNodeExpr_Args::New() const {
  return new Parser_ParseNodeExpr_Args;
}

void Parser_ParseNodeExpr_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_str()) {
      if (str_ != &::google::protobuf::internal::kEmptyString) {
        str_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseNodeExpr_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string str = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_str()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->str().data(), this->str().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parser_ParseNodeExpr_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->str(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseNodeExpr_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string str = 1;
  if (has_str()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->str().data(), this->str().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->str(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseNodeExpr_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string str = 1;
    if (has_str()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->str());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseNodeExpr_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseNodeExpr_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseNodeExpr_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseNodeExpr_Args::MergeFrom(const Parser_ParseNodeExpr_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_str()) {
      set_str(from.str());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseNodeExpr_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseNodeExpr_Args::CopyFrom(const Parser_ParseNodeExpr_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseNodeExpr_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Parser_ParseNodeExpr_Args::Swap(Parser_ParseNodeExpr_Args* other) {
  if (other != this) {
    std::swap(str_, other->str_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseNodeExpr_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseNodeExpr_Args_descriptor_;
  metadata.reflection = Parser_ParseNodeExpr_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Parser_ParseNodeExpr_Result::kExprFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Parser_ParseNodeExpr_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Parser_ParseNodeExpr_Result >, 11, false >
  Parser_ParseNodeExpr_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Parser_ParseNodeExpr_Result::default_instance());
Parser_ParseNodeExpr_Result::Parser_ParseNodeExpr_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseNodeExpr_Result::InitAsDefaultInstance() {
  expr_ = const_cast< ::generated::proto::expr::Expr*>(&::generated::proto::expr::Expr::default_instance());
}

Parser_ParseNodeExpr_Result::Parser_ParseNodeExpr_Result(const Parser_ParseNodeExpr_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseNodeExpr_Result::SharedCtor() {
  _cached_size_ = 0;
  expr_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseNodeExpr_Result::~Parser_ParseNodeExpr_Result() {
  SharedDtor();
}

void Parser_ParseNodeExpr_Result::SharedDtor() {
  if (this != default_instance_) {
    delete expr_;
  }
}

void Parser_ParseNodeExpr_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseNodeExpr_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseNodeExpr_Result_descriptor_;
}

const Parser_ParseNodeExpr_Result& Parser_ParseNodeExpr_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseNodeExpr_Result* Parser_ParseNodeExpr_Result::default_instance_ = NULL;

Parser_ParseNodeExpr_Result* Parser_ParseNodeExpr_Result::New() const {
  return new Parser_ParseNodeExpr_Result;
}

void Parser_ParseNodeExpr_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_expr()) {
      if (expr_ != NULL) expr_->::generated::proto::expr::Expr::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseNodeExpr_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.expr.Expr expr = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_expr()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Parser_ParseNodeExpr_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.expr.Expr expr = 1;
  if (has_expr()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->expr(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseNodeExpr_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.expr.Expr expr = 1;
  if (has_expr()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->expr(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseNodeExpr_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.expr.Expr expr = 1;
    if (has_expr()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->expr());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseNodeExpr_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseNodeExpr_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseNodeExpr_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseNodeExpr_Result::MergeFrom(const Parser_ParseNodeExpr_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_expr()) {
      mutable_expr()->::generated::proto::expr::Expr::MergeFrom(from.expr());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseNodeExpr_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseNodeExpr_Result::CopyFrom(const Parser_ParseNodeExpr_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseNodeExpr_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_expr()) {
    if (!this->expr().IsInitialized()) return false;
  }
  return true;
}

void Parser_ParseNodeExpr_Result::Swap(Parser_ParseNodeExpr_Result* other) {
  if (other != this) {
    std::swap(expr_, other->expr_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseNodeExpr_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseNodeExpr_Result_descriptor_;
  metadata.reflection = Parser_ParseNodeExpr_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Parser_ParseNodeExpr::Parser_ParseNodeExpr()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser_ParseNodeExpr::InitAsDefaultInstance() {
}

Parser_ParseNodeExpr::Parser_ParseNodeExpr(const Parser_ParseNodeExpr& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser_ParseNodeExpr::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser_ParseNodeExpr::~Parser_ParseNodeExpr() {
  SharedDtor();
}

void Parser_ParseNodeExpr::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Parser_ParseNodeExpr::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser_ParseNodeExpr::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_ParseNodeExpr_descriptor_;
}

const Parser_ParseNodeExpr& Parser_ParseNodeExpr::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser_ParseNodeExpr* Parser_ParseNodeExpr::default_instance_ = NULL;

Parser_ParseNodeExpr* Parser_ParseNodeExpr::New() const {
  return new Parser_ParseNodeExpr;
}

void Parser_ParseNodeExpr::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser_ParseNodeExpr::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Parser_ParseNodeExpr::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser_ParseNodeExpr::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser_ParseNodeExpr::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser_ParseNodeExpr::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser_ParseNodeExpr* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser_ParseNodeExpr*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser_ParseNodeExpr::MergeFrom(const Parser_ParseNodeExpr& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser_ParseNodeExpr::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser_ParseNodeExpr::CopyFrom(const Parser_ParseNodeExpr& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser_ParseNodeExpr::IsInitialized() const {

  return true;
}

void Parser_ParseNodeExpr::Swap(Parser_ParseNodeExpr* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser_ParseNodeExpr::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_ParseNodeExpr_descriptor_;
  metadata.reflection = Parser_ParseNodeExpr_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Parser::Parser()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Parser::InitAsDefaultInstance() {
}

Parser::Parser(const Parser& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Parser::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Parser::~Parser() {
  SharedDtor();
}

void Parser::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Parser::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Parser::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Parser_descriptor_;
}

const Parser& Parser::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Parser* Parser::default_instance_ = NULL;

Parser* Parser::New() const {
  return new Parser;
}

void Parser::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Parser::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Parser::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Parser::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Parser::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Parser::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Parser* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Parser*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Parser::MergeFrom(const Parser& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Parser::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Parser::CopyFrom(const Parser& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Parser::IsInitialized() const {

  return true;
}

void Parser::Swap(Parser* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Parser::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Parser_descriptor_;
  metadata.reflection = Parser_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Process_Processes_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Process_Processes_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Process_Processes_Args >, 11, false >
  Process_Processes_Args::req(kReqFieldNumber, ::generated::proto::batch::Process_Processes_Args::default_instance());
Process_Processes_Args::Process_Processes_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Process_Processes_Args::InitAsDefaultInstance() {
}

Process_Processes_Args::Process_Processes_Args(const Process_Processes_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Process_Processes_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Process_Processes_Args::~Process_Processes_Args() {
  SharedDtor();
}

void Process_Processes_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Process_Processes_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process_Processes_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Process_Processes_Args_descriptor_;
}

const Process_Processes_Args& Process_Processes_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Process_Processes_Args* Process_Processes_Args::default_instance_ = NULL;

Process_Processes_Args* Process_Processes_Args::New() const {
  return new Process_Processes_Args;
}

void Process_Processes_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Process_Processes_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Process_Processes_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Process_Processes_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Process_Processes_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process_Processes_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Process_Processes_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Process_Processes_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Process_Processes_Args::MergeFrom(const Process_Processes_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Process_Processes_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process_Processes_Args::CopyFrom(const Process_Processes_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process_Processes_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Process_Processes_Args::Swap(Process_Processes_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Process_Processes_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Process_Processes_Args_descriptor_;
  metadata.reflection = Process_Processes_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Process_Processes_Result::kProcessesFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Process_Processes_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Process_Processes_Result >, 11, false >
  Process_Processes_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Process_Processes_Result::default_instance());
Process_Processes_Result::Process_Processes_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Process_Processes_Result::InitAsDefaultInstance() {
}

Process_Processes_Result::Process_Processes_Result(const Process_Processes_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Process_Processes_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Process_Processes_Result::~Process_Processes_Result() {
  SharedDtor();
}

void Process_Processes_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Process_Processes_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process_Processes_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Process_Processes_Result_descriptor_;
}

const Process_Processes_Result& Process_Processes_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Process_Processes_Result* Process_Processes_Result::default_instance_ = NULL;

Process_Processes_Result* Process_Processes_Result::New() const {
  return new Process_Processes_Result;
}

void Process_Processes_Result::Clear() {
  processes_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Process_Processes_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated int32 processes = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_processes:
          DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 1, 8, input, this->mutable_processes())));
        } else if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag)
                   == ::google::protobuf::internal::WireFormatLite::
                      WIRETYPE_LENGTH_DELIMITED) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitiveNoInline<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, this->mutable_processes())));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(8)) goto parse_processes;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Process_Processes_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated int32 processes = 1;
  for (int i = 0; i < this->processes_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(
      1, this->processes(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Process_Processes_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated int32 processes = 1;
  for (int i = 0; i < this->processes_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteInt32ToArray(1, this->processes(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Process_Processes_Result::ByteSize() const {
  int total_size = 0;

  // repeated int32 processes = 1;
  {
    int data_size = 0;
    for (int i = 0; i < this->processes_size(); i++) {
      data_size += ::google::protobuf::internal::WireFormatLite::
        Int32Size(this->processes(i));
    }
    total_size += 1 * this->processes_size() + data_size;
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process_Processes_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Process_Processes_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Process_Processes_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Process_Processes_Result::MergeFrom(const Process_Processes_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  processes_.MergeFrom(from.processes_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Process_Processes_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process_Processes_Result::CopyFrom(const Process_Processes_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process_Processes_Result::IsInitialized() const {

  return true;
}

void Process_Processes_Result::Swap(Process_Processes_Result* other) {
  if (other != this) {
    processes_.Swap(&other->processes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Process_Processes_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Process_Processes_Result_descriptor_;
  metadata.reflection = Process_Processes_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Process_Processes::Process_Processes()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Process_Processes::InitAsDefaultInstance() {
}

Process_Processes::Process_Processes(const Process_Processes& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Process_Processes::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Process_Processes::~Process_Processes() {
  SharedDtor();
}

void Process_Processes::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Process_Processes::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process_Processes::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Process_Processes_descriptor_;
}

const Process_Processes& Process_Processes::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Process_Processes* Process_Processes::default_instance_ = NULL;

Process_Processes* Process_Processes::New() const {
  return new Process_Processes;
}

void Process_Processes::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Process_Processes::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Process_Processes::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Process_Processes::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Process_Processes::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process_Processes::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Process_Processes* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Process_Processes*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Process_Processes::MergeFrom(const Process_Processes& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Process_Processes::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process_Processes::CopyFrom(const Process_Processes& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process_Processes::IsInitialized() const {

  return true;
}

void Process_Processes::Swap(Process_Processes* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Process_Processes::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Process_Processes_descriptor_;
  metadata.reflection = Process_Processes_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Process_Terminate_Args::kProjectIDFieldNumber;
const int Process_Terminate_Args::kProcessIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Process_Terminate_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Process_Terminate_Args >, 11, false >
  Process_Terminate_Args::req(kReqFieldNumber, ::generated::proto::batch::Process_Terminate_Args::default_instance());
Process_Terminate_Args::Process_Terminate_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Process_Terminate_Args::InitAsDefaultInstance() {
}

Process_Terminate_Args::Process_Terminate_Args(const Process_Terminate_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Process_Terminate_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  processid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Process_Terminate_Args::~Process_Terminate_Args() {
  SharedDtor();
}

void Process_Terminate_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Process_Terminate_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process_Terminate_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Process_Terminate_Args_descriptor_;
}

const Process_Terminate_Args& Process_Terminate_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Process_Terminate_Args* Process_Terminate_Args::default_instance_ = NULL;

Process_Terminate_Args* Process_Terminate_Args::New() const {
  return new Process_Terminate_Args;
}

void Process_Terminate_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
    processid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Process_Terminate_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_processID;
        break;
      }

      // required int32 processID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_processID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &processid_)));
          set_has_processid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Process_Terminate_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  // required int32 processID = 2;
  if (has_processid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->processid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Process_Terminate_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  // required int32 processID = 2;
  if (has_processid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->processid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Process_Terminate_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

    // required int32 processID = 2;
    if (has_processid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->processid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process_Terminate_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Process_Terminate_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Process_Terminate_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Process_Terminate_Args::MergeFrom(const Process_Terminate_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
    if (from.has_processid()) {
      set_processid(from.processid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Process_Terminate_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process_Terminate_Args::CopyFrom(const Process_Terminate_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process_Terminate_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000003) != 0x00000003) return false;

  return true;
}

void Process_Terminate_Args::Swap(Process_Terminate_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(processid_, other->processid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Process_Terminate_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Process_Terminate_Args_descriptor_;
  metadata.reflection = Process_Terminate_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Process_Terminate_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Process_Terminate_Result >, 11, false >
  Process_Terminate_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Process_Terminate_Result::default_instance());
Process_Terminate_Result::Process_Terminate_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Process_Terminate_Result::InitAsDefaultInstance() {
}

Process_Terminate_Result::Process_Terminate_Result(const Process_Terminate_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Process_Terminate_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Process_Terminate_Result::~Process_Terminate_Result() {
  SharedDtor();
}

void Process_Terminate_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Process_Terminate_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process_Terminate_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Process_Terminate_Result_descriptor_;
}

const Process_Terminate_Result& Process_Terminate_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Process_Terminate_Result* Process_Terminate_Result::default_instance_ = NULL;

Process_Terminate_Result* Process_Terminate_Result::New() const {
  return new Process_Terminate_Result;
}

void Process_Terminate_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Process_Terminate_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Process_Terminate_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Process_Terminate_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Process_Terminate_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process_Terminate_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Process_Terminate_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Process_Terminate_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Process_Terminate_Result::MergeFrom(const Process_Terminate_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Process_Terminate_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process_Terminate_Result::CopyFrom(const Process_Terminate_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process_Terminate_Result::IsInitialized() const {

  return true;
}

void Process_Terminate_Result::Swap(Process_Terminate_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Process_Terminate_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Process_Terminate_Result_descriptor_;
  metadata.reflection = Process_Terminate_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Process_Terminate::Process_Terminate()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Process_Terminate::InitAsDefaultInstance() {
}

Process_Terminate::Process_Terminate(const Process_Terminate& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Process_Terminate::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Process_Terminate::~Process_Terminate() {
  SharedDtor();
}

void Process_Terminate::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Process_Terminate::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process_Terminate::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Process_Terminate_descriptor_;
}

const Process_Terminate& Process_Terminate::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Process_Terminate* Process_Terminate::default_instance_ = NULL;

Process_Terminate* Process_Terminate::New() const {
  return new Process_Terminate;
}

void Process_Terminate::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Process_Terminate::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Process_Terminate::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Process_Terminate::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Process_Terminate::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process_Terminate::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Process_Terminate* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Process_Terminate*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Process_Terminate::MergeFrom(const Process_Terminate& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Process_Terminate::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process_Terminate::CopyFrom(const Process_Terminate& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process_Terminate::IsInitialized() const {

  return true;
}

void Process_Terminate::Swap(Process_Terminate* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Process_Terminate::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Process_Terminate_descriptor_;
  metadata.reflection = Process_Terminate_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Process::Process()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Process::InitAsDefaultInstance() {
}

Process::Process(const Process& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Process::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Process::~Process() {
  SharedDtor();
}

void Process::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Process::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Process::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Process_descriptor_;
}

const Process& Process::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Process* Process::default_instance_ = NULL;

Process* Process::New() const {
  return new Process;
}

void Process::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Process::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Process::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Process::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Process::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Process::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Process* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Process*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Process::MergeFrom(const Process& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Process::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Process::CopyFrom(const Process& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Process::IsInitialized() const {

  return true;
}

void Process::Swap(Process* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Process::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Process_descriptor_;
  metadata.reflection = Process_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_Projects_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_Projects_Args >, 11, false >
  Project_Projects_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_Projects_Args::default_instance());
Project_Projects_Args::Project_Projects_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Projects_Args::InitAsDefaultInstance() {
}

Project_Projects_Args::Project_Projects_Args(const Project_Projects_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Projects_Args::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Projects_Args::~Project_Projects_Args() {
  SharedDtor();
}

void Project_Projects_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Projects_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Projects_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Projects_Args_descriptor_;
}

const Project_Projects_Args& Project_Projects_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_Projects_Args* Project_Projects_Args::default_instance_ = NULL;

Project_Projects_Args* Project_Projects_Args::New() const {
  return new Project_Projects_Args;
}

void Project_Projects_Args::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Projects_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Projects_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Projects_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Projects_Args::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Projects_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Projects_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Projects_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Projects_Args::MergeFrom(const Project_Projects_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Projects_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Projects_Args::CopyFrom(const Project_Projects_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Projects_Args::IsInitialized() const {

  return true;
}

void Project_Projects_Args::Swap(Project_Projects_Args* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Projects_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Projects_Args_descriptor_;
  metadata.reflection = Project_Projects_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_Projects_Result::kProjectsFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_Projects_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_Projects_Result >, 11, false >
  Project_Projects_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_Projects_Result::default_instance());
Project_Projects_Result::Project_Projects_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Projects_Result::InitAsDefaultInstance() {
}

Project_Projects_Result::Project_Projects_Result(const Project_Projects_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Projects_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Projects_Result::~Project_Projects_Result() {
  SharedDtor();
}

void Project_Projects_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Projects_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Projects_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Projects_Result_descriptor_;
}

const Project_Projects_Result& Project_Projects_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_Projects_Result* Project_Projects_Result::default_instance_ = NULL;

Project_Projects_Result* Project_Projects_Result::New() const {
  return new Project_Projects_Result;
}

void Project_Projects_Result::Clear() {
  projects_.Clear();
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Projects_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // repeated .generated.proto.project.Project projects = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_projects:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                input, add_projects()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(10)) goto parse_projects;
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_Projects_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // repeated .generated.proto.project.Project projects = 1;
  for (int i = 0; i < this->projects_size(); i++) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->projects(i), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Projects_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // repeated .generated.proto.project.Project projects = 1;
  for (int i = 0; i < this->projects_size(); i++) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->projects(i), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Projects_Result::ByteSize() const {
  int total_size = 0;

  // repeated .generated.proto.project.Project projects = 1;
  total_size += 1 * this->projects_size();
  for (int i = 0; i < this->projects_size(); i++) {
    total_size +=
      ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
        this->projects(i));
  }

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Projects_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Projects_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Projects_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Projects_Result::MergeFrom(const Project_Projects_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  projects_.MergeFrom(from.projects_);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Projects_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Projects_Result::CopyFrom(const Project_Projects_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Projects_Result::IsInitialized() const {

  for (int i = 0; i < projects_size(); i++) {
    if (!this->projects(i).IsInitialized()) return false;
  }
  return true;
}

void Project_Projects_Result::Swap(Project_Projects_Result* other) {
  if (other != this) {
    projects_.Swap(&other->projects_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Projects_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Projects_Result_descriptor_;
  metadata.reflection = Project_Projects_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_Projects::Project_Projects()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_Projects::InitAsDefaultInstance() {
}

Project_Projects::Project_Projects(const Project_Projects& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_Projects::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_Projects::~Project_Projects() {
  SharedDtor();
}

void Project_Projects::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_Projects::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_Projects::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_Projects_descriptor_;
}

const Project_Projects& Project_Projects::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_Projects* Project_Projects::default_instance_ = NULL;

Project_Projects* Project_Projects::New() const {
  return new Project_Projects;
}

void Project_Projects::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_Projects::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_Projects::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_Projects::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_Projects::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_Projects::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_Projects* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_Projects*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_Projects::MergeFrom(const Project_Projects& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_Projects::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_Projects::CopyFrom(const Project_Projects& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_Projects::IsInitialized() const {

  return true;
}

void Project_Projects::Swap(Project_Projects* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_Projects::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_Projects_descriptor_;
  metadata.reflection = Project_Projects_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_ProjectByID_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_ProjectByID_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_ProjectByID_Args >, 11, false >
  Project_ProjectByID_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_ProjectByID_Args::default_instance());
Project_ProjectByID_Args::Project_ProjectByID_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_ProjectByID_Args::InitAsDefaultInstance() {
}

Project_ProjectByID_Args::Project_ProjectByID_Args(const Project_ProjectByID_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_ProjectByID_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_ProjectByID_Args::~Project_ProjectByID_Args() {
  SharedDtor();
}

void Project_ProjectByID_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_ProjectByID_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_ProjectByID_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_ProjectByID_Args_descriptor_;
}

const Project_ProjectByID_Args& Project_ProjectByID_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_ProjectByID_Args* Project_ProjectByID_Args::default_instance_ = NULL;

Project_ProjectByID_Args* Project_ProjectByID_Args::New() const {
  return new Project_ProjectByID_Args;
}

void Project_ProjectByID_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_ProjectByID_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_ProjectByID_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_ProjectByID_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_ProjectByID_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_ProjectByID_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_ProjectByID_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_ProjectByID_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_ProjectByID_Args::MergeFrom(const Project_ProjectByID_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_ProjectByID_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_ProjectByID_Args::CopyFrom(const Project_ProjectByID_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_ProjectByID_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_ProjectByID_Args::Swap(Project_ProjectByID_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_ProjectByID_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_ProjectByID_Args_descriptor_;
  metadata.reflection = Project_ProjectByID_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_ProjectByID_Result::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_ProjectByID_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_ProjectByID_Result >, 11, false >
  Project_ProjectByID_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_ProjectByID_Result::default_instance());
Project_ProjectByID_Result::Project_ProjectByID_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_ProjectByID_Result::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_ProjectByID_Result::Project_ProjectByID_Result(const Project_ProjectByID_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_ProjectByID_Result::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_ProjectByID_Result::~Project_ProjectByID_Result() {
  SharedDtor();
}

void Project_ProjectByID_Result::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_ProjectByID_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_ProjectByID_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_ProjectByID_Result_descriptor_;
}

const Project_ProjectByID_Result& Project_ProjectByID_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_ProjectByID_Result* Project_ProjectByID_Result::default_instance_ = NULL;

Project_ProjectByID_Result* Project_ProjectByID_Result::New() const {
  return new Project_ProjectByID_Result;
}

void Project_ProjectByID_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_ProjectByID_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_ProjectByID_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_ProjectByID_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_ProjectByID_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_ProjectByID_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_ProjectByID_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_ProjectByID_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_ProjectByID_Result::MergeFrom(const Project_ProjectByID_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_ProjectByID_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_ProjectByID_Result::CopyFrom(const Project_ProjectByID_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_ProjectByID_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_ProjectByID_Result::Swap(Project_ProjectByID_Result* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_ProjectByID_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_ProjectByID_Result_descriptor_;
  metadata.reflection = Project_ProjectByID_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_ProjectByID::Project_ProjectByID()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_ProjectByID::InitAsDefaultInstance() {
}

Project_ProjectByID::Project_ProjectByID(const Project_ProjectByID& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_ProjectByID::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_ProjectByID::~Project_ProjectByID() {
  SharedDtor();
}

void Project_ProjectByID::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_ProjectByID::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_ProjectByID::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_ProjectByID_descriptor_;
}

const Project_ProjectByID& Project_ProjectByID::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_ProjectByID* Project_ProjectByID::default_instance_ = NULL;

Project_ProjectByID* Project_ProjectByID::New() const {
  return new Project_ProjectByID;
}

void Project_ProjectByID::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_ProjectByID::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_ProjectByID::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_ProjectByID::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_ProjectByID::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_ProjectByID::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_ProjectByID* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_ProjectByID*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_ProjectByID::MergeFrom(const Project_ProjectByID& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_ProjectByID::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_ProjectByID::CopyFrom(const Project_ProjectByID& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_ProjectByID::IsInitialized() const {

  return true;
}

void Project_ProjectByID::Swap(Project_ProjectByID* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_ProjectByID::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_ProjectByID_descriptor_;
  metadata.reflection = Project_ProjectByID_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_CreateProject_Args::kNameFieldNumber;
const int Project_CreateProject_Args::kPathFieldNumber;
const int Project_CreateProject_Args::kAttributesFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_CreateProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_CreateProject_Args >, 11, false >
  Project_CreateProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_CreateProject_Args::default_instance());
Project_CreateProject_Args::Project_CreateProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CreateProject_Args::InitAsDefaultInstance() {
  attributes_ = const_cast< ::generated::proto::attributes::Attributes*>(&::generated::proto::attributes::Attributes::default_instance());
}

Project_CreateProject_Args::Project_CreateProject_Args(const Project_CreateProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CreateProject_Args::SharedCtor() {
  _cached_size_ = 0;
  name_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  attributes_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CreateProject_Args::~Project_CreateProject_Args() {
  SharedDtor();
}

void Project_CreateProject_Args::SharedDtor() {
  if (name_ != &::google::protobuf::internal::kEmptyString) {
    delete name_;
  }
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
    delete attributes_;
  }
}

void Project_CreateProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CreateProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CreateProject_Args_descriptor_;
}

const Project_CreateProject_Args& Project_CreateProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_CreateProject_Args* Project_CreateProject_Args::default_instance_ = NULL;

Project_CreateProject_Args* Project_CreateProject_Args::New() const {
  return new Project_CreateProject_Args;
}

void Project_CreateProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_name()) {
      if (name_ != &::google::protobuf::internal::kEmptyString) {
        name_->clear();
      }
    }
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
    if (has_attributes()) {
      if (attributes_ != NULL) attributes_->::generated::proto::attributes::Attributes::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CreateProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string name = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_name()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->name().data(), this->name().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(18)) goto parse_path;
        break;
      }

      // required string path = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_path:
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(26)) goto parse_attributes;
        break;
      }

      // required .generated.proto.attributes.Attributes attributes = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
         parse_attributes:
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_attributes()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_CreateProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->name(), output);
  }

  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      2, this->path(), output);
  }

  // required .generated.proto.attributes.Attributes attributes = 3;
  if (has_attributes()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      3, this->attributes(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CreateProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string name = 1;
  if (has_name()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->name().data(), this->name().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->name(), target);
  }

  // required string path = 2;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        2, this->path(), target);
  }

  // required .generated.proto.attributes.Attributes attributes = 3;
  if (has_attributes()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        3, this->attributes(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CreateProject_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string name = 1;
    if (has_name()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->name());
    }

    // required string path = 2;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

    // required .generated.proto.attributes.Attributes attributes = 3;
    if (has_attributes()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->attributes());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CreateProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CreateProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CreateProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CreateProject_Args::MergeFrom(const Project_CreateProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_name()) {
      set_name(from.name());
    }
    if (from.has_path()) {
      set_path(from.path());
    }
    if (from.has_attributes()) {
      mutable_attributes()->::generated::proto::attributes::Attributes::MergeFrom(from.attributes());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CreateProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CreateProject_Args::CopyFrom(const Project_CreateProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CreateProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  if (has_attributes()) {
    if (!this->attributes().IsInitialized()) return false;
  }
  return true;
}

void Project_CreateProject_Args::Swap(Project_CreateProject_Args* other) {
  if (other != this) {
    std::swap(name_, other->name_);
    std::swap(path_, other->path_);
    std::swap(attributes_, other->attributes_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CreateProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CreateProject_Args_descriptor_;
  metadata.reflection = Project_CreateProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_CreateProject_Result::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_CreateProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_CreateProject_Result >, 11, false >
  Project_CreateProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_CreateProject_Result::default_instance());
Project_CreateProject_Result::Project_CreateProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CreateProject_Result::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_CreateProject_Result::Project_CreateProject_Result(const Project_CreateProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CreateProject_Result::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CreateProject_Result::~Project_CreateProject_Result() {
  SharedDtor();
}

void Project_CreateProject_Result::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_CreateProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CreateProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CreateProject_Result_descriptor_;
}

const Project_CreateProject_Result& Project_CreateProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_CreateProject_Result* Project_CreateProject_Result::default_instance_ = NULL;

Project_CreateProject_Result* Project_CreateProject_Result::New() const {
  return new Project_CreateProject_Result;
}

void Project_CreateProject_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CreateProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_CreateProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CreateProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CreateProject_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CreateProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CreateProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CreateProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CreateProject_Result::MergeFrom(const Project_CreateProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CreateProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CreateProject_Result::CopyFrom(const Project_CreateProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CreateProject_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_CreateProject_Result::Swap(Project_CreateProject_Result* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CreateProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CreateProject_Result_descriptor_;
  metadata.reflection = Project_CreateProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_CreateProject::Project_CreateProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CreateProject::InitAsDefaultInstance() {
}

Project_CreateProject::Project_CreateProject(const Project_CreateProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CreateProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CreateProject::~Project_CreateProject() {
  SharedDtor();
}

void Project_CreateProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_CreateProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CreateProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CreateProject_descriptor_;
}

const Project_CreateProject& Project_CreateProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_CreateProject* Project_CreateProject::default_instance_ = NULL;

Project_CreateProject* Project_CreateProject::New() const {
  return new Project_CreateProject;
}

void Project_CreateProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CreateProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_CreateProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CreateProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CreateProject::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CreateProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CreateProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CreateProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CreateProject::MergeFrom(const Project_CreateProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CreateProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CreateProject::CopyFrom(const Project_CreateProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CreateProject::IsInitialized() const {

  return true;
}

void Project_CreateProject::Swap(Project_CreateProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CreateProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CreateProject_descriptor_;
  metadata.reflection = Project_CreateProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_OpenProject_Args::kPathFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_OpenProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_OpenProject_Args >, 11, false >
  Project_OpenProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_OpenProject_Args::default_instance());
Project_OpenProject_Args::Project_OpenProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_OpenProject_Args::InitAsDefaultInstance() {
}

Project_OpenProject_Args::Project_OpenProject_Args(const Project_OpenProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_OpenProject_Args::SharedCtor() {
  _cached_size_ = 0;
  path_ = const_cast< ::std::string*>(&::google::protobuf::internal::kEmptyString);
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_OpenProject_Args::~Project_OpenProject_Args() {
  SharedDtor();
}

void Project_OpenProject_Args::SharedDtor() {
  if (path_ != &::google::protobuf::internal::kEmptyString) {
    delete path_;
  }
  if (this != default_instance_) {
  }
}

void Project_OpenProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_OpenProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_OpenProject_Args_descriptor_;
}

const Project_OpenProject_Args& Project_OpenProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_OpenProject_Args* Project_OpenProject_Args::default_instance_ = NULL;

Project_OpenProject_Args* Project_OpenProject_Args::New() const {
  return new Project_OpenProject_Args;
}

void Project_OpenProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_path()) {
      if (path_ != &::google::protobuf::internal::kEmptyString) {
        path_->clear();
      }
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_OpenProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required string path = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                input, this->mutable_path()));
          ::google::protobuf::internal::WireFormat::VerifyUTF8String(
            this->path().data(), this->path().length(),
            ::google::protobuf::internal::WireFormat::PARSE);
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_OpenProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    ::google::protobuf::internal::WireFormatLite::WriteString(
      1, this->path(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_OpenProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required string path = 1;
  if (has_path()) {
    ::google::protobuf::internal::WireFormat::VerifyUTF8String(
      this->path().data(), this->path().length(),
      ::google::protobuf::internal::WireFormat::SERIALIZE);
    target =
      ::google::protobuf::internal::WireFormatLite::WriteStringToArray(
        1, this->path(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_OpenProject_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required string path = 1;
    if (has_path()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::StringSize(
          this->path());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_OpenProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_OpenProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_OpenProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_OpenProject_Args::MergeFrom(const Project_OpenProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_path()) {
      set_path(from.path());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_OpenProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_OpenProject_Args::CopyFrom(const Project_OpenProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_OpenProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_OpenProject_Args::Swap(Project_OpenProject_Args* other) {
  if (other != this) {
    std::swap(path_, other->path_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_OpenProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_OpenProject_Args_descriptor_;
  metadata.reflection = Project_OpenProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_OpenProject_Result::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_OpenProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_OpenProject_Result >, 11, false >
  Project_OpenProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_OpenProject_Result::default_instance());
Project_OpenProject_Result::Project_OpenProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_OpenProject_Result::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_OpenProject_Result::Project_OpenProject_Result(const Project_OpenProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_OpenProject_Result::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_OpenProject_Result::~Project_OpenProject_Result() {
  SharedDtor();
}

void Project_OpenProject_Result::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_OpenProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_OpenProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_OpenProject_Result_descriptor_;
}

const Project_OpenProject_Result& Project_OpenProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_OpenProject_Result* Project_OpenProject_Result::default_instance_ = NULL;

Project_OpenProject_Result* Project_OpenProject_Result::New() const {
  return new Project_OpenProject_Result;
}

void Project_OpenProject_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_OpenProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_OpenProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_OpenProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_OpenProject_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_OpenProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_OpenProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_OpenProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_OpenProject_Result::MergeFrom(const Project_OpenProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_OpenProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_OpenProject_Result::CopyFrom(const Project_OpenProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_OpenProject_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_OpenProject_Result::Swap(Project_OpenProject_Result* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_OpenProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_OpenProject_Result_descriptor_;
  metadata.reflection = Project_OpenProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_OpenProject::Project_OpenProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_OpenProject::InitAsDefaultInstance() {
}

Project_OpenProject::Project_OpenProject(const Project_OpenProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_OpenProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_OpenProject::~Project_OpenProject() {
  SharedDtor();
}

void Project_OpenProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_OpenProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_OpenProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_OpenProject_descriptor_;
}

const Project_OpenProject& Project_OpenProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_OpenProject* Project_OpenProject::default_instance_ = NULL;

Project_OpenProject* Project_OpenProject::New() const {
  return new Project_OpenProject;
}

void Project_OpenProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_OpenProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_OpenProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_OpenProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_OpenProject::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_OpenProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_OpenProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_OpenProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_OpenProject::MergeFrom(const Project_OpenProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_OpenProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_OpenProject::CopyFrom(const Project_OpenProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_OpenProject::IsInitialized() const {

  return true;
}

void Project_OpenProject::Swap(Project_OpenProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_OpenProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_OpenProject_descriptor_;
  metadata.reflection = Project_OpenProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_UpdateProject_Args::kProjectFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_UpdateProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_UpdateProject_Args >, 11, false >
  Project_UpdateProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_UpdateProject_Args::default_instance());
Project_UpdateProject_Args::Project_UpdateProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_UpdateProject_Args::InitAsDefaultInstance() {
  project_ = const_cast< ::generated::proto::project::Project*>(&::generated::proto::project::Project::default_instance());
}

Project_UpdateProject_Args::Project_UpdateProject_Args(const Project_UpdateProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_UpdateProject_Args::SharedCtor() {
  _cached_size_ = 0;
  project_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_UpdateProject_Args::~Project_UpdateProject_Args() {
  SharedDtor();
}

void Project_UpdateProject_Args::SharedDtor() {
  if (this != default_instance_) {
    delete project_;
  }
}

void Project_UpdateProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_UpdateProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_UpdateProject_Args_descriptor_;
}

const Project_UpdateProject_Args& Project_UpdateProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_UpdateProject_Args* Project_UpdateProject_Args::default_instance_ = NULL;

Project_UpdateProject_Args* Project_UpdateProject_Args::New() const {
  return new Project_UpdateProject_Args;
}

void Project_UpdateProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_project()) {
      if (project_ != NULL) project_->::generated::proto::project::Project::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_UpdateProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.project.Project project = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_project()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_UpdateProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->project(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_UpdateProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.project.Project project = 1;
  if (has_project()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->project(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_UpdateProject_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.project.Project project = 1;
    if (has_project()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->project());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_UpdateProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_UpdateProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_UpdateProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_UpdateProject_Args::MergeFrom(const Project_UpdateProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_project()) {
      mutable_project()->::generated::proto::project::Project::MergeFrom(from.project());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_UpdateProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_UpdateProject_Args::CopyFrom(const Project_UpdateProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_UpdateProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_project()) {
    if (!this->project().IsInitialized()) return false;
  }
  return true;
}

void Project_UpdateProject_Args::Swap(Project_UpdateProject_Args* other) {
  if (other != this) {
    std::swap(project_, other->project_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_UpdateProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_UpdateProject_Args_descriptor_;
  metadata.reflection = Project_UpdateProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_UpdateProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_UpdateProject_Result >, 11, false >
  Project_UpdateProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_UpdateProject_Result::default_instance());
Project_UpdateProject_Result::Project_UpdateProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_UpdateProject_Result::InitAsDefaultInstance() {
}

Project_UpdateProject_Result::Project_UpdateProject_Result(const Project_UpdateProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_UpdateProject_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_UpdateProject_Result::~Project_UpdateProject_Result() {
  SharedDtor();
}

void Project_UpdateProject_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_UpdateProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_UpdateProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_UpdateProject_Result_descriptor_;
}

const Project_UpdateProject_Result& Project_UpdateProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_UpdateProject_Result* Project_UpdateProject_Result::default_instance_ = NULL;

Project_UpdateProject_Result* Project_UpdateProject_Result::New() const {
  return new Project_UpdateProject_Result;
}

void Project_UpdateProject_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_UpdateProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_UpdateProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_UpdateProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_UpdateProject_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_UpdateProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_UpdateProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_UpdateProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_UpdateProject_Result::MergeFrom(const Project_UpdateProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_UpdateProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_UpdateProject_Result::CopyFrom(const Project_UpdateProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_UpdateProject_Result::IsInitialized() const {

  return true;
}

void Project_UpdateProject_Result::Swap(Project_UpdateProject_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_UpdateProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_UpdateProject_Result_descriptor_;
  metadata.reflection = Project_UpdateProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_UpdateProject::Project_UpdateProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_UpdateProject::InitAsDefaultInstance() {
}

Project_UpdateProject::Project_UpdateProject(const Project_UpdateProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_UpdateProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_UpdateProject::~Project_UpdateProject() {
  SharedDtor();
}

void Project_UpdateProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_UpdateProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_UpdateProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_UpdateProject_descriptor_;
}

const Project_UpdateProject& Project_UpdateProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_UpdateProject* Project_UpdateProject::default_instance_ = NULL;

Project_UpdateProject* Project_UpdateProject::New() const {
  return new Project_UpdateProject;
}

void Project_UpdateProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_UpdateProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_UpdateProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_UpdateProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_UpdateProject::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_UpdateProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_UpdateProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_UpdateProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_UpdateProject::MergeFrom(const Project_UpdateProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_UpdateProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_UpdateProject::CopyFrom(const Project_UpdateProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_UpdateProject::IsInitialized() const {

  return true;
}

void Project_UpdateProject::Swap(Project_UpdateProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_UpdateProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_UpdateProject_descriptor_;
  metadata.reflection = Project_UpdateProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_CloseProject_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_CloseProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_CloseProject_Args >, 11, false >
  Project_CloseProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_CloseProject_Args::default_instance());
Project_CloseProject_Args::Project_CloseProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CloseProject_Args::InitAsDefaultInstance() {
}

Project_CloseProject_Args::Project_CloseProject_Args(const Project_CloseProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CloseProject_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CloseProject_Args::~Project_CloseProject_Args() {
  SharedDtor();
}

void Project_CloseProject_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_CloseProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CloseProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CloseProject_Args_descriptor_;
}

const Project_CloseProject_Args& Project_CloseProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_CloseProject_Args* Project_CloseProject_Args::default_instance_ = NULL;

Project_CloseProject_Args* Project_CloseProject_Args::New() const {
  return new Project_CloseProject_Args;
}

void Project_CloseProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CloseProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_CloseProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CloseProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CloseProject_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CloseProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CloseProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CloseProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CloseProject_Args::MergeFrom(const Project_CloseProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CloseProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CloseProject_Args::CopyFrom(const Project_CloseProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CloseProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_CloseProject_Args::Swap(Project_CloseProject_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CloseProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CloseProject_Args_descriptor_;
  metadata.reflection = Project_CloseProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_CloseProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_CloseProject_Result >, 11, false >
  Project_CloseProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_CloseProject_Result::default_instance());
Project_CloseProject_Result::Project_CloseProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CloseProject_Result::InitAsDefaultInstance() {
}

Project_CloseProject_Result::Project_CloseProject_Result(const Project_CloseProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CloseProject_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CloseProject_Result::~Project_CloseProject_Result() {
  SharedDtor();
}

void Project_CloseProject_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_CloseProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CloseProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CloseProject_Result_descriptor_;
}

const Project_CloseProject_Result& Project_CloseProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_CloseProject_Result* Project_CloseProject_Result::default_instance_ = NULL;

Project_CloseProject_Result* Project_CloseProject_Result::New() const {
  return new Project_CloseProject_Result;
}

void Project_CloseProject_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CloseProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_CloseProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CloseProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CloseProject_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CloseProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CloseProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CloseProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CloseProject_Result::MergeFrom(const Project_CloseProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CloseProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CloseProject_Result::CopyFrom(const Project_CloseProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CloseProject_Result::IsInitialized() const {

  return true;
}

void Project_CloseProject_Result::Swap(Project_CloseProject_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CloseProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CloseProject_Result_descriptor_;
  metadata.reflection = Project_CloseProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_CloseProject::Project_CloseProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_CloseProject::InitAsDefaultInstance() {
}

Project_CloseProject::Project_CloseProject(const Project_CloseProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_CloseProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_CloseProject::~Project_CloseProject() {
  SharedDtor();
}

void Project_CloseProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_CloseProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_CloseProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_CloseProject_descriptor_;
}

const Project_CloseProject& Project_CloseProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_CloseProject* Project_CloseProject::default_instance_ = NULL;

Project_CloseProject* Project_CloseProject::New() const {
  return new Project_CloseProject;
}

void Project_CloseProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_CloseProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_CloseProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_CloseProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_CloseProject::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_CloseProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_CloseProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_CloseProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_CloseProject::MergeFrom(const Project_CloseProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_CloseProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_CloseProject::CopyFrom(const Project_CloseProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_CloseProject::IsInitialized() const {

  return true;
}

void Project_CloseProject::Swap(Project_CloseProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_CloseProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_CloseProject_descriptor_;
  metadata.reflection = Project_CloseProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Project_StoreProject_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_StoreProject_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_StoreProject_Args >, 11, false >
  Project_StoreProject_Args::req(kReqFieldNumber, ::generated::proto::batch::Project_StoreProject_Args::default_instance());
Project_StoreProject_Args::Project_StoreProject_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_StoreProject_Args::InitAsDefaultInstance() {
}

Project_StoreProject_Args::Project_StoreProject_Args(const Project_StoreProject_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_StoreProject_Args::SharedCtor() {
  _cached_size_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_StoreProject_Args::~Project_StoreProject_Args() {
  SharedDtor();
}

void Project_StoreProject_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_StoreProject_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_StoreProject_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_StoreProject_Args_descriptor_;
}

const Project_StoreProject_Args& Project_StoreProject_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_StoreProject_Args* Project_StoreProject_Args::default_instance_ = NULL;

Project_StoreProject_Args* Project_StoreProject_Args::New() const {
  return new Project_StoreProject_Args;
}

void Project_StoreProject_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_StoreProject_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 projectID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Project_StoreProject_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_StoreProject_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 projectID = 1;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_StoreProject_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 projectID = 1;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_StoreProject_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_StoreProject_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_StoreProject_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_StoreProject_Args::MergeFrom(const Project_StoreProject_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_StoreProject_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_StoreProject_Args::CopyFrom(const Project_StoreProject_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_StoreProject_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  return true;
}

void Project_StoreProject_Args::Swap(Project_StoreProject_Args* other) {
  if (other != this) {
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_StoreProject_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_StoreProject_Args_descriptor_;
  metadata.reflection = Project_StoreProject_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Project_StoreProject_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Project_StoreProject_Result >, 11, false >
  Project_StoreProject_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Project_StoreProject_Result::default_instance());
Project_StoreProject_Result::Project_StoreProject_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_StoreProject_Result::InitAsDefaultInstance() {
}

Project_StoreProject_Result::Project_StoreProject_Result(const Project_StoreProject_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_StoreProject_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_StoreProject_Result::~Project_StoreProject_Result() {
  SharedDtor();
}

void Project_StoreProject_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_StoreProject_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_StoreProject_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_StoreProject_Result_descriptor_;
}

const Project_StoreProject_Result& Project_StoreProject_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_StoreProject_Result* Project_StoreProject_Result::default_instance_ = NULL;

Project_StoreProject_Result* Project_StoreProject_Result::New() const {
  return new Project_StoreProject_Result;
}

void Project_StoreProject_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_StoreProject_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_StoreProject_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_StoreProject_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_StoreProject_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_StoreProject_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_StoreProject_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_StoreProject_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_StoreProject_Result::MergeFrom(const Project_StoreProject_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_StoreProject_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_StoreProject_Result::CopyFrom(const Project_StoreProject_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_StoreProject_Result::IsInitialized() const {

  return true;
}

void Project_StoreProject_Result::Swap(Project_StoreProject_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_StoreProject_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_StoreProject_Result_descriptor_;
  metadata.reflection = Project_StoreProject_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project_StoreProject::Project_StoreProject()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project_StoreProject::InitAsDefaultInstance() {
}

Project_StoreProject::Project_StoreProject(const Project_StoreProject& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project_StoreProject::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project_StoreProject::~Project_StoreProject() {
  SharedDtor();
}

void Project_StoreProject::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project_StoreProject::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project_StoreProject::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_StoreProject_descriptor_;
}

const Project_StoreProject& Project_StoreProject::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project_StoreProject* Project_StoreProject::default_instance_ = NULL;

Project_StoreProject* Project_StoreProject::New() const {
  return new Project_StoreProject;
}

void Project_StoreProject::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project_StoreProject::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project_StoreProject::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project_StoreProject::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project_StoreProject::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project_StoreProject::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project_StoreProject* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project_StoreProject*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project_StoreProject::MergeFrom(const Project_StoreProject& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project_StoreProject::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project_StoreProject::CopyFrom(const Project_StoreProject& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project_StoreProject::IsInitialized() const {

  return true;
}

void Project_StoreProject::Swap(Project_StoreProject* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project_StoreProject::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_StoreProject_descriptor_;
  metadata.reflection = Project_StoreProject_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Project::Project()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Project::InitAsDefaultInstance() {
}

Project::Project(const Project& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Project::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Project::~Project() {
  SharedDtor();
}

void Project::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Project::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Project::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Project_descriptor_;
}

const Project& Project::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Project* Project::default_instance_ = NULL;

Project* Project::New() const {
  return new Project;
}

void Project::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Project::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Project::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Project::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Project::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Project::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Project* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Project*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Project::MergeFrom(const Project& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Project::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Project::CopyFrom(const Project& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Project::IsInitialized() const {

  return true;
}

void Project::Swap(Project* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Project::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Project_descriptor_;
  metadata.reflection = Project_reflection_;
  return metadata;
}


// ===================================================================

#ifndef _MSC_VER
const int Properties_GetProperties_Args::kNodeIDFieldNumber;
const int Properties_GetProperties_Args::kLibraryIDFieldNumber;
const int Properties_GetProperties_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Properties_GetProperties_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Properties_GetProperties_Args >, 11, false >
  Properties_GetProperties_Args::req(kReqFieldNumber, ::generated::proto::batch::Properties_GetProperties_Args::default_instance());
Properties_GetProperties_Args::Properties_GetProperties_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Properties_GetProperties_Args::InitAsDefaultInstance() {
}

Properties_GetProperties_Args::Properties_GetProperties_Args(const Properties_GetProperties_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Properties_GetProperties_Args::SharedCtor() {
  _cached_size_ = 0;
  nodeid_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Properties_GetProperties_Args::~Properties_GetProperties_Args() {
  SharedDtor();
}

void Properties_GetProperties_Args::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Properties_GetProperties_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties_GetProperties_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_GetProperties_Args_descriptor_;
}

const Properties_GetProperties_Args& Properties_GetProperties_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Properties_GetProperties_Args* Properties_GetProperties_Args::default_instance_ = NULL;

Properties_GetProperties_Args* Properties_GetProperties_Args::New() const {
  return new Properties_GetProperties_Args;
}

void Properties_GetProperties_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    nodeid_ = 0;
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Properties_GetProperties_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required int32 nodeID = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Properties_GetProperties_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(1, this->nodeid(), output);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->libraryid(), output);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Properties_GetProperties_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required int32 nodeID = 1;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(1, this->nodeid(), target);
  }

  // required int32 libraryID = 2;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->libraryid(), target);
  }

  // required int32 projectID = 3;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Properties_GetProperties_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required int32 nodeID = 1;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required int32 libraryID = 2;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 3;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties_GetProperties_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Properties_GetProperties_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Properties_GetProperties_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Properties_GetProperties_Args::MergeFrom(const Properties_GetProperties_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Properties_GetProperties_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties_GetProperties_Args::CopyFrom(const Properties_GetProperties_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties_GetProperties_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000007) != 0x00000007) return false;

  return true;
}

void Properties_GetProperties_Args::Swap(Properties_GetProperties_Args* other) {
  if (other != this) {
    std::swap(nodeid_, other->nodeid_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Properties_GetProperties_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_GetProperties_Args_descriptor_;
  metadata.reflection = Properties_GetProperties_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Properties_GetProperties_Result::kPropertiesFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Properties_GetProperties_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Properties_GetProperties_Result >, 11, false >
  Properties_GetProperties_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Properties_GetProperties_Result::default_instance());
Properties_GetProperties_Result::Properties_GetProperties_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Properties_GetProperties_Result::InitAsDefaultInstance() {
  properties_ = const_cast< ::generated::proto::attributes::Properties*>(&::generated::proto::attributes::Properties::default_instance());
}

Properties_GetProperties_Result::Properties_GetProperties_Result(const Properties_GetProperties_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Properties_GetProperties_Result::SharedCtor() {
  _cached_size_ = 0;
  properties_ = NULL;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Properties_GetProperties_Result::~Properties_GetProperties_Result() {
  SharedDtor();
}

void Properties_GetProperties_Result::SharedDtor() {
  if (this != default_instance_) {
    delete properties_;
  }
}

void Properties_GetProperties_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties_GetProperties_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_GetProperties_Result_descriptor_;
}

const Properties_GetProperties_Result& Properties_GetProperties_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Properties_GetProperties_Result* Properties_GetProperties_Result::default_instance_ = NULL;

Properties_GetProperties_Result* Properties_GetProperties_Result::New() const {
  return new Properties_GetProperties_Result;
}

void Properties_GetProperties_Result::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_properties()) {
      if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
    }
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Properties_GetProperties_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.attributes.Properties properties = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Properties_GetProperties_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Properties_GetProperties_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->properties(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Properties_GetProperties_Result::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.attributes.Properties properties = 1;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties_GetProperties_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Properties_GetProperties_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Properties_GetProperties_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Properties_GetProperties_Result::MergeFrom(const Properties_GetProperties_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_properties()) {
      mutable_properties()->::generated::proto::attributes::Properties::MergeFrom(from.properties());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Properties_GetProperties_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties_GetProperties_Result::CopyFrom(const Properties_GetProperties_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties_GetProperties_Result::IsInitialized() const {
  if ((_has_bits_[0] & 0x00000001) != 0x00000001) return false;

  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  return true;
}

void Properties_GetProperties_Result::Swap(Properties_GetProperties_Result* other) {
  if (other != this) {
    std::swap(properties_, other->properties_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Properties_GetProperties_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_GetProperties_Result_descriptor_;
  metadata.reflection = Properties_GetProperties_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Properties_GetProperties::Properties_GetProperties()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Properties_GetProperties::InitAsDefaultInstance() {
}

Properties_GetProperties::Properties_GetProperties(const Properties_GetProperties& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Properties_GetProperties::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Properties_GetProperties::~Properties_GetProperties() {
  SharedDtor();
}

void Properties_GetProperties::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Properties_GetProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties_GetProperties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_GetProperties_descriptor_;
}

const Properties_GetProperties& Properties_GetProperties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Properties_GetProperties* Properties_GetProperties::default_instance_ = NULL;

Properties_GetProperties* Properties_GetProperties::New() const {
  return new Properties_GetProperties;
}

void Properties_GetProperties::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Properties_GetProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Properties_GetProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Properties_GetProperties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Properties_GetProperties::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties_GetProperties::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Properties_GetProperties* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Properties_GetProperties*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Properties_GetProperties::MergeFrom(const Properties_GetProperties& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Properties_GetProperties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties_GetProperties::CopyFrom(const Properties_GetProperties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties_GetProperties::IsInitialized() const {

  return true;
}

void Properties_GetProperties::Swap(Properties_GetProperties* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Properties_GetProperties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_GetProperties_descriptor_;
  metadata.reflection = Properties_GetProperties_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
const int Properties_SetProperties_Args::kPropertiesFieldNumber;
const int Properties_SetProperties_Args::kNodeIDFieldNumber;
const int Properties_SetProperties_Args::kLibraryIDFieldNumber;
const int Properties_SetProperties_Args::kProjectIDFieldNumber;
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Properties_SetProperties_Args::kReqFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Request,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Properties_SetProperties_Args >, 11, false >
  Properties_SetProperties_Args::req(kReqFieldNumber, ::generated::proto::batch::Properties_SetProperties_Args::default_instance());
Properties_SetProperties_Args::Properties_SetProperties_Args()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Properties_SetProperties_Args::InitAsDefaultInstance() {
  properties_ = const_cast< ::generated::proto::attributes::Properties*>(&::generated::proto::attributes::Properties::default_instance());
}

Properties_SetProperties_Args::Properties_SetProperties_Args(const Properties_SetProperties_Args& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Properties_SetProperties_Args::SharedCtor() {
  _cached_size_ = 0;
  properties_ = NULL;
  nodeid_ = 0;
  libraryid_ = 0;
  projectid_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Properties_SetProperties_Args::~Properties_SetProperties_Args() {
  SharedDtor();
}

void Properties_SetProperties_Args::SharedDtor() {
  if (this != default_instance_) {
    delete properties_;
  }
}

void Properties_SetProperties_Args::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties_SetProperties_Args::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_SetProperties_Args_descriptor_;
}

const Properties_SetProperties_Args& Properties_SetProperties_Args::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Properties_SetProperties_Args* Properties_SetProperties_Args::default_instance_ = NULL;

Properties_SetProperties_Args* Properties_SetProperties_Args::New() const {
  return new Properties_SetProperties_Args;
}

void Properties_SetProperties_Args::Clear() {
  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (has_properties()) {
      if (properties_ != NULL) properties_->::generated::proto::attributes::Properties::Clear();
    }
    nodeid_ = 0;
    libraryid_ = 0;
    projectid_ = 0;
  }
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Properties_SetProperties_Args::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
      // required .generated.proto.attributes.Properties properties = 1;
      case 1: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED) {
          DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
               input, mutable_properties()));
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(16)) goto parse_nodeID;
        break;
      }

      // required int32 nodeID = 2;
      case 2: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_nodeID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &nodeid_)));
          set_has_nodeid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(24)) goto parse_libraryID;
        break;
      }

      // required int32 libraryID = 3;
      case 3: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_libraryID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &libraryid_)));
          set_has_libraryid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectTag(32)) goto parse_projectID;
        break;
      }

      // required int32 projectID = 4;
      case 4: {
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_VARINT) {
         parse_projectID:
          DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                   ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                 input, &projectid_)));
          set_has_projectid();
        } else {
          goto handle_uninterpreted;
        }
        if (input->ExpectAtEnd()) return true;
        break;
      }

      default: {
      handle_uninterpreted:
        if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
            ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
          return true;
        }
        DO_(::google::protobuf::internal::WireFormat::SkipField(
              input, tag, mutable_unknown_fields()));
        break;
      }
    }
  }
  return true;
#undef DO_
}

void Properties_SetProperties_Args::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
      1, this->properties(), output);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(2, this->nodeid(), output);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(3, this->libraryid(), output);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    ::google::protobuf::internal::WireFormatLite::WriteInt32(4, this->projectid(), output);
  }

  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Properties_SetProperties_Args::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  // required .generated.proto.attributes.Properties properties = 1;
  if (has_properties()) {
    target = ::google::protobuf::internal::WireFormatLite::
      WriteMessageNoVirtualToArray(
        1, this->properties(), target);
  }

  // required int32 nodeID = 2;
  if (has_nodeid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(2, this->nodeid(), target);
  }

  // required int32 libraryID = 3;
  if (has_libraryid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(3, this->libraryid(), target);
  }

  // required int32 projectID = 4;
  if (has_projectid()) {
    target = ::google::protobuf::internal::WireFormatLite::WriteInt32ToArray(4, this->projectid(), target);
  }

  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Properties_SetProperties_Args::ByteSize() const {
  int total_size = 0;

  if (_has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    // required .generated.proto.attributes.Properties properties = 1;
    if (has_properties()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
          this->properties());
    }

    // required int32 nodeID = 2;
    if (has_nodeid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->nodeid());
    }

    // required int32 libraryID = 3;
    if (has_libraryid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->libraryid());
    }

    // required int32 projectID = 4;
    if (has_projectid()) {
      total_size += 1 +
        ::google::protobuf::internal::WireFormatLite::Int32Size(
          this->projectid());
    }

  }
  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties_SetProperties_Args::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Properties_SetProperties_Args* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Properties_SetProperties_Args*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Properties_SetProperties_Args::MergeFrom(const Properties_SetProperties_Args& from) {
  GOOGLE_CHECK_NE(&from, this);
  if (from._has_bits_[0 / 32] & (0xffu << (0 % 32))) {
    if (from.has_properties()) {
      mutable_properties()->::generated::proto::attributes::Properties::MergeFrom(from.properties());
    }
    if (from.has_nodeid()) {
      set_nodeid(from.nodeid());
    }
    if (from.has_libraryid()) {
      set_libraryid(from.libraryid());
    }
    if (from.has_projectid()) {
      set_projectid(from.projectid());
    }
  }
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Properties_SetProperties_Args::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties_SetProperties_Args::CopyFrom(const Properties_SetProperties_Args& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties_SetProperties_Args::IsInitialized() const {
  if ((_has_bits_[0] & 0x0000000f) != 0x0000000f) return false;

  if (has_properties()) {
    if (!this->properties().IsInitialized()) return false;
  }
  return true;
}

void Properties_SetProperties_Args::Swap(Properties_SetProperties_Args* other) {
  if (other != this) {
    std::swap(properties_, other->properties_);
    std::swap(nodeid_, other->nodeid_);
    std::swap(libraryid_, other->libraryid_);
    std::swap(projectid_, other->projectid_);
    std::swap(_has_bits_[0], other->_has_bits_[0]);
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Properties_SetProperties_Args::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_SetProperties_Args_descriptor_;
  metadata.reflection = Properties_SetProperties_Args_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

#ifndef _MSC_VER
const int Properties_SetProperties_Result::kRspFieldNumber;
#endif
::google::protobuf::internal::ExtensionIdentifier< ::generated::proto::batch::Response,
    ::google::protobuf::internal::MessageTypeTraits< ::generated::proto::batch::Properties_SetProperties_Result >, 11, false >
  Properties_SetProperties_Result::rsp(kRspFieldNumber, ::generated::proto::batch::Properties_SetProperties_Result::default_instance());
Properties_SetProperties_Result::Properties_SetProperties_Result()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Properties_SetProperties_Result::InitAsDefaultInstance() {
}

Properties_SetProperties_Result::Properties_SetProperties_Result(const Properties_SetProperties_Result& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Properties_SetProperties_Result::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Properties_SetProperties_Result::~Properties_SetProperties_Result() {
  SharedDtor();
}

void Properties_SetProperties_Result::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Properties_SetProperties_Result::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties_SetProperties_Result::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_SetProperties_Result_descriptor_;
}

const Properties_SetProperties_Result& Properties_SetProperties_Result::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Properties_SetProperties_Result* Properties_SetProperties_Result::default_instance_ = NULL;

Properties_SetProperties_Result* Properties_SetProperties_Result::New() const {
  return new Properties_SetProperties_Result;
}

void Properties_SetProperties_Result::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Properties_SetProperties_Result::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Properties_SetProperties_Result::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Properties_SetProperties_Result::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Properties_SetProperties_Result::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties_SetProperties_Result::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Properties_SetProperties_Result* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Properties_SetProperties_Result*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Properties_SetProperties_Result::MergeFrom(const Properties_SetProperties_Result& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Properties_SetProperties_Result::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties_SetProperties_Result::CopyFrom(const Properties_SetProperties_Result& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties_SetProperties_Result::IsInitialized() const {

  return true;
}

void Properties_SetProperties_Result::Swap(Properties_SetProperties_Result* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Properties_SetProperties_Result::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_SetProperties_Result_descriptor_;
  metadata.reflection = Properties_SetProperties_Result_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Properties_SetProperties::Properties_SetProperties()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Properties_SetProperties::InitAsDefaultInstance() {
}

Properties_SetProperties::Properties_SetProperties(const Properties_SetProperties& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Properties_SetProperties::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Properties_SetProperties::~Properties_SetProperties() {
  SharedDtor();
}

void Properties_SetProperties::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Properties_SetProperties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties_SetProperties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_SetProperties_descriptor_;
}

const Properties_SetProperties& Properties_SetProperties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Properties_SetProperties* Properties_SetProperties::default_instance_ = NULL;

Properties_SetProperties* Properties_SetProperties::New() const {
  return new Properties_SetProperties;
}

void Properties_SetProperties::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Properties_SetProperties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Properties_SetProperties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Properties_SetProperties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Properties_SetProperties::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties_SetProperties::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Properties_SetProperties* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Properties_SetProperties*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Properties_SetProperties::MergeFrom(const Properties_SetProperties& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Properties_SetProperties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties_SetProperties::CopyFrom(const Properties_SetProperties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties_SetProperties::IsInitialized() const {

  return true;
}

void Properties_SetProperties::Swap(Properties_SetProperties* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Properties_SetProperties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_SetProperties_descriptor_;
  metadata.reflection = Properties_SetProperties_reflection_;
  return metadata;
}


// -------------------------------------------------------------------

#ifndef _MSC_VER
#endif  // !_MSC_VER

Properties::Properties()
  : ::google::protobuf::Message() {
  SharedCtor();
}

void Properties::InitAsDefaultInstance() {
}

Properties::Properties(const Properties& from)
  : ::google::protobuf::Message() {
  SharedCtor();
  MergeFrom(from);
}

void Properties::SharedCtor() {
  _cached_size_ = 0;
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
}

Properties::~Properties() {
  SharedDtor();
}

void Properties::SharedDtor() {
  if (this != default_instance_) {
  }
}

void Properties::SetCachedSize(int size) const {
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Properties::descriptor() {
  protobuf_AssignDescriptorsOnce();
  return Properties_descriptor_;
}

const Properties& Properties::default_instance() {
  if (default_instance_ == NULL) protobuf_AddDesc_server_2dapi_2eproto();
  return *default_instance_;
}

Properties* Properties::default_instance_ = NULL;

Properties* Properties::New() const {
  return new Properties;
}

void Properties::Clear() {
  ::memset(_has_bits_, 0, sizeof(_has_bits_));
  mutable_unknown_fields()->Clear();
}

bool Properties::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) if (!(EXPRESSION)) return false
  ::google::protobuf::uint32 tag;
  while ((tag = input->ReadTag()) != 0) {
    if (::google::protobuf::internal::WireFormatLite::GetTagWireType(tag) ==
        ::google::protobuf::internal::WireFormatLite::WIRETYPE_END_GROUP) {
      return true;
    }
    DO_(::google::protobuf::internal::WireFormat::SkipField(
          input, tag, mutable_unknown_fields()));
  }
  return true;
#undef DO_
}

void Properties::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
  if (!unknown_fields().empty()) {
    ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
        unknown_fields(), output);
  }
}

::google::protobuf::uint8* Properties::SerializeWithCachedSizesToArray(
    ::google::protobuf::uint8* target) const {
  if (!unknown_fields().empty()) {
    target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
        unknown_fields(), target);
  }
  return target;
}

int Properties::ByteSize() const {
  int total_size = 0;

  if (!unknown_fields().empty()) {
    total_size +=
      ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
        unknown_fields());
  }
  GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
  _cached_size_ = total_size;
  GOOGLE_SAFE_CONCURRENT_WRITES_END();
  return total_size;
}

void Properties::MergeFrom(const ::google::protobuf::Message& from) {
  GOOGLE_CHECK_NE(&from, this);
  const Properties* source =
    ::google::protobuf::internal::dynamic_cast_if_available<const Properties*>(
      &from);
  if (source == NULL) {
    ::google::protobuf::internal::ReflectionOps::Merge(from, this);
  } else {
    MergeFrom(*source);
  }
}

void Properties::MergeFrom(const Properties& from) {
  GOOGLE_CHECK_NE(&from, this);
  mutable_unknown_fields()->MergeFrom(from.unknown_fields());
}

void Properties::CopyFrom(const ::google::protobuf::Message& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

void Properties::CopyFrom(const Properties& from) {
  if (&from == this) return;
  Clear();
  MergeFrom(from);
}

bool Properties::IsInitialized() const {

  return true;
}

void Properties::Swap(Properties* other) {
  if (other != this) {
    _unknown_fields_.Swap(&other->_unknown_fields_);
    std::swap(_cached_size_, other->_cached_size_);
  }
}

::google::protobuf::Metadata Properties::GetMetadata() const {
  protobuf_AssignDescriptorsOnce();
  ::google::protobuf::Metadata metadata;
  metadata.descriptor = Properties_descriptor_;
  metadata.reflection = Properties_reflection_;
  return metadata;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace batch
}  // namespace proto
}  // namespace generated

// @@protoc_insertion_point(global_scope)

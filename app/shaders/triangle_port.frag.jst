#ifdef GL_ES
precision highp float;
#endif

varying vec3 distanceL;
varying vec3 distanceR;
varying vec3 distanceB;

uniform vec4 color;
uniform vec4 colorFar;
uniform float visible;
uniform float camFactor;
uniform float mouseDist;

uniform int antialias;

uniform int objectMap;
uniform vec3 objectId;


void main() {
    float alpha = 1.0;
    float disappearE = 0.5;
    float disappearS = 0.9;

    if (camFactor < disappearE) {
        alpha = 0.0;
    } else {
        if (antialias != 0) {
            float factor = camFactor * 6.0;
            float alphaL = min(1.0, factor * distanceL.x);
            float alphaR = min(1.0, factor * distanceR.x);
            float alphaB = min(1.0, factor * distanceB.x);
            alpha = alphaL * alphaR * alphaB;
        }
        if (camFactor < disappearS) {
           float disappearW = disappearS - disappearE;
           alpha = alpha * (1.0 - (disappearS - camFactor) / disappearW);
        }
    }

    float gradRange  = 300.0;
    float colorRange =  60.0;
    vec4  colorShow  = colorFar;
    if (mouseDist < colorRange) {
        colorShow = color;
    } else if (mouseDist < gradRange) {
        float coef = (mouseDist - colorRange) / (gradRange - colorRange);
        float coefR = 1.0 - coef;
        float distMix = coefR * coefR * coefR;
        colorShow = distMix * color + (1.0 - distMix) * colorFar;
    }

    if (objectMap == 0) {
        gl_FragColor = vec4(colorShow.xyz, alpha * colorShow.w);
    } else {
        gl_FragColor = vec4(objectId, 1.0);
    }
}

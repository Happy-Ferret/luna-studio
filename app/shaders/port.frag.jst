#ifdef GL_ES
precision highp float;
#endif

varying vec3 distanceL;
varying vec3 distanceR;
varying vec3 distanceB;

uniform vec4 color;
uniform vec4 colorFar;
uniform float visible;
uniform float camFactor;
uniform float mouseDist;

void main()
{
    float factor = camFactor * 6.0;

    float alphaL = min(1.0, factor * distanceL.x);
    float alphaR = min(1.0, factor * distanceR.x);
    float alphaB = min(1.0, factor * distanceB.x);

    float disappearS = 0.9;
    float disappearE = 0.5;
    float disappearW = disappearS - disappearE;

    float alpha = alphaL * alphaR * alphaB;
    if (camFactor < disappearE) {
        alpha = 0.0;
    } else  if (camFactor < disappearS) {
        alpha = alpha * (1.0 - (disappearS - camFactor) / disappearW);
    }

    float distMix  = 0.0;
    float gradRange  = 120.0;
    float colorRange =  50.0;
    if (mouseDist < colorRange) {
        distMix = 1.0;
    } else if (mouseDist < gradRange) {
        distMix = 1.0 - (mouseDist - colorRange) / (gradRange - colorRange);
    }

    vec4 colorShow = distMix * color + (1.0 - distMix) * colorFar;

    gl_FragColor = vec4(colorShow.xyz, alpha * colorShow.w);
}

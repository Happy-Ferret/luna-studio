#ifdef GL_ES
precision highp float;
#endif

uniform vec4 color;
uniform float visible;
uniform float camFactor;
uniform vec3 size;

varying vec2 distance;

void main()
{
    if (visible < 1.0) discard;

    bool antialias = true;

    float width = 6.0;
    float alpha = 1.0;

    if (antialias) {
        float dx = 1.0 - abs(distance.x);
        float dy = 1.0 - abs(distance.y);

        float factor = camFactor / width;
        float factorX = factor * abs(size.x);
        float factorY = factor * abs(size.y);

        float alphaX = min(1.0, factorX * dx);
        float alphaY = min(1.0, factorY * dy);


        float coef = 1.0;
        float idx = 1.0 - min(1.0, abs(distance.x * coef));
        float idy = 1.0 - min(1.0, abs(distance.y * coef));

        float ifactor = camFactor / (width * 2.0);
        float ifactorX = ifactor * abs(size.x * coef);
        float ifactorY = ifactor * abs(size.y * coef);

        float diffRatio = 0.9;
        float ialphaX = min(diffRatio, ifactorX * idx);
        float ialphaY = min(diffRatio, ifactorY * idy);

        float ialpha = 1.0 - (ialphaX * ialphaY);
        alpha = min(alphaX * alphaY, ialpha);
    }

    gl_FragColor = vec4(color.xyz, color.w * alpha);
}

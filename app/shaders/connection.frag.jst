#ifdef GL_ES
precision highp float;
#endif

varying float distance;
varying float distanceV;

uniform vec4 color;
uniform float visible;
uniform float camFactor;

void main()
{
  if (visible < 1.0) discard;

  float d = abs(distance);
  float v = abs(distanceV);

  float camFactorDelta = camFactor - 1.0;
  float rimCamFactor  = 1.0;
  float blurCamFactor = 1.0;
  if (camFactorDelta > 0.0) {
    rimCamFactor  += camFactorDelta / 25.0;
    blurCamFactor += camFactorDelta / 1.0;
  } else if (camFactorDelta < 0.0) {
    rimCamFactor  += camFactorDelta / 5.0;
    blurCamFactor += camFactorDelta / 1.0;
  }

  float blurRef = 0.25;
  float  rimRef = 0.18;

  float blurWidth = blurRef / blurCamFactor;
  float r1 =         rimRef /  rimCamFactor;
  float r2 = r1 + blurWidth;

  float alpha = 0.0;
  float origAlpha = color.w;
  vec3 colorShow = vec3(color);
  if (d < r1) {
    alpha = 1.0;
  } else if (d < r2) {
    alpha = (r2 - d) / blurWidth;
    // colorShow = vec3(alpha, 0.0, 0.0); alpha = 1.0; // for test
  } else {
    // colorShow = vec3(0.0, 1.0, 0.0); alpha = 1.0; // for test
  }

  gl_FragColor = vec4(colorShow, alpha * origAlpha * v);
}

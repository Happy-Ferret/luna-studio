#ifdef GL_ES
precision highp float;
#endif
uniform int   selected;

uniform vec3  unselectedColor;
uniform vec3  selectedColor;


precision mediump float;

uniform float angle;
uniform int portCount;
uniform vec4 color;

<%= require('shaders/stdlib')() %>

void main(void) {

    vec3 local   = vec3(luv * size, 0.0);
    vec3 ulocal  = local * dpr;
    vec2 p       = ulocal.xy - size / 2.0;


    if (objectMap == 1) {
        gl_FragColor = vec4(objectId, sdf_sharp(sdf_ball(p, 20.0)));
    } else {

        float selectedShape = sdf_merge(
                sdf_ring(p, 25.0, 3.0),
                sdf_intersect(
                    sdf_pie(sdf_rotateCCW(p, 1.0 * M_PI / 4.0), M_PI / 2.0),
                    sdf_subtract(
                      sdf_ball(p, 22.0),
                      sdf_rect(p + vec2(-12.5, 12.5), vec2(25.0, 25.0), vec4(0.0, 0.0, 0.0, 5.0))

                    )
                )
            );
        gl_FragColor = vec4(selectedColor, float(selected) * sdf_aa(selectedShape));
    }
}

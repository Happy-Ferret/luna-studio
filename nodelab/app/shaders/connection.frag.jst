precision mediump float;

uniform vec4 color;
uniform int  highlight;

<%= require('shaders/stdlib')() %>

void main(void) {

    vec3 local   = vec3(luv * size, 0.0);
    vec3 ulocal  = local * dpr;
    vec2 p       = ulocal.xy - size / 2.0;

    float line = sdf_rect(p, vec2(size.x - 10.0, 3.0));

    line = sdf_merge(line, sdf_triangle(sdf_rotateCCW(p - vec2(size.x / 2.0 - 6.0, 0.0), M_PI/6.0), 6.0));

    float bg   = sdf_rect(p, vec2(size.x - 10.0, 5.0));
    if (objectMap == 1) {
        gl_FragColor = vec4(objectId, sdf_sharp(line));
    } else {
        gl_FragColor = vec4(0.0, 0.0, 0.0,      sdf_aa(bg));
        gl_FragColor = mix(gl_FragColor, color, sdf_aa(line));
    }
}

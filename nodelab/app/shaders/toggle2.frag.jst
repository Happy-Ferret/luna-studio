precision mediump float;

uniform int value;

<%= require('shaders/stdlib')() %>

void main(void) {
    if (objectMap == 1) discard;

    vec3 local   = vec3(luv * size, 0.0);
    vec3 ulocal  = local * dpr;
    vec2 p       = ulocal.xy - size / 2.0;

    float width  = size.x;
    float height = size.y;
    float toggleWidth  = width * 0.5;
    float toggleHeight = height * 0.8;

    float roundFactor = 2.0;
    vec4 roundVector = roundFactor * vec4(1.0, 1.0, 1.0, 1.0);

    float shift = 0.8 * (float(value) * width / 2.0 - width / 4.0);

    float gRect   = sdf_rect(p, vec2(width, height), roundVector);
    float gToggle = sdf_rect(translate(p, vec2(shift, 0.0)), vec2(toggleWidth, toggleHeight), roundVector);

    vec4 colorBackground = vec4(0.6, 0.6, 0.6, 1.0);
    vec4 colorToggle     = vec4(0.2, 0.2, 0.2, 1.0);

    gl_FragColor = vec4(0.0, 0.3, 0.0, 1.0);

    gl_FragColor = mix(colorBackground, gl_FragColor, 1.0 - sdf_aa(gRect));
    gl_FragColor = mix(colorToggle,     gl_FragColor, 1.0 - sdf_aa(gToggle));
}

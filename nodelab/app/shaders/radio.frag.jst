precision mediump float;

uniform int value;

<%= require('shaders/stdlib')() %>

void main(void) {
    if (objectMap == 1) discard;

    vec3 local   = vec3(luv * size, 0.0);
    vec3 ulocal  = local * dpr;
    vec2 p       = ulocal.xy - size / 2.0;

    float radius = min(size.x, size.y) / 2.0 * 0.8;

    float border      = radius * 0.1;
    float radiusOuter = radius * 1.0;
    float radiusInner = radius * 0.6;
    float radiusRadio = radius * 0.4;

    float gDisk     = sdf_ball(p, radiusOuter);
    float gCircle   = sdf_borderOut(border, sdf_sphere(p, radiusInner));
    float gRadio    = sdf_ball(p, radiusRadio);

    vec4 colorBackground = vec4(0.6, 0.6, 0.6, 1.0);
    vec4 colorCircle     = vec4(0.2, 0.2, 0.2, 1.0);

    gl_FragColor = vec4(0.0, 0.0, 0.0, 0.0);

    gl_FragColor = mix(colorBackground, gl_FragColor, 1.0 - sdf_aa(gDisk));
    gl_FragColor = mix(colorCircle,     gl_FragColor, 1.0 - sdf_aa(gCircle));
    gl_FragColor = mix(colorCircle,     gl_FragColor, 1.0 - sdf_aa(gRadio) * float(1 - value));
}


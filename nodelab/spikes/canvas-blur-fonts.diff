diff --git a/nodelab/app/assets/index.html b/nodelab/app/assets/index.html
index aac1fa6..ea3760d 100644
--- a/nodelab/app/assets/index.html
+++ b/nodelab/app/assets/index.html
@@ -30,6 +30,7 @@
     };
     require('app').start();
   </script>
+    <svg id="svg" xmlns="http://www.w3.org/2000/svg" ><text id="text" x="0" y="0" style="fill: #ffffff; filter:url(#blur-effect-2); font: 72px sans-serif; ">ABC∂€ß°•</text> <filter id="blur-effect-2"> <feGaussianBlur stdDeviation="1" /> </filter> </svg>

 </body>
 </html>
diff --git a/nodelab/app/js/Widget/Button.coffee b/nodelab/app/js/Widget/Button.coffee
index 7c99cd2..2292d47 100644
--- a/nodelab/app/js/Widget/Button.coffee
+++ b/nodelab/app/js/Widget/Button.coffee
@@ -56,17 +56,74 @@ class Button extends BaseWidget
      @labelText = text
      @mesh.remove @label if @label

-     geometry = createText
-       text:  text
-       font:  font
-       align: 'center'
+     svg = document.getElementById('svg');
+     $(svg.getElementById('text')).html(@labelText)
+
+     bbox = document.getElementById('svg').getElementById('text').getBBox();
+     console.log(text, bbox)
+     unless bbox.width == 0 or bbox.height == 0
+       canvas = document.createElement('canvas');
+  #      #
+  #      # console.log(Math.pow(2, Math.ceil(Math.log2(bbox.width))));
+       document.getElementById('svg').getElementById('text').setAttribute('y', bbox.height)
+       textWidth  = Math.pow(2, Math.ceil(Math.log2(bbox.width - bbox.x)))
+       textHeight = Math.pow(2, Math.ceil(Math.log2(bbox.height - bbox.y)))
+       console.log(text, bbox, textWidth, textHeight)
+       svg.setAttribute('width',  textWidth);
+       svg.setAttribute('height', textHeight);
+       canvas.width  = textWidth;
+       canvas.height = textHeight;
+
+       texture = new THREE.Texture(canvas)
+       context = canvas.getContext('2d');
+       DOMURL  = window.URL || window.webkitURL || window;
+       img = new Image();
+       svg = new Blob([document.getElementById('svg').outerHTML], {
+         type: 'image/svg+xml;charset=utf-8'
+       });
+       url = DOMURL.createObjectURL(svg);
+
+       img.onload = ->
+         context.drawImage(img, 0, 0); #textHeight - bbox.height);
+         console.log(url)
+         texture.needsUpdate = true
+
+         #// TODO: free url blob resource
+       img.src = url;
+
+
+   # document.body.appendChild(img);
+
+       texture = new THREE.Texture(canvas)
+
+       material = new THREE.ShaderMaterial
+        uniforms:
+          opacity:   { type: 'f', value: 1 },
+          smooth:    { type: 'f', value: 1 / 2 },
+          map:       { type: 't', value: texture },
+          color:     { type: 'c', value: new THREE.Color(0xffff00) },
+          width:     { type: 'f', value: 0 },
+          objectMap: $$.commonUniforms.objectMap,
+          camFactor: $$.commonUniforms.camFactor,
+          zoomScaling: { type: 'i', value: 0}
+        vertexShader:   require('shaders/font.vert')(),
+        fragmentShader: require('shaders/font.frag')(),
+        transparent:    true,
+        side:           THREE.DoubleSide,
+        blending:       THREE.NormalBlending
+
+       geometry = new THREE.PlaneBufferGeometry(1,1)
+       geometry.applyMatrix( new THREE.Matrix4().makeTranslation(0.5, 0.5, 0.0))
+
+       @label = new THREE.Mesh geometry, material

-     @labelTextWidth = calculateTextWidth(text) * config.fontSize
+       @mesh.add(@label)

-     material = textMaterial()
-     @label = new THREE.Mesh geometry, material
-     @label.scale.multiplyScalar config.fontSize
-     @mesh.add(@label)
+       @label.scale.x = textWidth / 4
+       @label.scale.y =  -textHeight / 4
+       @label.position.z = 1
+       @labelTextWidth = bbox.width / 4
+       # @label.rotation.x = Math.PI

      @relayout()

@@ -97,7 +154,7 @@ class Button extends BaseWidget
     @iconUniforms.size.value.set @height, @height
     if @label
       @label.position.x = @width / 2.0 - @labelTextWidth / 2.0
-      @label.position.y = @height/ 2.0 + 5.0
+      @label.position.y = @height

     if @icon
       @icon.scale.set @height, @height, 1.0

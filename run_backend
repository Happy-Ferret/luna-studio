#!/usr/bin/env python3

import scripts_build.atom_prepare as ap
import scripts_build.system as system

import multiprocessing
import signal
import subprocess
import os

third_party_path = ap.prep_path('../dist/third-party/')
supervisor_config_path = ap.prep_path('../dist/config/supervisor/supervisord.conf')
supervisor_path = ap.prep_path('../dist/config/supervisor/')


def supervisord_path(third_party_path):
    if system.system == system.systems.WINDOWS:
        print("should have installed and running backend")
    elif system.system == system.systems.LINUX:
        return third_party_path + '/supervisord/supervisord'
    elif system.system == system.systems.DARWIN:
        return third_party_path + '/supervisord/supervisord'
    else: print('unknown system')



def run_backend ():
    supervisord = supervisord_path(third_party_path)
    os.chdir(supervisor_path)
    popen = subprocess.Popen((supervisord, '-n', '-c', supervisor_config_path), stdout=subprocess.PIPE)
    try:
        popen.wait()
    except KeyboardInterrupt:
        try:
           popen.terminate()
        except OSError:
            pass
        popen.wait()
    output = popen.stdout.read()
    print(output)


if __name__ == '__main__':
    run_backend ()
